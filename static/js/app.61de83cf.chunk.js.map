{"version":3,"sources":["assets/images/bg.jpg","assets/images/specialPiano.png","assets/images/GrandPiano.png","assets/images/star.png","assets/images/au_logo_shadow.png","assets/images/Chembalo.png","assets/images/UpRightPiano.png","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","api/operations/mutations/login.ts","components/WaitDialog.tsx","models/models.ts","api/asyncStorage.ts","components/ErrorDialog.tsx","api/client.ts","screens/Login.tsx","screens/Signup/components/Agreement.tsx","components/CustomPicker/CustomPicker.tsx","components/CustomPicker/CustomPickerField.tsx","api/operations/mutations/signUp.ts","components/InfoDialog.tsx","screens/Signup/SignUp.tsx","screens/ForgotPassword.tsx","screens/ForgotPasswordSuccess.tsx","api/operations/queries/users.ts","hooks/useUsers.ts","helpers/helpers.ts","components/UserInfo.tsx","screens/Users.tsx","navigation/CustomSidebarMenu.tsx","api/operations/queries/me.ts","screens/Profile.tsx","hooks/useLocal.ts","api/operations/queries/classroom.ts","components/InstrumentInfo.tsx","components/InstrumentItem.tsx","hooks/useTimeLeft.ts","helpers/constants.ts","api/operations/mutations/makeDecisionOnPendingClassroom.ts","components/OccupantInfo.tsx","api/operations/mutations/addUserToQueue.ts","helpers/queue/getInLine.ts","api/operations/mutations/removeUserFromQueue.ts","helpers/queue/removeFromLine.ts","components/ClassroomQueueControlButtons.tsx","api/operations/mutations/reserveFreeClassroom.ts","components/ClassroomInfo.tsx","helpers/sortAB.ts","components/ClassroomsBrowser/FreeClassroomCell.tsx","components/ClassroomsBrowser/OccupiedClassroomCell.tsx","components/ClassroomsBrowser/ReservedClassroomCell.tsx","components/ClassroomsBrowser/PendingClassroomCell.tsx","components/ClassroomsBrowser/OccupiedByCurrentUserClassroomCell.tsx","components/ClassroomsBrowser/ClassroomsBrowser.tsx","api/operations/queries/classrooms.ts","api/operations/subscriptions/classrooms.ts","api/operations/subscriptions/user.ts","helpers/filterDisabledForQueue.ts","helpers/filterSavedFIlters.ts","components/ConfirmLineOut.tsx","screens/ClassroomsList/Buttons.tsx","api/operations/queries/generalQueueSize.ts","api/operations/subscriptions/generalQueueSize.ts","hooks/useClassrooms.tsx","screens/ClassroomsList/SavedFilters.tsx","screens/ClassroomsList/InstrumentsList.tsx","components/CustomRating/CustomRating.tsx","screens/ClassroomsList/InstrumentFilters.tsx","screens/ClassroomsList/Filters.tsx","screens/ClassroomsList/helpers.ts","api/operations/queries/generalQueuePosition.ts","api/operations/subscriptions/generalQueuePosition.ts","screens/ClassroomsList/ClassroomsAppBar.tsx","components/Log.tsx","components/ConfirmContinueDesiredQueue.tsx","hooks/usePrevious.ts","components/InlineDialog.tsx","components/QueueOutDialog.tsx","screens/ClassroomsList/ClassroomsList.tsx","screens/Splash.tsx","screens/PrivacyPolicy.tsx","navigation/index.tsx","App.tsx","node_modules/moment/locale sync /^/.//.*$","assets/images/au_logo.png","assets/images/key.png"],"names":["module","exports","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","red","blue","darkBlue","orange","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","LOGIN","gql","WaitDialog","visible","message","Portal","Dialog","dismissable","Title","textAlign","Content","Paragraph","ProgressBar","indeterminate","marginTop","ACCESS_RIGHTS","Mode","ErrorCodesUa","ErrorCodes","EmploymentTypes","EmploymentTypesUa","UserTypes","UserTypesUa","UserTypeColors","ActivityTypesColor","ActivityTypes","NotificationsTypes","AccountStatuses","UserQueueState","OccupiedState","DisabledState","ClassroomsFilterTypes","QueueState","QueueType","Langs","EnqueuedBy","setItem","key","value","a","async","AsyncStorage","JSON","stringify","console","log","getItem","then","result","parse","removeItem","ErrorDialog","hideDialog","onDismiss","marginBottom","Actions","Button","onPress","wsLink","WebSocketLink","uri","options","reconnect","connectionParams","token","authorization","subscriptionMiddleware","applyMiddleware","next","subscriptionClient","use","httpLink","createHttpLink","authLink","setContext","_","headers","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","concat","cache","InMemoryCache","typePolicies","Query","fields","me","read","meVar","lang","langVar","accessRights","accessRightsVar","mode","modeVar","minimalClassroomIds","minimalClassroomIdsVar","desirableClassroomIds","desirableClassroomIdsVar","isMinimalSetup","isMinimalSetupVar","pushNotificationToken","pushNotificationTokenVar","makeVar","UA","USER","PRIMARY","Login","route","navigation","useMutation","login","loading","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","modalActivator","setModalActivator","showError","setShowError","errorMessage","setErrorMessage","useEffect","styles","container","ImageBackground","source","require","bg","Image","logo","title","i18n","t","Surface","inputs","TextInput","label","input","onChangeText","e","secureTextEntry","selectionColor","right","Icon","name","prevState","length","variables","notificationToken","data","userErrors","code","user","graphQLErrors","button","disabled","navigate","uppercase","labelStyle","footer","StyleSheet","create","flex","alignItems","justifyContent","overflow","width","resizeMode","fontSize","fontWeight","elevation","borderRadius","paddingLeft","paddingRight","paddingBottom","height","opacity","langSwitcher","flexDirection","langImage","langImageSelected","Agreement","setCheckAgreement","wrapper","ScrollView","position","top","bottom","CustomPicker","setSelected","selected","items","searchText","setSearchText","filteredItems","setFilteredItems","filtered","filter","String","toLowerCase","includes","Modal","contentContainerStyle","Searchbar","placeholder","search","clearButtonMode","id","map","item","handlePress","borderBottomWidth","borderStyle","borderBottomColor","padding","margin","CustomPickerField","setIsVisited","checkValidation","underlineColor","visiblePicker","setVisiblePicker","showPicker","picker","pickerField","numberOfLines","IconButton","icon","pickerIcon","paddingVertical","SIGN_UP","InfoDialog","navigateToLogin","marginRight","currentYear","parseInt","moment","format","startYearsItems","userTypesData","POST_GRADUATE","STUDENT","windowHeight","Dimensions","get","SignUp","selectedDepartment","setSelectedDepartment","selectedDegree","setSelectedDegree","selectedStartYear","setSelectedStartYear","selectedType","setSelectedType","setVisible","visibleAgreement","setVisibleAgreement","visibleBackDialog","setVisibleBackDialog","firstName","setFirstName","lastName","setLastName","patronymic","setPatronymic","phoneNumber","setPhoneNumber","passwordConfirm","setPasswordConfirm","checkAgreement","departments","degrees","isSignupTouched","setIsSignupTouched","isLastNameValidated","setIsLastNameValidated","isFirstNameValidated","setIsFirstNameValidated","isEmailValidated","setIsEmailValidated","isPhoneValidated","setIsPhoneValidated","isPasswordValidated","setIsPasswordValidated","isPasswordConfirmValidated","setIsPasswordConfirmValidated","isStartYearValidated","setIsStartYearValidated","isDepartmentValidated","setIsDepartmentValidated","isDegreeValidated","setIsDegreeValidated","isStartYearModalVisited","setIsStartYearModalVisited","setIsDepartmentModalVisited","isDegreeModalVisited","setIsDegreeModalVisited","signup","error","checkLastNameValidation","checkFirstNameValidation","checkEmailValidation","test","checkPhoneValidation","checkPasswordValidation","checkPasswordConfirmValidation","checkStartYearValidation","checkDepartmentValidation","checkDegreeValidation","goBack","Error","validator","HelperText","type","Appbar","BackAction","subtitle","scrollView","Banner","actions","infoPanel","onBlur","keyboardType","forceTextInputFocus","agreement","Checkbox","status","uncheckedColor","navButtons","departmentId","degreeId","startYear","alert","signUpButton","left","paddingTop","textDecorationLine","ForgotPassword","ForgotPasswordSuccess","loginButton","GET_USERS","GET_USER_BY_ID","useUsers","users","setUsers","fetchPolicy","slice","sort","b","formatMinutesToMM","fullName","withInitials","nameTemp","charAt","typeStyle","occupied","isDisabled","student","employee","vacant","isNotFree","ISODateString","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","isTeacherType","TEACHER","CONCERTMASTER","ILLUSTRATOR","state","FREE","hasOwnClassroom","occupiedClassrooms","ownClassroom","find","classroom","OCCUPIED","RESERVED","isEnabledForCurrentDepartment","currentUser","chair","exclusivelyQueueAllowedDepartmentsInfo","some","department","isEnabledForQueue","ownClassroomId","isHidden","NOT_DISABLED","PENDING","UserInfo","userId","hideModal","useQuery","where","openPhoneNumber","Linking","openURL","containerStyle","ActivityIndicator","animating","occupantName","Divider","divider","phoneRow","extraPhoneNumbers","number","index","borderWidth","borderColor","Users","useNavigation","pages","setPages","currentPage","setCurrentPage","currentUserId","setCurrentUserId","UserElement","DataTable","Row","showModal","Cell","Action","dispatch","DrawerActions","openDrawer","dataTable","Header","header","alignSelf","list","Pagination","pagination","page","numberOfPages","onPageChange","sideMenuProfileIcon","iconStyle","marginHorizontal","customItem","userData","userName","logout","marginVertical","CustomSidebarMenu","SafeAreaView","size","DrawerContentScrollView","DrawerItemList","GET_ME","Profile","whiteText","marginBottomWhiteText","expireDate","marginLeft","useLocal","localVarName","GET_CLASSROOM","InstrumentInfo","instrument","instrumentType","intRate","Math","round","rate","Array","fill","toFixed","star","InstrumentItem","expanded","onTouchEnd","imageSource","useTimeLeft","minutesDuration","timeLeft","setTimeLeft","timeLeftInPer","setTimeLeftInPer","interval","useRef","current","setInterval","until","differenceInMs","diff","tempTime","duration","resultHHMMSS","hours","minutes","seconds","resultPercents","getTimeFromUntil","leftPer","hour","min","sec","clearInterval","MAKE_DECISION_ON_PENDING_CLASSROOM","occupationInfo","freeText","paddingHorizontal","occupantType","occupiedUntil","progressBar","spaceBottom30","OccupantInfo","date","userFullName","occupiedTotalTime","visibleBanner","setVisibleBanner","setLoading","makeDecision","decision","mutate","mutation","classroomName","continueWaitingForDesiredClassrooms","INLINE","isPendingForMe","progress","colors","Date","getHours","getMinutes","queueInfo","currentSession","skips","ADD_USER_TO_QUEUE","getInLine","minimalClassroomsIds","allClassroomIds","Set","minimalData","classroomId","MINIMAL","desirableData","DESIRED","enqueuedBy","SELF","REMOVE_USER_FROM_QUEUE","removeFromLine","deleteWhere","equals","IN_QUEUE_MINIMAL","ClassroomQueueControlButtons","queue","currentRecord","queueRecord","handleClassroomForQueue","minimalSet","has","delete","add","desiredSet","asyncHandleClassroomForQueue","exist","IN_QUEUE_DESIRED_AND_OCCUPYING","QUEUE_SETUP","RESERVE_FREE_CLASSROOM","ClassroomInfo","params","setClassroom","warning","warningText","DISABLED","comment","tags","isWing","Chip","selectedColor","tag","isOperaStudio","special","description","floor","instruments","OCCUPYING","reserveFreeClassroom","forEach","scheduleHeader","queueSetupButtons","sortAB","cellWidth","FreeClassroomCell","isEnabledForCurrentUser","TouchableHighlight","cell","free","cellHeader","notSpecial","space","checkMark","zIndex","timeLeftProgress","keyImage","tintColor","OccupiedClassroomCell","handleCheck","handleLongPress","cellStyle","onLongPress","ReservedClassroomCell","PendingClassroomCell","grid","flexWrap","getOutLine","getOutLineSingle","approve","queueSwitcher","gridDivider","ClassroomsBrowser","classrooms","isFree","isOccupiedByCurrentUser","isOccupied","isPending","isReserved","OccupiedByCurrentUserClassroomCell","GET_CLASSROOMS","GET_CLASSROOMS_NO_SCHEDULE","FOLLOW_CLASSROOMS","FOLLOW_USER","filterDisabledForQueue","filterSavedFilter","savedFilter","enabledClassrooms","isMinimal","minimalIds","desireIds","ConfirmLineOut","Buttons","sanctionedUntil","visibleModalError","setVisibleModalError","queueErrorMessage","visibleLineOut","setVisibleLineOut","availableClassroomsIds","savedFilters","mainFilter","main","GENERAL_QUEUE_SIZE","FOLLOW_GENERAL_QUEUE_SIZE","useClassrooms","setClassrooms","subscribeToMore","SavedFilters","setSavedFilters","isSaving","setIsSaving","inputName","setInputName","selectedFilter","setSelectedFilter","saveAsMainFilter","setSaveAsMainFilter","Headline","body","filterItem","itemRow","selectedItem","handleSelectFilter","bin","newFilters","splice","res","handleRemoveFilter","newFilterSection","mainFilterCheckbox","InstrumentsList","isGrandPianoOnly","setIsGrandPianoOnly","RadioButton","Group","onValueChange","newValue","handleSelect","CustomRating","count","setCount","stars","TouchableOpacity","handleRate","windowWidth","InstrumentFilters","setInstruments","visibleList","setVisibleList","visibleRate","setVisibleRate","showModalList","instrumentRow","newArray","removeInstrument","noInstrumentsLabel","newInstrumentRow","newInstrument","buttons","radioItem","checkbox","countInput","Filters","apply","setSpecial","withWing","setWithWing","onlyOperaStudio","setOnlyOperaStudio","visibleInstrumentFilters","setVisibleInstrumentFilters","getEnding","instrumentTypeOrder","GrandPiano","UpRightPiano","getClassroomsFilteredByInstruments","userInstrumentFilterInput","instrumentsFilterSorted","instA","instB","instrumentsFilter","classroomInstruments","classroomGrandPianoInd","getMinimumSatisfactoryInstrumentIndex","pop","classroomInstrumentInd","minimumRate","bestIndex","i","GENERAL_QUEUE_POSITION","FOLLOW_GENERAL_QUEUE_POSITION","ClassroomsAppBar","freeClassroomsAmount","subscribeToMorePosition","visibleSavedFilters","setVisibleSavedFilters","generalQueueSize","setGeneralQueueSize","generalQueuePosition","setGeneralQueuePosition","unsubscribeSize","document","updateQuery","prev","subscriptionData","unsubscribePosition","operaStudioOnly","filteredIds","Log","maxHeight","ConfirmContinueDesiredQueue","usePrevious","ref","InlineDialog","paragraph","QueueOutDialog","Stack","createStackNavigator","Home","appState","AppState","currentState","addEventListener","_handleAppStateChange","removeEventListener","nextAppState","match","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","ClassroomsList","initialParams","showLog","setShowLog","setFreeClassroomsAmount","showQueueInSuccess","setShownQueueInSuccess","showQueueOutSuccess","setShownQueueOutSuccess","userLoading","userError","subscribeToMoreUser","prevUserData","prevSession","unsubscribeClassrooms","unsubscribeUser","freeClassrooms","hiddenLogButton","delayLongPress","fullHidden","Splash","PrivacyPolicy","Navigation","colorScheme","NavigationContainer","DarkTheme","DefaultTheme","RootNavigator","Drawer","createDrawerNavigator","setCurrentUser","appIsReady","setAppIsReady","SplashScreen","warn","prepare","backHandler","BackHandler","Alert","exitApp","remove","drawerStyle","drawer","drawerContentOptions","activeBackgroundColor","drawerContent","App","roundness","primary","accent","Provider","StatusBar","locale","Localization","fallbacks","translations","en","ua","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","Object","resolve"],"mappings":"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","file":"static/js/app.61de83cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.5326a7ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/specialPiano.11c92757.png\";","module.exports = __webpack_public_path__ + \"static/media/GrandPiano.5e053f8a.png\";","module.exports = __webpack_public_path__ + \"static/media/star.f99f6a14.png\";","module.exports = __webpack_public_path__ + \"static/media/au_logo_shadow.0250c21a.png\";","module.exports = __webpack_public_path__ + \"static/media/Chembalo.5e053f8a.png\";","module.exports = __webpack_public_path__ + \"static/media/UpRightPiano.791ce387.png\";","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n  red: '#f91354',\n  blue: '#2b5dff',\n  darkBlue: '#2e287c',\n  orange: '#ffc000',\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n    mutation login($input: LoginInput!) {\r\n        login(input: $input) {\r\n            token\r\n            user {\r\n                id\r\n                firstName\r\n                patronymic\r\n                lastName\r\n                type\r\n                phoneNumber\r\n                extraPhoneNumbers\r\n                email\r\n                department {\r\n                  id\r\n                  name  \r\n                }\r\n                occupiedClassrooms {\r\n                state\r\n                until\r\n                classroom {\r\n                 id\r\n                 name\r\n                }\r\n                }\r\n                studentInfo {\r\n                  degree {\r\n                    name\r\n                  }\r\n                  startYear\r\n                  accountStatus\r\n                }\r\n                employeeInfo {\r\n                  employmentType\r\n                  accountStatus\r\n                }\r\n                queue {\r\n                  id\r\n                  classroom {\r\n                    id\r\n                    name\r\n                  }\r\n                  state\r\n                  type\r\n                }\r\n            }\r\n               \r\n            userErrors {\r\n                message\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;","import * as React from 'react';\nimport {Paragraph, Dialog, Portal, ProgressBar} from 'react-native-paper';\n\ninterface PropTypes {\n  message?: string;\n  visible: boolean;\n}\n\nexport default function WaitDialog({visible, message}: PropTypes) {\n  return (\n      <Portal>\n        <Dialog visible={visible} dismissable={false}>\n          <Dialog.Title style={{textAlign: 'center'}}>Зачекайте, будь ласка!</Dialog.Title>\n          <Dialog.Content>\n            {message && <Paragraph style={{textAlign: 'center'}}>{message}</Paragraph>}\n            <ProgressBar indeterminate style={{marginTop: 16}}/>\n          </Dialog.Content>\n        </Dialog>\n      </Portal>\n  );\n};","export enum ACCESS_RIGHTS {\r\n  USER,\r\n  DISPATCHER,\r\n  ADMIN\r\n}\r\n\r\nexport enum Mode {\r\n  PRIMARY = 'PRIMARY',\r\n  QUEUE_SETUP = 'QUEUE_SETUP',\r\n  INLINE = 'INLINE',\r\n  OWNER = 'OWNER'\r\n}\r\n\r\nexport enum ErrorCodesUa {\r\n  INVALID_PASSWORD = \"Невірний пароль\",\r\n  USER_NOT_FOUND = \"Користувача не знайдено\",\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  INVALID_PASSWORD = \"INVALID_PASSWORD\",\r\n  USER_NOT_FOUND = \"USER_NOT_FOUND\",\r\n}\r\n\r\nexport enum EmploymentTypes {\r\n  FULL_TIME = 'FULL_TIME',\r\n  PART_TIME = 'PART_TIME',\r\n  HOURLY = 'HOURLY',\r\n}\r\n\r\nexport enum EmploymentTypesUa {\r\n  FULL_TIME = 'Штатний співробітник',\r\n  PART_TIME = 'Часткова',\r\n  HOURLY = 'Погодинна',\r\n}\r\n\r\nexport enum UserTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMIN = \"ADMIN\",\r\n  DISPATCHER = \"DISPATCHER\",\r\n  PIANO_TUNER = \"PIANO_TUNER\",\r\n  STAFF = \"STAFF\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum UserTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMIN = \"Адмін\",\r\n  DISPATCHER = \"Диспетчер\",\r\n  PIANO_TUNER = \"Настроювач фортепіано\",\r\n  STAFF = \"Співробітник\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Іллюстратор\",\r\n  OTHER = \"Користувач\",\r\n}\r\n\r\nexport enum UserTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMIN = \"#ffa200\",\r\n  DISPATCHER = \"#ffa200\",\r\n  PIANO_TUNER = \"#ffa200\",\r\n  STAFF = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport enum ActivityTypesColor {\r\n  LECTURE = '#ffa200',\r\n  INDIVIDUAL_LESSON = '#2b5dff'\r\n}\r\n\r\nexport enum ActivityTypes {\r\n  LECTURE = 'LECTURE',\r\n  INDIVIDUAL_LESSON = 'INDIVIDUAL_LESSON'\r\n}\r\n\r\nexport enum NotificationsTypes {\r\n  OK = \"ok\",\r\n  ALERT = \"alert\",\r\n  DEFAULT = \"default\",\r\n}\r\n\r\nexport enum AccountStatuses {\r\n  ACTIVE = 'ACTIVE',\r\n  UNVERIFIED = 'UNVERIFIED',\r\n  ACADEMIC_LEAVE = 'ACADEMIC_LEAVE',\r\n  FROZEN = 'FROZEN'\r\n}\r\n\r\nexport type User = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: string | null;\r\n  classroom: ClassroomType;\r\n  queue: QueueRecord[];\r\n  queueInfo: UserQueueInfo;\r\n};\r\n\r\nexport type UserQueueInfo = {\r\n  id: number;\r\n  user: User;\r\n  sanctionedUntil: string;\r\n  currentSession: QueueSession\r\n}\r\n\r\nexport type QueueSession = {\r\n  id: number;\r\n  queueInfo: UserQueueInfo;\r\n  state: UserQueueState;\r\n  enqueuedBy: EnqueuedBy;\r\n  skips: number;\r\n  remainingOccupationTime: string;\r\n}\r\n\r\nexport enum UserQueueState {\r\n  IN_QUEUE_MINIMAL = 'IN_QUEUE_MINIMAL',\r\n  IN_QUEUE_DESIRED_AND_OCCUPYING = 'IN_QUEUE_DESIRED_AND_OCCUPYING',\r\n  QUEUE_RESERVED_NOT_OCCUPYING = 'QUEUE_RESERVED_NOT_OCCUPYING',\r\n  OCCUPYING = 'OCCUPYING',\r\n}\r\n\r\nexport type CurrentUser = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: Date | null;\r\n  occupiedClassrooms: {\r\n    id: number;\r\n    state: OccupiedState;\r\n    until: string;\r\n    classroom: ClassroomType;\r\n    user: User;\r\n  }[];\r\n  queue: QueueRecord[];\r\n}\r\n\r\nexport type StudentInfo = {\r\n  degree: Degree;\r\n  startYear: number;\r\n  accountStatus: AccountStatuses;\r\n};\r\n\r\nexport type EmployeeInfo = {\r\n  employmentType: EmploymentTypes;\r\n  accountStatus: AccountStatuses;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  user: User | null;\r\n  until: Date | null;\r\n  state: OccupiedState;\r\n};\r\n\r\nexport enum OccupiedState {\r\n  FREE = 'FREE',\r\n  OCCUPIED = 'OCCUPIED',\r\n  PENDING = 'PENDING',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport type Comment = {\r\n  id: number;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  persNumber: number;\r\n  comments: Comment | null;\r\n  classroom: ClassroomType;\r\n};\r\n\r\nexport enum DisabledState {\r\n  DISABLED = 'DISABLED',\r\n  NOT_DISABLED = 'NOT_DISABLED'\r\n}\r\n\r\nexport type DisabledInfo = {\r\n  state: DisabledState;\r\n  comment: string;\r\n  until: string;\r\n};\r\n\r\nexport type ScheduleUnitType = {\r\n  id: number;\r\n  user: User;\r\n  classroom: ClassroomType;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: string;\r\n};\r\n\r\nexport type ClassroomType = {\r\n  id: number;\r\n  name: string;\r\n  chair: {\r\n    id: number;\r\n    name: string;\r\n    faculty: Faculty;\r\n    users: User[];\r\n    exclusivelyQueueAllowedDepartmentsInfo: {\r\n      department: Department | null }[];\r\n  } | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnitType>;\r\n  isHidden: boolean;\r\n};\r\n\r\nexport type RegisterUnit = {\r\n  id: number;\r\n  user: User;\r\n  nameTemp: string;\r\n  classroom: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  start: string;\r\n  end: string;\r\n};\r\n\r\nexport type Degree = {\r\n  id: number\r\n  name: string;\r\n  startMonth: number;\r\n  startDay: number;\r\n  durationMonths: number;\r\n};\r\n\r\nexport type Faculty = {\r\n  id: number;\r\n  name: string;\r\n  departments: Department[];\r\n  users: User[];\r\n}\r\n\r\nexport type Department = {\r\n  id: number;\r\n  name: string;\r\n  faculty: Faculty;\r\n  users: User[];\r\n};\r\n\r\nexport type MenuElement = {\r\n  text: string;\r\n  path: string;\r\n  icon: string;\r\n  exact?: boolean;\r\n  rights: string;\r\n};\r\n\r\nexport enum ClassroomsFilterTypes {\r\n  ALL = 'ALL',\r\n  FREE = 'FREE',\r\n  SPECIAL = 'SPECIAL',\r\n  INLINE = 'INLINE'\r\n}\r\n\r\nexport enum QueueState {\r\n  ACTIVE = 'ACTIVE',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum QueueType {\r\n  MINIMAL = 'MINIMAL',\r\n  DESIRED = 'DESIRED'\r\n}\r\n\r\nexport type QueueRecord = {\r\n  id: number;\r\n  user: User;\r\n  date: string;\r\n  classroom: ClassroomType;\r\n  state: QueueState;\r\n  type: QueueType;\r\n}\r\n\r\nexport type SavedFilterT = {\r\n  minimalClassroomIds: number[];\r\n  desirableClassroomIds: number[];\r\n  name: string;\r\n  main: boolean;\r\n}\r\n\r\nexport enum Langs {\r\n  EN = 'EN',\r\n  UA = 'UA'\r\n}\r\n\r\nexport enum EnqueuedBy {\r\n  SELF = 'SELF',\r\n  DISPATCHER = 'DISPATCHER'\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage'\n\n\nexport const setItem = async (key: string, value: any) => {\n  try {\n    await AsyncStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getItem = async (key: string) => {\n  let result;\n  try {\n    await AsyncStorage.getItem(key).then(value => {\n      if (value !== null) {\n        result = JSON.parse(value as string)\n      }\n    });\n    return result;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const removeItem = async (key: string) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (e) {\n    console.log(e);\n  }\n};","import * as React from 'react';\nimport {Dialog, Portal, Button} from 'react-native-paper';\nimport {Text} from 'react-native';\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  message?: string;\n}\n\nexport default function ErrorDialog({visible, hideDialog, message}: PropTypes) {\n  return (\n    <Portal>\n      <Dialog visible={visible} onDismiss={hideDialog}>\n        <Dialog.Title style={{color: '#f91354'}}>Упс!</Dialog.Title>\n        <Dialog.Content>\n          <Text style={{marginBottom: -20}}>{!message ? 'Щось пішло не так' : message}</Text>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={hideDialog}>Закрити</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};","import {ApolloClient, createHttpLink, InMemoryCache, makeVar, split} from \"@apollo/client\";\r\nimport {ACCESS_RIGHTS, Langs, Mode, User} from \"../models/models\";\r\nimport {WebSocketLink} from '@apollo/client/link/ws';\r\nimport {getMainDefinition} from \"@apollo/client/utilities\";\r\nimport {setContext} from \"@apollo/client/link/context\";\r\nimport {getItem} from \"./asyncStorage\";\r\n\r\nconst wsLink: any = new WebSocketLink({\r\n    uri: 'wss://api.auditoriu.me/',\r\n    options: {\r\n      reconnect: true,\r\n      connectionParams: async () => {\r\n        const token = await getItem('token');\r\n        return {\r\n          authorization: token ? `Bearer ${token}` : \"\",\r\n        }\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst subscriptionMiddleware = {\r\n  applyMiddleware: async (options: any, next: any) => {\r\n    const token = await getItem('token');\r\n    options.authorization = token ? `Bearer ${token}` : \"\"\r\n    next()\r\n  },\r\n}\r\n\r\nwsLink.subscriptionClient.use([subscriptionMiddleware]);\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://api.auditoriu.me/'\r\n});\r\n\r\nconst authLink = setContext(async function (_, {headers}) {\r\n  const token = await getItem('token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({query}) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  httpLink,\r\n);\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(splitLink),\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          me: {\r\n            read() {\r\n              return meVar();\r\n            },\r\n          },\r\n          lang: {\r\n            read() {\r\n              return langVar();\r\n            },\r\n          },\r\n          accessRights: {\r\n            read() {\r\n              return accessRightsVar();\r\n            },\r\n          },\r\n          mode: {\r\n            read() {\r\n              return modeVar();\r\n            },\r\n          },\r\n          minimalClassroomIds: {\r\n            read() {\r\n              return minimalClassroomIdsVar();\r\n            },\r\n\r\n          },\r\n          desirableClassroomIds: {\r\n            read() {\r\n              return desirableClassroomIdsVar();\r\n            },\r\n          },\r\n          isMinimalSetup: {\r\n            read() {\r\n              return isMinimalSetupVar();\r\n            },\r\n          },\r\n          pushNotificationToken: {\r\n            read() {\r\n              return pushNotificationTokenVar();\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n});\r\n\r\nexport const meVar = makeVar<User | null>(null);\r\nexport const langVar = makeVar<Langs>(Langs.UA);\r\nexport const accessRightsVar = makeVar(ACCESS_RIGHTS.USER);\r\nexport const modeVar = makeVar(Mode.PRIMARY);\r\nexport const minimalClassroomIdsVar = makeVar<number[]>([]);\r\nexport const desirableClassroomIdsVar = makeVar<number[]>([]);\r\nexport const isMinimalSetupVar = makeVar(true);\r\nexport const pushNotificationTokenVar = makeVar('');","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport {Image, ImageBackground, StyleSheet, TouchableHighlight} from 'react-native';\nimport {Button, Surface, TextInput} from 'react-native-paper';\nimport {Text, View} from '../components/Themed';\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {LOGIN} from \"../api/operations/mutations/login\";\nimport WaitDialog from \"../components/WaitDialog\";\nimport {getItem, setItem} from \"../api/asyncStorage\";\nimport ErrorDialog from \"../components/ErrorDialog\";\nimport {ErrorCodes, ErrorCodesUa, Langs, Mode, QueueState, QueueType, User} from \"../models/models\";\nimport {desirableClassroomIdsVar, langVar, meVar, minimalClassroomIdsVar, modeVar} from \"../api/client\";\nimport PushNotification from \"./PushNotification\";\nimport {GET_LANG} from \"../api/operations/queries/lang\";\nimport i18n from \"i18n-js\";\n\nexport default function Login({route, navigation}: any) {\n  const [login, {loading}] = useMutation(LOGIN);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [modalActivator, setModalActivator] = useState<boolean | null>(null);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [pushNotificationToken, setPushNotificationToken] = useState('');\n  // const {data: {lang}} = useQuery(GET_LANG);\n\n  useEffect(() => {\n    if (modalActivator !== null) {\n      setShowError(true);\n    }\n  }, [modalActivator]);\n\n  // useEffect(() => {\n  //   getItem('lang').then(res => {\n  //     if (res) {\n  //       langVar(res);\n  //     } else {\n  //       setItem('lang', lang);\n  //     }\n  //   });\n  // }, []);\n\n  const handleChangeLang = async (lng: Langs) => {\n    // await setItem('lang', lng);\n    // langVar(lng);\n  };\n\n  const hideError = () => {\n    setShowError(false);\n  };\n\n  const handleSubmit = async () => {\n    let result: any;\n    if (email.length && password.length) {\n      try {\n        result = await login({\n          variables: {\n            input: {\n              email: email,\n              password: password,\n              notificationToken: pushNotificationToken\n            }\n          }\n        });\n        if (result?.data.login.userErrors?.length) {\n          setErrorMessage(ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes]);\n          setModalActivator(prevState => !prevState);\n        } else {\n          const user: User = result?.data.login.user;\n          const token: string = result?.data.login.token;\n          await setItem('user', user);\n          await setItem('token', token);\n          // if (user.queue.length) {\n          //   const minimal = user.queue.filter(({type, state}) => {\n          //     return type === QueueType.MINIMAL && state === QueueState.ACTIVE;\n          //   });\n          //   const desired = user.queue.filter(({type, state}) => {\n          //     return type === QueueType.DESIRED && state === QueueState.ACTIVE;\n          //   });\n          //   modeVar(Mode.INLINE);\n          //   minimalClassroomIdsVar(minimal.map(({classroom: {id}}) => id));\n          //   desirableClassroomIdsVar(desired.map(({classroom: {id}}) => id));\n          // }\n          meVar(user);\n        }\n      } catch (e) {\n        setErrorMessage(e?.graphQLErrors[0]?.message || JSON.stringify(e));\n        setModalActivator(prevState => !prevState);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/*<PushNotification setPushNotificationToken={setPushNotificationToken}/>*/}\n      <ImageBackground source={require('../assets/images/bg.jpg')} style={styles.bg}>\n        <Image source={require('./../assets/images/au_logo_shadow.png')} style={styles.logo}/>\n        {/*<View style={styles.langSwitcher}>*/}\n        {/*  <TouchableHighlight onPress={() => handleChangeLang(Langs.UA)}>*/}\n        {/*    <Image source={require('../assets/images/ua.png')}*/}\n        {/*           style={lang === Langs.UA ? styles.langImageSelected : styles.langImage}*/}\n        {/*    />*/}\n        {/*  </TouchableHighlight>*/}\n        {/*  <TouchableHighlight onPress={() => handleChangeLang(Langs.EN)}>*/}\n        {/*    <Image source={require('../assets/images/en.png')}*/}\n        {/*           style={lang === Langs.EN ? styles.langImageSelected : styles.langImage}*/}\n        {/*    />*/}\n        {/*  </TouchableHighlight>*/}\n        {/*</View>*/}\n        <Text style={styles.title}>{i18n.t('login')}</Text>\n        <Surface style={styles.inputs}>\n          <TextInput label='Логін'\n                     style={styles.input}\n                     onChangeText={(e) => setEmail(e)}\n          />\n          <TextInput label='Пароль'\n                     style={styles.input}\n                     onChangeText={(e) => setPassword(e)}\n                     secureTextEntry={!showPassword}\n                     selectionColor='#2b5dff'\n                     right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#2b5dff'\n                                            onPress={() => setShowPassword(prevState => !prevState)}\n                     />}\n          />\n\n          <Button onPress={handleSubmit} mode='contained' color='#2b5dff' loading={loading}\n                  style={styles.button} disabled={(!email || !password) || loading}>\n            Увійти\n          </Button>\n          <Button onPress={() => navigation.navigate('SignUp')} mode='contained' color='#f91354'\n                  style={styles.button}>\n            Реєстрація\n          </Button>\n        </Surface>\n        <Button onPress={() => navigation.navigate('ForgotPassword')} uppercase={false}\n                labelStyle={{color: '#fff'}} style={styles.button}>\n          Відновити пароль\n        </Button>\n        <View style={styles.footer}>\n          <Text style={{color: '#fff'}}>Національна музична академія України ім. П. І. Чайковського</Text>\n          <Text style={{color: '#fff', marginTop: 16}}>Auditorium © 2021</Text>\n        </View>\n      </ImageBackground>\n      <WaitDialog message='Відбувається вхід у систему' visible={loading}/>\n      <ErrorDialog visible={showError} hideDialog={hideError} message={errorMessage}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n    overflow: 'hidden'\n  },\n  logo: {\n    width: '80%',\n    resizeMode: 'contain',\n    flex: 1\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  input: {\n    width: '100%',\n    fontSize: 22,\n    backgroundColor: 'transparent',\n  },\n  inputs: {\n    width: '90%',\n    elevation: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    marginTop: 32,\n  },\n  button: {\n    marginTop: 16,\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n  }, bg: {\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  footer: {\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    textAlign: 'center',\n    opacity: .5,\n    marginBottom: 16\n  },\n  langSwitcher: {\n    justifyContent: 'center',\n    flexDirection: \"row\",\n    marginBottom: 16\n  },\n  langImage: {\n    width: 50,\n    height: 35,\n    opacity: .3\n  },\n  langImageSelected: {\n    width: 50,\n    height: 35,\n  }\n});\n","import React from 'react';\nimport {Button, Dialog, Paragraph, Portal, Title} from \"react-native-paper\";\nimport {ScrollView, StyleSheet, Text} from \"react-native\";\nimport Colors from \"../../../constants/Colors\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  setCheckAgreement: (value: boolean) => void;\n}\n\nexport default function Agreement({visible, hideDialog, setCheckAgreement}: PropTypes) {\n  return <Portal>\n    <Dialog visible={visible} onDismiss={hideDialog} style={styles.wrapper}>\n      <Dialog.Title>Умови користування</Dialog.Title>\n      <Dialog.Content>\n        <ScrollView style={{height: '80%'}}>\n          <Title> Політика конфіденційності </Title>\n          <Paragraph> Останнє оновлення: 25 серпня 2021 р.</Paragraph>\n          <Paragraph> Ця Політика конфіденційності описує нашу політику та процедури щодо збору, використання та\n            розкриття\n            вашої\n            інформації під час користування Сервісом та розповідає вам про ваші права на конфіденційність та про те, як\n            закон\n            захищає вас. </Paragraph>\n          <Paragraph> Ми використовуємо Ваші персональні дані для надання та покращення Послуги. Користуючись Послугою,\n            ви\n            погоджуєтесь на\n            збір та використання інформації відповідно до цієї Політики конфіденційності.</Paragraph>\n          <Title> Інтерпретація та визначення </Title>\n          <Title> Інтерпретація </Title>\n          <Paragraph> Слова, у яких початкова буква написана з великої букви, мають значення, визначені за таких умов.\n            Наступні визначення\n            мають однакове значення незалежно від того, чи входять вони в однині чи множині. </Paragraph>\n          <Title style={{fontSize: 16}}> Визначення </Title>\n          <Paragraph> Для цілей цієї Політики конфіденційності: </Paragraph>\n\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Обліковий запис </Text> означає унікальний обліковий запис,\n              створений для доступу до нашого\n              Сервісу або частин нашого Сервісу. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Додаток </Text> означає програмне забезпечення, надане\n              Компанією, завантажене Вами на будь -якому\n              електронному пристрої під назвою Auditorium </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Компанія </Text> (в даній Угоді також згадується як\n              \"Компанія\",\n              \"Ми\", \"Ми\" або \"Наша\" або\n              \"Auditorium\"). </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Країна </Text> відноситься до: Україна </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Пристрій </Text> означає будь -який пристрій, який має доступ\n              до\n              Доатку, наприклад комп’ютер,\n              мобільний телефон або цифровий планшет. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Особисті дані </Text> - це будь -яка інформація, що стосується\n              ідентифікованої особи або особи, що\n              ідентифікується. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Послуга </Text> відноситься до Програми. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Постачальник послуг </Text> означає будь -яку фізичну або\n              юридичну особу, яка обробляє дані від\n              імені Компанії. Він відноситься до сторонніх компаній або приватних осіб, зайнятих Компанією для сприяння\n              Службі, надання Послуги від імені Компанії, для надання послуг, пов'язаних із Послугою, або для надання\n              допомоги Компанії в аналізі використання Сервісу. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Дані про використання </Text> відносяться до даних, зібраних\n              автоматично, або генерованих шляхом\n              використання Сервісу, або з інфраструктури самої Сервісу (наприклад, тривалість відвідування сторінки).\n            </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Ви </Text> означає фізичну особу, яка отримує доступ або\n              користується Послугою, або компанію чи\n              іншу юридичну особу, від імені якої така особа отримує доступ або користується Службою, якщо це можливо.\n            </Paragraph>\n          </Paragraph>\n\n          <Title> Збір та використання ваших особистих даних </Title>\n          <Title style={{fontSize: 16}}> Типи зібраних даних </Title>\n          <Title style={{fontSize: 14}}>Особисті дані </Title>\n          <Paragraph> Під час користування нашим Сервісом ми можемо попросити вас надати нам певну особисту інформацію,\n            яка може бути\n            використана для зв’язку або ідентифікації вас. Інформація, що ідентифікує особу, може включати, але не\n            обмежуватися\n            ними: </Paragraph>\n\n          <Paragraph>\n            <Paragraph> Адреса електронної пошти </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph> Ім'я та прізвище </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph> Номер телефону </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph> Дані про місце Вашого навчання або роботи </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph> Дані використання </Paragraph>\n          </Paragraph>\n\n          <Title style={{fontSize: 14}}>Дані використання </Title>\n          <Paragraph> Дані про використання збираються автоматично під час використання Сервісу. </Paragraph>\n          <Paragraph> Дані про використання можуть включати таку інформацію, як адреса Інтернет -протоколу вашого\n            пристрою\n            (наприклад, IP\n            -адреса), тип веб -переглядача, версія браузера, сторінки нашої Служби, які ви відвідуєте, час і дата вашого\n            відвідування, час, витрачений на ці сторінки , унікальні ідентифікатори пристрою та інші діагностичні\n            дані. </Paragraph>\n          <Paragraph> Коли ви отримуєте доступ до Служби через або через мобільний пристрій, ми можемо автоматично\n            збирати\n            певну\n            інформацію, включаючи, але не обмежуючись, тип мобільного пристрою, яким ви користуєтесь, унікальний\n            ідентифікатор\n            вашого мобільного пристрою, IP -адресу вашого мобільного пристрою , Ваша мобільна операційна система, тип\n            мобільного\n            Інтернет -браузера, який ви використовуєте, унікальні ідентифікатори пристрою та інші діагностичні\n            дані. </Paragraph>\n          <Paragraph> Ми також можемо збирати інформацію, яку надсилає ваш веб -переглядач, коли ви відвідуєте наш\n            Сервіс\n            або коли ви\n            отримуєте доступ до Служби за допомогою мобільного пристрою або через нього. </Paragraph>\n          <Title style={{fontSize: 16}}> Використання ваших особистих даних </Title>\n          <Paragraph> Компанія може використовувати Персональні дані для таких цілей: </Paragraph>\n\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Для надання та підтримки нашого Застосунку </Text>, зокрема\n              для\n              контролю за його використанням.\n            </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Щоб керувати своїм обліковим записом: </Text> керуйте своєю\n              реєстрацією як користувач Додатку.\n              Надані Вами персональні дані можуть надати Вам доступ до різних функцій Сервісу, які доступні Вам як\n              зареєстрованому користувачу. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Щоб зв’язатися з Вами: </Text> Щоб зв’язатися з Вами\n              електронною\n              поштою, телефонними дзвінками,\n              SMS або іншими еквівалентними формами\n              електронного зв'язку, наприклад, push -сповіщення мобільних додатків щодо оновлень або інформативні\n              комунікації, пов'язані з функціональними можливостями, продуктами або контрактними послугами, включаючи\n              безпеку\n              оновлення, коли це необхідно або розумно для їх впровадження. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Щоб надати Вам </Text> новини, спеціальні пропозиції та\n              загальну\n              інформацію про інші товари,\n              послуги\n              та події, які ми пропонуємо, подібні до тих, які ви вже придбали чи запитали про них, крім випадків, коли\n              це\n              відбувається\n              Ви вирішили не отримувати таку інформацію. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> Щоб керувати Вашими запитами: </Text> Щоб відвідувати та\n              керувати Вашими запитами до нас. </Paragraph>\n          </Paragraph>\n          <Paragraph>\n            <Paragraph><Text style={{fontWeight: '600'}}> В інших цілях </Text>: Ми можемо використовувати Вашу\n              інформацію\n              в інших цілях, таких як аналіз\n              даних,\n              визначення тенденцій використанняб оцінка та\n              покращення наших послуг.</Paragraph>\n          </Paragraph>\n\n          <Paragraph> Ми можемо передавати Вашу особисту інформацію у таких ситуаціях: </Paragraph>\n\n          <Paragraph><Text style={{fontWeight: '600'}}> З постачальниками послуг. </Text> Ми можемо передавати Вашу\n            особисту інформацію постачальникам послуг\n            відстежувати та аналізувати використання нашого Сервісу, щоб зв’язатися з Вами.\n          </Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> З діловими партнерами: </Text> Ми можемо поділитися Вашою\n            інформацією з нашими діловими партнерами,\n            щоб запропонувати Вам\n            певні товари, послуги чи акції.\n          </Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> З іншими користувачами: </Text> коли ви ділитесь особистою\n            інформацією або іншим чином взаємодієте у\n            загальнодоступних місцях\n            з іншими користувачами таку інформацію можуть переглядати всі користувачі та публічно розповсюджувати їх за\n            межами.\n          </Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> З вашої згоди </Text>: Ми можемо розкривати Вашу особисту\n            інформацію для будь-яких інших цілейю</Paragraph>\n\n          <Title style={{fontSize: 16}}> Збереження ваших особистих даних</Title>\n          <Paragraph> Компанія зберігатиме Ваші персональні дані лише стільки часу, скільки це необхідно для цілей,\n            викладених у цій\n            Політиці Конфіденційності. Ми будемо зберігати та використовувати Ваші Персональні дані в обсязі,\n            необхідному\n            для виконання наших\n            юридичних зобов’язань (наприклад, якщо ми зобов’язані зберігати ваші дані відповідно до чинного\n            законодавства).</Paragraph>\n          <Paragraph> Компанія також зберігатиме дані про використання для цілей внутрішнього аналізу. Дані про\n            використання зазвичай\n            зберігаються для коротший період часу, за винятком випадків, коли ці дані використовуються для посилення\n            безпеки або покращення\n            функціональності. </Paragraph>\n          <Title style={{fontSize: 16}}> Передача ваших особистих даних </Title>\n          <Paragraph> Ваша інформація, включаючи персональні дані, обробляється в офісах компанії та в будь -яких інших\n            місцях\n            де знаходяться сторони, які беруть участь у обробці. Це означає, що ця інформація може бути передана\n            на комп'ютерах, що знаходяться за межами Вашого штату, провінції, країни чи іншої урядової юрисдикції, де\n            законодавство про захист даних може відрізнятися від законодавства Вашої юрисдикції. </Paragraph>\n          <Paragraph> Ваша згода з цією Політикою конфіденційності з подальшим поданням такої інформації є вашою згодою\n            на\n            це.</Paragraph>\n          <Paragraph> Компанія вживе всіх необхідних заходів, щоб забезпечити безпечне та відповідне поводження з Вашими\n            даними\n            згідно з цією Політикою конфіденційності, передача Ваших персональних даних не відбуватиметься до\n            організації\n            чи країни\n            якщо немає належного контролю, включаючи безпеку Ваших даних та іншої особистої інформації. </Paragraph>\n          <Title style={{fontSize: 16}}> Розкриття ваших особистих даних </Title>\n          <Title style={{fontSize: 14}}>Ділові операції </Title>\n          <Paragraph> Якщо Компанія бере участь у злитті, поглинанні або продажу активів, Ваші Персональні дані можуть\n            бути передані. Ми будемо\n            надіслати повідомлення до того, як Ваші Персональні дані будуть передані та стануть предметом іншої Політики\n            конфіденційності. </Paragraph>\n          <Title style={{fontSize: 14}}>Правоохоронні органи </Title>\n          <Paragraph> За певних обставин від Компанії може знадобитися розкриття ваших Персональних даних, якщо цього\n            вимагає закон\n            або у відповідь на дійсні запити державних органів (наприклад, суду чи державного органу). </Paragraph>\n          <Title style={{fontSize: 14}}>Інші законодавчі вимоги </Title>\n          <Paragraph> Компанія може добросовісно розкрити Ваші Персональні дані, що такі дії необхідні для: </Paragraph>\n\n          <Paragraph> Виконувати юридичні зобов’язання </Paragraph>\n          <Paragraph> Захищати та захищати права чи майно Компанії </Paragraph>\n          <Paragraph> Запобігайте або розслідувати можливі правопорушення, пов'язані з Додатком</Paragraph>\n          <Paragraph> Захищати особисту безпеку Користувачів Послуги</Paragraph>\n\n          <Title style={{fontSize: 16}}> Безпека ваших особистих даних </Title>\n          <Paragraph> Для нас важлива безпека ваших персональних даних, але пам’ятайте, що жоден спосіб передачі через\n            Інтернет,\n            або спосіб електронного зберігання не є 100% безпечним.</Paragraph>\n          <Title> Посилання на інші веб-сайти </Title>\n          <Paragraph> Наш Сервіс може містити посилання на інші веб-сайти, якими ми не керуємо. Якщо Ви натискаєте\n            посилання третьої сторони, Ви\n            буде перенаправлено на веб-сайт цієї третьої сторони. Ми наполегливо радимо Вам переглянути Політику\n            конфіденційності кожного Вашого сайту\n            відвідування. </Paragraph>\n          <Paragraph> Ми не контролюємо і не несемо відповідальності за зміст, політику конфіденційності чи практику\n            будь-якої третьої особи\n            вечірки або послуги. </Paragraph>\n          <Title> Зміни до цієї Політики конфіденційності </Title>\n          <Paragraph> Ми можемо час від часу оновлювати нашу Політику конфіденційності. Ми повідомимо Вас про будь-які\n            зміни, опублікувавши нову Політику Конфіденційности на цій сторінці. </Paragraph>\n          <Paragraph> Ми повідомимо Вас електронною поштою та/або помітним повідомленням про наш Додаток до того, як\n            зміна\n            набуде чинності та\n            оновлення. Дата останнього оновлення у верхній частині цієї Політики конфіденційності. </Paragraph>\n          <Paragraph> Радимо періодично переглядати цю Політику конфіденційності на предмет будь-яких змін. Зміни в цій\n            Політиці конфіденційності\n            набувають чинності, коли вони розміщені на цій сторінці. </Paragraph>\n          <Title> Зв’яжіться з нами </Title>\n          <Paragraph> Якщо у вас є запитання щодо цієї Політики конфіденційності, ви можете зв'язатися з\n            нами: </Paragraph>\n\n          <Paragraph> На електронну адресу: auditorium.knmau@gmail.com </Paragraph>\n        </ScrollView>\n      </Dialog.Content>\n      <Dialog.Actions style={{height: 20, marginBottom: 20}}>\n        <Button onPress={() => {\n          hideDialog();\n          setCheckAgreement(false);\n        }} style={{height: 20}} color={Colors.red}>Відхилити</Button>\n        <Button onPress={() => {\n          hideDialog();\n          setCheckAgreement(true);\n        }} style={{height: 20}}>Прийняти</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Portal>\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    overflow: 'scroll',\n    top: 24,\n    bottom: 24\n  }\n})","import React, {useEffect, useState} from 'react';\nimport {Modal, Portal, Searchbar} from \"react-native-paper\";\nimport {ScrollView, Text, StyleSheet} from \"react-native\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  setSelected: (value: any) => void;\n  selected: any;\n  items: any[];\n}\n\nexport default function CustomPicker({visible, hideDialog, setSelected,selected, items}: PropTypes) {\n  const [searchText, setSearchText] = useState('');\n  const [filteredItems, setFilteredItems] = useState<any>([]);\n\n  useEffect(() => {\n    const filtered = items.length && items.filter(({name}) => {\n      if (searchText !== '') return String(name).toLowerCase().includes(searchText.toLowerCase());\n      return true;\n    });\n    setFilteredItems(filtered);\n  }, [items, searchText]);\n\n  const handlePress = (item: any) => {\n    setSelected({name: item.name, id: item.id});\n    hideDialog();\n  };\n\n  return (\n    <Portal>\n      <Modal visible={visible} onDismiss={hideDialog} contentContainerStyle={styles.container}>\n        <Searchbar\n          placeholder=\"Пошук\"\n          onChangeText={text => setSearchText(text)}\n          value={searchText}\n          style={styles.search}\n          clearButtonMode='while-editing'\n        />\n        <ScrollView style={{height: '80%'}}>\n          {filteredItems && [{name: 'Не вибрано', id: -1}, ...filteredItems].map(item => (\n                <Text key={item.id} style={selected.id === item.id ? styles.selected : styles.item}\n                      onPress={() => handlePress(item)}\n                >\n                  {item.name}\n                </Text>\n              )\n            )}\n        </ScrollView>\n      </Modal>\n    </Portal>\n  )\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderBottomColor: '#ccc',\n    padding: 10,\n    color: '#000',\n  },\n  selected: {\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderBottomColor: '#2b5dff',\n    padding: 10,\n    color: '#2b5dff'\n  },\n  container: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8,\n    justifyContent: 'center',\n    height: '60%'\n  },\n  search: {\n    marginBottom: 10\n  }\n});","import React, {useEffect, useState} from 'react';\nimport {Text, StyleSheet} from \"react-native\";\nimport {IconButton} from \"react-native-paper\";\nimport {View} from \"../Themed\";\nimport CustomPicker from \"./CustomPicker\";\n\ntype Item = {\n  name: string;\n  id: number;\n}\n\ninterface PropTypes {\n  selected: Item;\n  setSelected: any;\n  name: string;\n  items: any[];\n  checkValidation: (value: number) => void;\n  setIsVisited: (value: boolean) => void;\n  underlineColor: string;\n}\n\nexport default function CustomPickerField({\n                                            selected, name, setSelected, items, setIsVisited,\n                                            checkValidation, underlineColor\n                                          }: PropTypes) {\n  const [visiblePicker, setVisiblePicker] = useState(false);\n\n  useEffect(() => {\n    checkValidation(selected.id);\n  }, [selected]);\n\n  const showPicker = () => {\n    setVisiblePicker(true);\n    setIsVisited(true);\n  };\n\n  const hidePicker = () => {\n    checkValidation(selected.id);\n    setVisiblePicker(false);\n  };\n\n  return <View style={styles.picker}>\n    <Text style={[styles.pickerField, {borderBottomColor: underlineColor}]} numberOfLines={1}\n          onPress={showPicker}\n    >\n      {selected.id === -1 ? name : selected.name}\n    </Text>\n    <IconButton icon='chevron-down' style={styles.pickerIcon} color='#ccc'\n                onPress={showPicker}\n    />\n    <CustomPicker visible={visiblePicker} hideDialog={hidePicker}\n                  setSelected={setSelected} items={items}\n                  selected={selected}\n    />\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  picker: {\n    flexDirection: 'row',\n    position: 'relative',\n    backgroundColor: '#fff',\n  },\n  pickerField: {\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    paddingVertical: 10,\n    paddingLeft: 22,\n    paddingRight: 42,\n    fontSize: 22,\n    marginTop: 20,\n    color: '#6f6f6f',\n    width: '100%',\n  },\n  pickerIcon: {\n    position: 'absolute',\n    right: 0,\n    top: 20,\n  }\n});","import { gql } from \"@apollo/client\";\r\n\r\nexport const SIGN_UP = gql`\r\n    mutation signup($input: SignupInput!) {\r\n        signup(input: $input) {\r\n            user {\r\n                id\r\n                lastName\r\n            }\r\n            userErrors {\r\n                message\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;","import * as React from 'react';\nimport {Paragraph, Dialog, Portal, Button} from 'react-native-paper';\n\ninterface PropTypes {\n  message: string;\n  visible: boolean;\n  hideDialog: () => void;\n  navigateToLogin: () => void;\n}\n\nexport default function InfoDialog({visible, message, hideDialog, navigateToLogin}: PropTypes) {\n  return (\n      <Portal>\n        <Dialog visible={visible} dismissable={false}>\n          <Dialog.Title style={{textAlign: 'center'}}>Увага</Dialog.Title>\n          <Dialog.Content>\n            <Paragraph style={{textAlign: 'center'}}>{message}</Paragraph>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={hideDialog} mode='contained' color='#f91354'\n                    style={{width: 70, marginRight: 8}}>\n              Ні\n            </Button>\n            <Button onPress={() => {\n              hideDialog();\n              navigateToLogin();\n            }} mode='contained' style={{width: 70}}>\n              Так\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n  );\n};","import * as React from 'react';\nimport {Dimensions, ImageBackground, ScrollView, StyleSheet, Text} from 'react-native';\nimport {View} from '../../components/Themed';\nimport {Appbar, Banner, Button, Checkbox, HelperText, TextInput} from 'react-native-paper';\nimport {useEffect, useState} from \"react\";\nimport Agreement from \"./components/Agreement\";\nimport CustomPickerField from \"../../components/CustomPicker/CustomPickerField\";\nimport moment from \"moment\";\nimport {useMutation} from \"@apollo/client\";\nimport {SIGN_UP} from \"../../api/operations/mutations/signUp\";\nimport InfoDialog from \"../../components/InfoDialog\";\nimport {ErrorCodes, ErrorCodesUa, UserTypes, UserTypesUa} from \"../../models/models\";\n\nconst currentYear: number = parseInt(moment().format('YYYY'));\n\nconst startYearsItems = [\n  {name: currentYear, id: currentYear},\n  {name: currentYear - 1, id: currentYear - 1},\n  {name: currentYear - 2, id: currentYear - 2},\n  {name: currentYear - 3, id: currentYear - 3},\n];\n\nconst userTypesData = [\n  {id: 1, name: UserTypes.POST_GRADUATE},\n  {id: 2, name: UserTypes.STUDENT},\n];\n\nconst windowHeight = Dimensions.get('window').height;\n\n\nexport default function SignUp({navigation}: any) {\n  const [selectedDepartment, setSelectedDepartment] = useState({name: '', id: -1});\n  const [selectedDegree, setSelectedDegree] = useState({name: '', id: -1});\n  const [selectedStartYear, setSelectedStartYear] = useState({name: '', id: -1});\n  const [selectedType, setSelectedType] = useState({name: userTypesData[0].name,\n    id: userTypesData[0].id});\n  const [visible, setVisible] = useState(true);\n  const [visibleAgreement, setVisibleAgreement] = useState(false);\n  const [visibleBackDialog, setVisibleBackDialog] = useState(false);\n  const backMessage = 'Ви дійсно бажаєте повернутись на сторінку входу?\\n Введені дані будуть стерті.';\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [checkAgreement, setCheckAgreement] = useState(false);\n  const [departments, setDepartments] = useState([{id: 1, name: 'DEFAULT_DEPARTMENT'}]);\n  const [degrees, serDegrees] = useState([{id: 1, name: 'DEFAULT_DEGREE'}]);\n\n  const [isSignupTouched, setIsSignupTouched] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [isLastNameValidated, setIsLastNameValidated] = useState<string | null>(null);\n  const [isFirstNameValidated, setIsFirstNameValidated] = useState<string | null>(null);\n  const [isEmailValidated, setIsEmailValidated] = useState<string | null>(null);\n  const [isPhoneValidated, setIsPhoneValidated] = useState<string | null>(null);\n  const [isPasswordValidated, setIsPasswordValidated] = useState<string | null>(null);\n  const [isPasswordConfirmValidated, setIsPasswordConfirmValidated] = useState<string | null>(null);\n  const [isStartYearValidated, setIsStartYearValidated] = useState<string | null>(null);\n  const [isDepartmentValidated, setIsDepartmentValidated] = useState<string | null>(null);\n  const [isDegreeValidated, setIsDegreeValidated] = useState<string | null>(null);\n\n  const [isStartYearModalVisited, setIsStartYearModalVisited] = useState(false);\n  const [isDepartmentModalVisited, setIsDepartmentModalVisited] = useState(false);\n  const [isDegreeModalVisited, setIsDegreeModalVisited] = useState(false);\n\n  const [signup, {loading, error}] = useMutation(SIGN_UP);\n\n  useEffect(() => {\n    // client.query({query: GET_UNSIGNED_DEPARTMENTS,\n    //   fetchPolicy: 'network-only',\n    // }).then(({data}) => {\n    //   setDepartments(data.signupFacultiesDepartments.departments.slice()\n    //     .sort((a: Department, b: Department) => a.id - b.id))\n    // });\n  }, [])\n\n  const checkLastNameValidation = (value: string) => {\n    if (!value) {\n      return setIsLastNameValidated(\"Обов'язкове поле\");\n    }\n    return setIsLastNameValidated(null);\n  };\n\n  const checkFirstNameValidation = (value: string) => {\n    if (!value) {\n      return setIsFirstNameValidated(\"Обов'язкове поле\");\n    }\n    return setIsFirstNameValidated(null);\n  };\n\n  const checkEmailValidation = (value: string) => {\n    const re = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\n    if (!value) {\n      return setIsEmailValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsEmailValidated(\"Невірний формат\");\n    }\n    return setIsEmailValidated(null);\n  };\n\n  const checkPhoneValidation = (value: string) => {\n    const re = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/\n\n    if (!value) {\n      return setIsPhoneValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsPhoneValidated(\"Невірний формат\");\n    }\n    return setIsPhoneValidated(null);\n  };\n\n  const checkPasswordValidation = (value: string) => {\n    const re = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\n    const strongRe = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n    if (!value) {\n      return setIsPasswordValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsPasswordValidated(\"Невірний формат\");\n    }\n    return setIsPasswordValidated(null);\n  };\n\n  const checkPasswordConfirmValidation = (value: string) => {\n    if (!value) {\n      return setIsPasswordConfirmValidated(\"Обов'язкове поле\");\n    }\n    if (password && passwordConfirm && (password !== passwordConfirm)) {\n      return setIsPasswordConfirmValidated('Паролі не співпадають');\n    }\n    return setIsPasswordConfirmValidated(null);\n  };\n\n  const checkStartYearValidation = (value: number) => {\n    if (value === -1 && (isStartYearModalVisited || isSignupTouched)) {\n      return setIsStartYearValidated(\"Рік вступу не вибрано\");\n    }\n    return setIsStartYearValidated(null);\n  };\n\n  const checkDepartmentValidation = (value: number) => {\n    if (value === -1 && (isDegreeModalVisited || isSignupTouched)) {\n      return setIsDepartmentValidated(\"Кафедру не вибрано\");\n    }\n    return setIsDepartmentValidated(null);\n  };\n\n  const checkDegreeValidation = (value: number) => {\n    if (value === -1 && (isDegreeModalVisited || isSignupTouched)) {\n      return setIsDegreeValidated(\"Навчальний ступінь не вибрано\");\n    }\n    return setIsDegreeValidated(null);\n  };\n\n  const handleSubmit = async () => {\n    navigation.navigate('SignUpStepTwo');\n\n    checkLastNameValidation(lastName);\n    checkFirstNameValidation(firstName);\n    checkEmailValidation(email);\n    checkPhoneValidation(phoneNumber);\n    checkPasswordValidation(password);\n    checkPasswordConfirmValidation(passwordConfirm);\n    checkStartYearValidation(selectedStartYear.id);\n    checkDepartmentValidation(selectedDepartment.id);\n    checkDegreeValidation(selectedDegree.id);\n\n    if (!isLastNameValidated && !isFirstNameValidated && !isEmailValidated && !isPasswordValidated\n        && !isPasswordConfirmValidated && !isStartYearValidated && !isDepartmentValidated\n        && !isDegreeValidated) {\n      try {\n        const result = await signup({\n          variables: {\n            input: {\n              lastName: lastName,\n              firstName: firstName,\n              patronymic: patronymic,\n              password: password,\n              email: email,\n              phoneNumber: phoneNumber,\n              departmentId: selectedDepartment.id,\n              degreeId: selectedDegree.id,\n              startYear: selectedStartYear.id,\n              type: selectedType.name\n            }\n          }\n        });\n        const hasErrors = result?.data.login.userErrors?.length;\n\n        if (hasErrors) {\n          const errorMessage = ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes];\n\n          alert(errorMessage);\n        } else {\n          navigation.navigate('SignUpStepTwo');\n        }\n      } catch (e) {\n        alert(e)\n      }\n    }\n  }\n\n  const showAgreement = () => setVisibleAgreement(true);\n\n  const hideAgreement = () => setVisibleAgreement(false);\n\n  const showBackDialog = () => setVisibleBackDialog(true);\n\n  const hideBackDialog = () => setVisibleBackDialog(false);\n\n  const navigateToLogin = () => {\n    navigation.goBack();\n  };\n\n  const handleBack = () => {\n    if (lastName || firstName || patronymic || email || phoneNumber || password || passwordConfirm\n        || selectedStartYear.id !== -1 || selectedDepartment.id !== -1 || selectedDegree.id !== -1) {\n      showBackDialog();\n    } else {\n      navigateToLogin();\n    }\n  };\n\n  const Error = ({validator}: any) => (\n    <HelperText type=\"error\" style={{color: '#f91354', height: validator ? 'auto' : 0}}>\n      {validator}\n    </HelperText>\n  );\n\n  return (\n    <ImageBackground source={require('../../assets/images/bg.jpg')}\n                     style={{width: '100%', height: '100%'}}>\n      <View style={styles.container}>\n        <Appbar style={styles.top}>\n          <Appbar.BackAction onPress={handleBack} color='#fff'/>\n          <Appbar.Content title='Реєстрація' subtitle='Крок 1 із 3' color='#fff'/>\n        </Appbar>\n        <View style={styles.wrapper}>\n          <ScrollView style={styles.scrollView}>\n            <Banner\n              icon='alert-circle'\n              visible={visible}\n              actions={[\n                {\n                  label: 'Зрозуміло',\n                  onPress: () => setVisible(false),\n                }\n              ]}\n            >\n              Реєстрація педагогів та співробітників навчального закладу відбувається за допомогою диспетчера.\n            </Banner>\n            <Text style={styles.infoPanel}>\n              Введіть дані, що співпадають з вашим студентським квитком або іншим документом.\n            </Text>\n            <TextInput placeholder=\"Прізвище *\" style={styles.input} value={lastName}\n                       underlineColor={!isLastNameValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setLastName(text);\n                         checkLastNameValidation(text);\n                       }}\n                       onBlur={() => checkLastNameValidation(lastName)}\n            />\n            <Error validator={isLastNameValidated}/>\n            <TextInput placeholder=\"Ім'я *\" style={styles.input} value={firstName}\n                       underlineColor={!isFirstNameValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setFirstName(text);\n                         checkFirstNameValidation(text);\n                       }}\n                       onBlur={() => checkFirstNameValidation(firstName)}\n            />\n            <Error validator={isFirstNameValidated}/>\n            <TextInput placeholder=\"По-батькові\" style={styles.input} value={patronymic}\n                       onChangeText={text => setPatronymic(text)}\n            />\n            <View style={{height: 10, backgroundColor: '#fff'}}/>\n            <TextInput placeholder=\"E-mail *\" style={styles.input} value={email}\n                       underlineColor={!isEmailValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setEmail(text);\n                         checkEmailValidation(text);\n                       }}\n                       onBlur={() => checkEmailValidation(email)}\n                       keyboardType='email-address'\n            />\n            <Error validator={isEmailValidated}/>\n            <TextInput placeholder=\"Тел. номер *\" style={styles.input}\n                       underlineColor={!isEmailValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPhoneNumber(text);\n                         checkPhoneValidation(text);\n                       }}\n                       onBlur={() => checkPhoneValidation(phoneNumber)}\n                       keyboardType='phone-pad'\n            />\n            <Error validator={isPhoneValidated}/>\n            <TextInput placeholder=\"Пароль *\" style={styles.input}\n                       underlineColor={!isPasswordValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPassword(text);\n                         checkPasswordValidation(text);\n                       }}\n                       onBlur={() => checkPasswordValidation(password)}\n                       right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#ccc'\n                                              onPress={() => setShowPassword(prevState => !prevState)}\n                                              forceTextInputFocus={false}\n                       />}\n                       secureTextEntry={!showPassword}\n            />\n            <Error validator={isPasswordValidated}/>\n            <TextInput placeholder=\"Повторіть пароль *\" style={styles.input}\n                       underlineColor={!isPasswordConfirmValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPasswordConfirm(text);\n                         checkPasswordConfirmValidation(text);\n                       }}\n                       onBlur={() => checkPasswordConfirmValidation(passwordConfirm)}\n                       right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#ccc'\n                                              onPress={() => setShowPassword(prevState => !prevState)}\n                                              forceTextInputFocus={false}\n                       />}\n                       secureTextEntry={!showPassword}\n            />\n            <Error validator={isPasswordConfirmValidated}/>\n            <CustomPickerField selected={selectedStartYear} setSelected={setSelectedStartYear}\n                               name='Рік початку навчання' items={startYearsItems}\n                               checkValidation={checkStartYearValidation}\n                               setIsVisited={setIsStartYearModalVisited}\n                               underlineColor={!isStartYearValidated ? '#ccc' : '#f91354'}\n\n            />\n            <Error validator={isStartYearValidated}/>\n            <CustomPickerField name='Кафедра' selected={selectedDepartment} items={departments}\n                               setSelected={setSelectedDepartment}\n                               checkValidation={checkDepartmentValidation}\n                               setIsVisited={setIsDepartmentModalVisited}\n                               underlineColor={!isDepartmentValidated ? '#ccc' : '#f91354'}\n\n            />\n            <Error validator={isDepartmentValidated}/>\n            <CustomPickerField name='Навчальний ступінь' selected={selectedDegree} items={degrees}\n                               setSelected={setSelectedDegree}\n                               checkValidation={checkDegreeValidation}\n                               setIsVisited={setIsDegreeModalVisited}\n                               underlineColor={!isDegreeValidated ? '#ccc' : '#f91354'}\n\n            />\n            <CustomPickerField name='Статус' selected={selectedType} items={userTypesData}\n                               checkValidation={() => {}}\n                               setIsVisited={() => {}}\n                               setSelected={setSelectedType}\n                               underlineColor='#ccc'\n\n            />\n            <Error validator={isDegreeValidated}/>\n            <View style={styles.agreement}>\n              <Checkbox status={checkAgreement ? 'checked' : 'unchecked'} color='#2b5dff'\n                        uncheckedColor='#f91354'\n                        onPress={() => {\n                          setIsSignupTouched(true);\n                          setCheckAgreement(prevState => !prevState);\n                        }}/>\n              <Text style={{width: '90%', backgroundColor: '#fff'}}>Я прочитав і погоджуюсь з\n                <Text style={styles.link} onPress={showAgreement}> політикою конфіденційності</Text> *</Text>\n            </View>\n          </ScrollView>\n          <View style={styles.navButtons}>\n            <Button\n              onPress={handleSubmit}\n              mode='contained' color='#f91354'\n              style={styles.signUpButton}\n              disabled={!checkAgreement || loading}\n              loading={loading}\n            >\n              Зареєструватися\n            </Button>\n          </View>\n          <Agreement visible={visibleAgreement} hideDialog={hideAgreement}\n                     setCheckAgreement={setCheckAgreement}\n          />\n          <InfoDialog message={backMessage} visible={visibleBackDialog} hideDialog={hideBackDialog}\n                      navigateToLogin={navigateToLogin}\n          />\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  wrapper: {\n    backgroundColor: '#fff',\n    width: '100%',\n    height: windowHeight-80,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  navButtons: {\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    marginBottom: 16,\n    marginTop: 16,\n  },\n  signUpButton: {\n    height: 50,\n    justifyContent: 'center',\n  },\n  scrollView: {\n    width: '90%',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: 'transparent',\n    fontSize: 22,\n    paddingLeft: 10,\n    margin: 0,\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  link: {\n    color: '#2b5dff',\n    textDecorationLine: 'underline'\n  },\n  agreement: {\n    paddingTop: 20,\n    paddingBottom: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  infoPanel: {\n    borderRadius: 8,\n    backgroundColor: '#b5e3ff',\n    padding: 8,\n    marginTop: 16\n  },\n});","import * as React from 'react';\nimport {View, StyleSheet, Text} from \"react-native\";\nimport {Button, TextInput} from \"react-native-paper\";\n\nexport default function ForgotPassword({navigation}: any) {\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        Введіть Вашу email адресу куди ми відправимо новий пароль.\n      </Text>\n      <TextInput placeholder=\"E-mail\" style={styles.input}/>\n      <Button onPress={()=>navigation.navigate('ForgotPasswordSuccess')} mode='contained' color='#2b5dff'\n        style={styles.button}>\n        Відновити пароль\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 5,\n    width: '90%',\n    marginBottom: 32,\n  },\n  button: {\n    marginTop: 32,\n    height: 50,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '90%',\n    height: 50\n  }\n});\n","import * as React from 'react';\nimport {View, StyleSheet, Text} from \"react-native\";\nimport {Button} from \"react-native-paper\";\n\nexport default function ForgotPasswordSuccess({navigation}: any) {\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        Пароль надіслано, перевірте пошту.\n      </Text>\n      <Button onPress={()=>navigation.navigate('Login')} mode='contained' color='#2b5dff'\n        style={styles.loginButton}>\n        На сторінку входу\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 5,\n    width: '90%',\n    marginBottom: 32,\n  },\n  loginButton: {\n    marginTop: 32,\n    height: 50,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '90%',\n    height: 50\n  }\n});\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        id\r\n        name\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          id\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUserById($where: UserWhereUniqueInput!) {\r\n    user(where: $where) {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        id\r\n        name\r\n      }\r\n      occupiedClassrooms {\r\n        id\r\n        state \r\n        classroom {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      queue {\r\n        id\r\n        state\r\n        type\r\n        classroom {\r\n          id\r\n        }\r\n      }\r\n      queueInfo {\r\n        id\r\n        sanctionedUntil\r\n        currentSession {\r\n          id\r\n          state\r\n          skips\r\n        }\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {User} from \"../models/models\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\n\nconst useUsers = (): Array<User> => {\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_USERS, fetchPolicy: \"cache-first\"}).then((data) => {\n        setUsers(data.data.users.slice().sort((a: User, b: User) => a.id - b.id));\n      });\n  }, []);\n\n  return users;\n};\n\nexport default useUsers;","import {HOUR, MINUTE, TIME_SNIPPETS, WORKING_DAY_END, WORKING_DAY_START,} from \"./constants\";\nimport {\n  ACCESS_RIGHTS,\n  ClassroomType,\n  CurrentUser, DisabledState,\n  Mode,\n  OccupiedInfo,\n  OccupiedState,\n  ScheduleUnitType,\n  User,\n  UserTypes,\n} from \"../models/models\";\nimport moment from \"moment\";\nimport {ReactElement} from \"react\";\nimport {accessRightsVar, desirableClassroomIdsVar, minimalClassroomIdsVar} from \"../api/client\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User, withInitials = false) => {\n  if (user) {\n    if (user.nameTemp) return user.nameTemp\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo, isDisabled = false) => {\n  const student = {backgroundColor: \"#2e287c\", color: \"#fff\"};\n  const employee = {backgroundColor: \"#ffc000\", color: \"#fff\"};\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  const disabled = {\n    backgroundColor: \"#00000011\",\n    color: \"#454545\",\n  };\n  if (isDisabled) return disabled;\n  if (isNotFree(occupied)) {\n    switch (occupied.user.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n  );\n};\n\nexport const scheduleUnitToDate = (item: ScheduleUnitType) => {\n  const from = item.from.split(':');\n  const to = item.to.split(':');\n  const fromHours = +from[0];\n  const fromMinutes = +from[1];\n  const toHours = +to[0];\n  const toMinutes = +to[1];\n  const fromDate = moment({hours: fromHours, minutes: fromMinutes, seconds: 0, milliseconds: 0});\n  const toDate = moment({hours: toHours, minutes: toMinutes, seconds: 0, milliseconds: 0});\n\n  return {\n    from: fromDate,\n    to: toDate\n  };\n};\n\nexport const isOccupiedOnSchedule = (scheduleUnits: ScheduleUnitType[]) => {\n  const result: any = [];\n\n  scheduleUnits.forEach(item => result.push(scheduleUnitToDate(item)));\n\n  return result.some((item: { from: Date, to: Date }) => {\n    const current = moment();\n\n    return current.isAfter(item.from) && current.isBefore(item.to);\n  });\n};\n\nexport const showNotification = (dispatcher: any, data: string[] | HTMLElement[] | ReactElement[]) => {\n  dispatcher({\n    header: data[0],\n    message: data[1],\n    type: data[2],\n  });\n};\n\nexport const setAccessRights = (user: User) => {\n  let accessRights = ACCESS_RIGHTS.USER;\n\n  if (user && user?.type) {\n    switch (user.type) {\n      case UserTypes.ADMIN:\n        accessRights = ACCESS_RIGHTS.ADMIN;\n        break;\n      case UserTypes.DISPATCHER:\n        accessRights = ACCESS_RIGHTS.DISPATCHER;\n        break;\n      default:\n        accessRights = ACCESS_RIGHTS.USER;\n    }\n  }\n\n  accessRightsVar(accessRights);\n};\n\nexport const isTeacherType = (type: UserTypes) => {\n  return type === UserTypes.TEACHER || type === UserTypes.CONCERTMASTER || type === UserTypes.ILLUSTRATOR;\n};\n\nexport const getTimeFromUntil = (until: string, minutesDuration = 2) => {\n  if (until) {\n    const differenceInMs = moment(until).diff(moment());\n    const tempTime = moment.duration(differenceInMs);\n\n    const resultHHMMSS = tempTime.hours() + ':' + tempTime.minutes() + ':' + tempTime.seconds();\n    const resultPercents = differenceInMs / ((MINUTE * minutesDuration) / 100);\n\n    return [resultHHMMSS, resultPercents];\n  }\n};\n\nexport const isPendingForMe = (occupied: OccupiedInfo, me: User, mode: Mode) => {\n  return (\n    (occupied.state === OccupiedState.PENDING || occupied.state === OccupiedState.RESERVED) &&\n    occupied.user.id === me.id\n    && mode === Mode.INLINE\n  );\n}\n\nexport const isOwnClassroom = (occupied: OccupiedInfo, me: User) => {\n  return occupied.state === OccupiedState.OCCUPIED && occupied.user.id === me.id;\n};\n\nexport const isOccupiedOrPendingByCurrentUser = (occupied: OccupiedInfo, currentUser: User) => {\n  return (\n    occupied.state === OccupiedState.OCCUPIED\n    || occupied.state === OccupiedState.PENDING\n    || occupied.state === OccupiedState.RESERVED\n        ) && occupied.user.id === currentUser.id;\n}\n\nexport const isNotFree = (occupied: OccupiedInfo) => {\n  return occupied.state !== OccupiedState.FREE;\n};\n\nexport const getIsMeOccupied = (me: CurrentUser, classrooms: ClassroomType[]) => {\n  return !!classrooms.find(({occupied}) => occupied.state === OccupiedState.OCCUPIED && me.id === occupied.user.id);\n};\n\nexport const hasOwnClassroom = (occupiedClassrooms: any) => {\n  const ownClassroom = occupiedClassrooms.find((classroom: any) => {\n    return classroom.state === OccupiedState.OCCUPIED || classroom.state === OccupiedState.RESERVED;\n  });\n  return ownClassroom ? ownClassroom.classroom.id : null;\n};\n\nexport const isEnabledForCurrentDepartment = (classroom: ClassroomType, currentUser: User) => {\n  return classroom.chair?.exclusivelyQueueAllowedDepartmentsInfo.length ?\n    classroom.chair?.exclusivelyQueueAllowedDepartmentsInfo\n      .some(({department}) => department.id === currentUser?.department?.id) : true;\n};\n\nexport const isEnabledForQueue = (classroom: ClassroomType, user: any) => {\n    const ownClassroomId = hasOwnClassroom(user.occupiedClassrooms);\n\n    return classroom.id !== ownClassroomId && !classroom.isHidden &&\n      classroom.disabled.state === DisabledState.NOT_DISABLED &&\n      isEnabledForCurrentDepartment(classroom, user) &&\n      !(user.occupiedClassrooms.some((data: any) => {\n        return data.classroom.id === classroom.id && data.state === OccupiedState.PENDING\n      }));\n};","import React from 'react';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {ActivityIndicator, Divider, Modal, Portal, Title} from \"react-native-paper\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport {UserTypes, UserTypesUa} from \"../models/models\";\nimport {Linking} from 'react-native'\n\ninterface PropTypes {\n  userId: number;\n  hideModal: () => void;\n  visible: boolean;\n}\n\nexport default function UserInfo({userId, hideModal, visible}: PropTypes) {\n  const {data, loading, error} = useQuery(GET_USER_BY_ID, {\n    variables: {where: {id: userId}}\n  });\n\n  const openPhoneNumber = (phoneNumber: string) => Linking.openURL(`tel:${phoneNumber}`);\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      {!loading && !error ? <>\n          <Title style={styles.occupantName}>{data.user.nameTemp === null ? fullName(data.user) :\n            data.user.nameTemp}</Title>\n          <Divider style={styles.divider}/>\n          <Text>Статус: {UserTypesUa[data.user.type as UserTypes]}</Text>\n          <Text>Кафедра: {data.user.department?.name}</Text>\n          <Divider style={styles.divider}/>\n        {isTeacherType(data.user.type) && <>\n            <View style={styles.phoneRow}><Text>Тел: </Text>\n                <Text onPress={() => openPhoneNumber(data.user.phoneNumber)} style={styles.phoneNumber}>\n                  {data.user.phoneNumber}\n                </Text>\n            </View>\n          {JSON.parse(data.user.extraPhoneNumbers).map((number: string, index: number) => {\n            return <View key={index} style={styles.phoneRow}>\n              <Text>{`Тел. ${index + 2}: `}</Text>\n              <Text onPress={() => openPhoneNumber(number)} style={styles.phoneNumber}>\n                {number}\n              </Text>\n            </View>\n          })}\n        </>}\n      </> : <ActivityIndicator animating={true} color='#2e287c'/>}\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  occupantName: {},\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  phoneRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  phoneNumber: {\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#eee',\n    padding: 8,\n    fontSize: 16,\n    marginTop: 8,\n    color: '#2b5dff'\n  }\n}));","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, View, ScrollView, Dimensions, ImageBackground} from \"react-native\";\nimport useUsers from \"../hooks/useUsers\";\nimport {ActivityIndicator, Appbar, DataTable, Searchbar} from \"react-native-paper\";\nimport {UserTypes, UserTypesUa} from \"../models/models\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport UserInfo from \"../components/UserInfo\";\nimport {DrawerActions, useNavigation} from '@react-navigation/native';\n\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function Users() {\n  const navigation = useNavigation();\n  const users = useUsers();\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visible, setVisible] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const UserElement = ({user}: any) => <DataTable.Row onPress={() => showModal(user.id)}>\n    <DataTable.Cell>{fullName(user)}</DataTable.Cell>\n    <DataTable.Cell>{UserTypesUa[user.type as UserTypes]}</DataTable.Cell>\n  </DataTable.Row>;\n\n  const showModal = (userId: number) => {\n    setVisible(true);\n    setCurrentUserId(userId);\n  };\n\n  const hideModal = () => setVisible(false);\n\n  useEffect(() => {\n    setPages(users.length / 13)\n  }, [users]);\n\n  return <ImageBackground source={require('../assets/images/bg.jpg')}\n                          style={{width: '100%', height: windowHeight}}>\n    <Appbar style={styles.top}>\n      <Appbar.Action icon=\"menu\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n                     color='#fff'\n      />\n        <Appbar.Content\n          title='Довідник' color='#fff'\n        />\n    </Appbar>\n    <Searchbar\n      placeholder=\"Пошук\"\n      onChangeText={text => {\n        setSearchText(text);\n        setCurrentPage(0);\n      }}\n      value={searchText}\n      style={styles.search}\n    />\n    <DataTable style={styles.dataTable}>\n      <DataTable.Header style={styles.header}>\n        <DataTable.Title>П.І.Б.</DataTable.Title>\n        <DataTable.Title style={{alignSelf: 'center'}}>Статус</DataTable.Title>\n      </DataTable.Header>\n      {users.length ? <>\n        <View style={styles.list}>\n          <ScrollView>\n            {users?.filter(user => isTeacherType(user.type as UserTypes))\n              .slice()\n              //@ts-ignore\n              .sort((a , b) => fullName(a).toLowerCase() > fullName(b).toLowerCase())\n              .filter(user => fullName(user).toLowerCase().includes(searchText.toLowerCase()))\n              .slice(currentPage * 13, (currentPage * 13) + 13)\n              .map(user =>\n              <UserElement user={user}/>)}\n          </ScrollView>\n        </View>\n        <DataTable.Pagination\n          style={styles.pagination}\n          page={currentPage}\n          numberOfPages={pages}\n          onPageChange={page => {\n            setCurrentPage(page);\n          }}\n          label={`${currentPage * 13} - ${(currentPage * 13) + 13} з ${users.length}`}\n        />\n      </> : <ActivityIndicator animating={true} color='#2e287c'/>}\n    </DataTable>\n    {currentUserId ? <UserInfo userId={currentUserId} hideModal={hideModal} visible={visible}/> : null}\n  </ImageBackground>\n}\n\nconst styles = StyleSheet.create(({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n  },\n  search: {\n    marginTop: 80,\n    borderRadius: 0\n  },\n  header: {\n    marginTop: 40,\n  },\n  list: {\n    height: windowHeight - 175\n  },\n  pagination: {\n    justifyContent: 'center',\n  },\n  dataTable: {\n    backgroundColor: '#fff'\n  }\n}));\n","import React, {useState} from 'react';\nimport {\n  SafeAreaView,\n  View,\n  StyleSheet,\n  Image,\n  Text,\n  Linking,\n} from 'react-native';\n\nimport {\n  DrawerContentScrollView,\n  DrawerItemList,\n} from '@react-navigation/drawer';\nimport {Avatar, Button, Dialog, IconButton, Portal} from \"react-native-paper\";\nimport {removeItem} from \"../api/asyncStorage\";\nimport {meVar} from \"../api/client\";\n\nconst CustomSidebarMenu = (props: any) => {\n  const [visible, setVisible] = useState(false);\n\n  const showDialog = () => setVisible(true);\n\n  const hideDialog = () => setVisible(false);\n\n  const logout = async () => {\n    await removeItem('user');\n    await removeItem('token');\n    meVar(null);\n    hideDialog();\n  };\n\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <Image\n        source={require('../assets/images/au_logo.png')}\n        style={styles.sideMenuProfileIcon}\n      />\n      <View style={styles.userData}>\n        <Avatar.Icon size={44} icon='account'/>\n        <Text style={styles.userName}>{meVar()?.firstName}, вітаємо!</Text>\n        <IconButton\n          icon=\"logout\"\n          color=\"#f91354\"\n          size={30}\n          onPress={showDialog}\n          style={styles.logout}\n        />\n      </View>\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n      </DrawerContentScrollView>\n      <Text\n        style={{\n          fontSize: 16,\n          textAlign: 'center',\n          color: '#fff',\n          marginBottom: 16\n        }}\n        onPress={() => Linking.openURL('https://knmau.com.ua/')}\n      >\n        НМАУ ім. П.І.Чайковського\n      </Text>\n      <Portal>\n        <Dialog visible={visible} onDismiss={hideDialog}>\n          <Dialog.Title>Ви дійсно бажаєте вийти з аккаунту?</Dialog.Title>\n          <Dialog.Actions>\n            <Button onPress={hideDialog}>Відміна</Button>\n            <Button onPress={logout}>Так</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sideMenuProfileIcon: {\n    resizeMode: 'center',\n    width: 200,\n    height: 70,\n    marginTop: 50,\n    alignSelf: 'center',\n  },\n  iconStyle: {\n    width: 15,\n    height: 15,\n    marginHorizontal: 5,\n  },\n  customItem: {\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  userData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n    marginHorizontal: 10,\n    borderRadius: 8,\n    borderWidth: 1,\n    padding: 12,\n    borderColor: '#ffffff22',\n    flexDirection: 'row'\n  },\n  userName: {\n    color: '#fff',\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  logout: {\n    marginRight: -10,\n    marginVertical: -10\n  }\n});\n\nexport default CustomSidebarMenu;","import {gql} from \"@apollo/client\";\r\n\r\nexport const GET_ME = gql`\r\n    query meType {\r\n        me @client\r\n    }\r\n`;","import React from 'react';\nimport {StyleSheet, View, Text, ImageBackground, Dimensions} from \"react-native\";\nimport {Appbar, Divider, Title} from \"react-native-paper\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ME} from \"../api/operations/queries/me\";\nimport {fullName} from \"../helpers/helpers\";\nimport {UserTypes, UserTypesUa} from \"../models/models\";\nimport {DrawerActions} from \"@react-navigation/native\";\n\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function Profile({navigation}: any) {\n  const {data: {me}} = useQuery(GET_ME);\n\n  return (\n    <ImageBackground source={require('../assets/images/bg.jpg')}\n                     style={{width: '100%', height: windowHeight}}>\n      <Appbar style={styles.top}>\n        <Appbar.Action icon=\"menu\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n                       color='#fff'\n        />\n        <Appbar.Content\n          title='Мій профіль' color='#fff'\n        />\n      </Appbar>\n      <View style={styles.wrapper}>\n        <Title style={styles.whiteText}>П.І.Б.</Title>\n        <Text style={styles.marginBottomWhiteText}>{fullName(me)}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n        <Title style={styles.whiteText}>Персональний номер (ID)</Title>\n        <Text style={styles.marginBottomWhiteText}>{me.id}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n        <Title style={styles.whiteText}>Тип аккаунту</Title>\n        <Text style={styles.marginBottomWhiteText}>{UserTypesUa[me.type as UserTypes]}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n        {me.department && (\n          <>\n            <Title style={styles.whiteText}>Кафедра</Title>\n            <Text style={styles.marginBottomWhiteText}>{me.department?.name}</Text>\n            <Divider style={{backgroundColor: '#ffffff33'}}/>\n          </>\n        )}\n        <Title style={styles.whiteText}>E-mail</Title>\n        <Text style={styles.marginBottomWhiteText}>{me.email}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n        <Title style={styles.whiteText}>Телефон</Title>\n        <Text style={styles.marginBottomWhiteText}>{me.phoneNumber}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n        <Title style={styles.whiteText}>Термін дії аккаунту</Title>\n        <Text style={styles.marginBottomWhiteText}>{me.expireDate}</Text>\n        <Divider style={{backgroundColor: '#ffffff33'}}/>\n      </View>\n    </ImageBackground>\n  )\n}\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n  },\n  wrapper: {\n    marginTop: 100,\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  marginBottomWhiteText: {\n    marginBottom: 10,\n    color: '#fff'\n  },\n  whiteText: {\n    color: '#fff'\n  }\n});","import {gql, useQuery} from \"@apollo/client\";\n\nexport const useLocal = (localVarName: string) => {\n  return useQuery(gql`\n      query ${localVarName} {\n        ${localVarName} @client\n      }\n  `);\n};","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CLASSROOM = gql`\r\n  query getClassroom($where: ClassroomWhereUniqueInput!) {\r\n    classroom(where: $where) {\r\n      id\r\n      description\r\n      name\r\n      floor\r\n      special\r\n      isHidden\r\n      chair {\r\n          id\r\n          name\r\n          exclusivelyQueueAllowedDepartmentsInfo {\r\n            department {\r\n              id\r\n              name\r\n            }\r\n          }\r\n      }\r\n      isWing\r\n      isOperaStudio\r\n      occupied {\r\n        user {\r\n          id\r\n          firstName\r\n          patronymic\r\n          lastName\r\n          type\r\n          nameTemp\r\n          email\r\n          phoneNumber\r\n        }\r\n        until\r\n        state\r\n      }\r\n      instruments {\r\n        name\r\n        type\r\n        rate\r\n      }\r\n      disabled {\r\n        comment\r\n        until\r\n        state\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react';\nimport {View, Text, StyleSheet, Image} from \"react-native\";\nimport {Divider, Modal, Portal, Title} from \"react-native-paper\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport {InstrumentType, UserTypes, UserTypesUa} from \"../models/models\";\nimport {Linking} from 'react-native'\n\ninterface PropTypes {\n  instrument: InstrumentType;\n  hideModal: () => void;\n  visible: boolean;\n  imageSource: string;\n}\n\nexport default function InstrumentInfo({instrument, hideModal, visible}: PropTypes) {\n  let instrumentType: any = `./../assets/images/UpRightPiano.png`;\n  // @ts-ignore\n  const intRate = Math.round(instrument.rate);\n  const rate = new Array(10).fill(1);\n\n  switch (instrument.type) {\n    case 'Chembalo':\n      instrumentType = <Image source={require(`./../assets/images/Chembalo.png`)} style={styles.icon}/>;\n      break;\n    case 'GrandPiano':\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n      break;\n    case 'UpRightPiano':\n      instrumentType = <Image source={require(`./../assets/images/UpRightPiano.png`)} style={styles.icon}/>;\n      break;\n    default:\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n  }\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <Title style={{textAlign: 'center'}}>{instrumentType} {instrument.name}</Title>\n      <Divider style={styles.divider}/>\n      <Text style={{textAlign: 'center'}}>Тип: {instrument.type}</Text>\n      <Divider style={styles.divider}/>\n      <Text style={{textAlign: 'center'}}>Рейтинг: {instrument.rate.toFixed(1)}</Text>\n      <View style={styles.rate}>\n        {rate.map((item, index) => <Image key={index}\n          style={{...styles.star, opacity: index < intRate ? 1 : .3}}\n          source={require('../assets/images/star.png')}\n        />)}\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  phoneRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  phoneNumber: {\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#eee',\n    padding: 8,\n    fontSize: 16,\n    marginTop: 8,\n    color: '#2b5dff'\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    marginLeft: 4,\n    opacity: .6\n  },\n  star: {\n    width: 20,\n    height: 20\n  },\n  rate: {\n    marginTop: 8,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n}));","import React, {useState} from 'react';\nimport {View, StyleSheet, Text, Dimensions, Image} from \"react-native\";\nimport {ClassroomType, InstrumentType} from \"../models/models\";\nimport InstrumentInfo from \"./InstrumentInfo\";\n\ninterface PropTypes {\n  instrument: InstrumentType;\n  expanded?: boolean;\n}\n\nexport default function InstrumentItem({instrument, expanded = false}: PropTypes) {\n  const {type, rate, name} = instrument;\n  let instrumentType: any = `./../assets/images/UpRightPiano.png`;\n  const [visible, setVisible] = useState(false);\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  switch (type) {\n    case 'Chembalo':\n      instrumentType = <Image source={require(`./../assets/images/Chembalo.png`)} style={styles.icon}/>;\n      break;\n    case 'GrandPiano':\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n      break;\n    case 'UpRightPiano':\n      instrumentType = <Image source={require(`./../assets/images/UpRightPiano.png`)} style={styles.icon}/>;\n      break;\n    default:\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n  }\n\n  return <View style={styles.wrapper} onTouchEnd={expanded ? showModal : () => {}}>\n    {instrumentType}\n    {expanded && <>\n        <Text style={styles.name}>{name}</Text>\n        <Image style={styles.star} source={require('../assets/images/star.png')}/>\n    </>}\n    <Text>{rate.toFixed(1)}</Text>\n    <InstrumentInfo instrument={instrument} hideModal={hideModal} visible={visible}\n                    imageSource={instrumentType}/>\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    marginTop: 4,\n    marginBottom: 4,\n    marginRight: 2,\n    backgroundColor: 'rgba(0, 0, 0, .05)',\n    paddingTop: 4,\n    paddingBottom: 4,\n    paddingLeft: 4,\n    paddingRight: 8,\n    borderRadius: 4,\n    alignItems: 'center'\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    marginLeft: 4,\n    opacity: .6\n  },\n  name: {\n    marginLeft: 4,\n    marginRight: 4\n  },\n  star: {\n    width: 20,\n    height: 20\n  }\n});","import {Mode, OccupiedInfo, OccupiedState, User} from \"../models/models\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ME} from \"../api/operations/queries/me\";\nimport {useLocal} from \"./useLocal\";\nimport {getTimeFromUntil, isNotFree, isPendingForMe} from \"../helpers/helpers\";\n\nconst useTimeLeft = (occupied: OccupiedInfo, minutesDuration: number) => {\n  const [timeLeft, setTimeLeft] = useState('');\n  const [timeLeftInPer, setTimeLeftInPer] = useState(100);\n  const interval = useRef<any>({current: null});\n  const {data: {me}} = useQuery(GET_ME);\n\n  useEffect(() => {\n    if (isNotFree(occupied) && occupied.user.id === me.id  && interval.current !== null) {\n      // @ts-ignore\n      interval.current = setInterval(() => {\n        // @ts-ignore\n        const [left, leftPer] = getTimeFromUntil(occupied.until, minutesDuration);\n        const hour: string = (left as string).split(':')?.[0] + ' год. ';\n        const min: string = (left as string).split(':')?.[1] + ' хв. ';\n        const sec: string = (left as string).split(':')?.[2] + ' сек. ';\n\n        setTimeLeft(hour + min + sec);\n        setTimeLeftInPer(leftPer as number);\n        if (timeLeftInPer <= 0) clearInterval(interval.current);\n      }, 1000);\n    } else {\n      clearInterval(interval.current);\n      interval.current = null;\n      setTimeLeft('');\n    }\n  }, [occupied.state]);\n\n  return [timeLeft, timeLeftInPer];\n};\n\nexport default useTimeLeft;","export const HOUR = 3600000;\r\nexport const MINUTE = 60000;\r\nexport const TIME_SNIPPETS = [\":00\", \":15\", \":30\", \":45\"];\r\nexport const WORKING_DAY_END = 21;\r\nexport const WORKING_DAY_START = 8;","import {gql} from \"@apollo/client\";\n\nexport const MAKE_DECISION_ON_PENDING_CLASSROOM = gql`\n    mutation makeDecisionOnPendingClassroom($input: MakeDecisionOnPendingClassroomInput!) {\n        makeDecisionOnPendingClassroom(input: $input) {\n          classroom {\n            id\n            name\n            special\n            isHidden\n            chair {\n                id\n                name\n                exclusivelyQueueAllowedDepartmentsInfo {\n                  department {\n                    id\n                    name\n                  }\n                }\n            }\n            isWing\n            isOperaStudio\n            occupied {\n              user {\n                id\n                firstName\n                patronymic\n                lastName\n                type\n                nameTemp\n              }\n              until\n              state\n            }\n            instruments {\n              id\n              name\n              type\n              rate\n            }\n            disabled {\n              id\n              comment\n              until\n              state\n            }\n          }\n          userErrors {\n            message\n            code\n          }\n        }\n    }\n`;","import React, {useState} from 'react';\nimport {fullName, getTimeHHMM, isNotFree, isOwnClassroom, isPendingForMe} from \"../helpers/helpers\";\nimport {StyleSheet, Text, View} from \"react-native\";\nimport {Banner, Button, Paragraph, ProgressBar, Surface} from \"react-native-paper\";\nimport {ClassroomType, Mode, OccupiedState, User, UserTypeColors, UserTypes, UserTypesUa} from \"../models/models\";\nimport colors from \"../constants/Colors\";\nimport UserInfo from \"./UserInfo\";\nimport {useLocal} from \"../hooks/useLocal\";\nimport useTimeLeft from \"../hooks/useTimeLeft\";\nimport {client} from \"../api/client\";\nimport {MAKE_DECISION_ON_PENDING_CLASSROOM} from \"../api/operations/mutations/makeDecisionOnPendingClassroom\";\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  user: User;\n}\n\nconst OccupantInfo: React.FC<PropTypes> = ({classroom, user}) => {\n  const {data: {mode}} = useLocal('mode');\n  const userFullName = isNotFree(classroom?.occupied) ? fullName(classroom.occupied?.user) : '';\n  const occupiedTotalTime = classroom.occupied.state === OccupiedState.OCCUPIED ? 180 :\n    classroom.occupied.state === OccupiedState.RESERVED ? 15 : 2;\n  const [timeLeft, timeLeftInPer] = useTimeLeft(classroom?.occupied, occupiedTotalTime);\n  const [visibleBanner, setVisibleBanner] = useState(true);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const makeDecision = async (decision: boolean) => {\n    setLoading(true);\n    try {\n      await client.mutate({\n        mutation: MAKE_DECISION_ON_PENDING_CLASSROOM,\n        variables: {\n          input: {\n            classroomName: classroom.name,\n            continueWaitingForDesiredClassrooms: decision\n          }\n        }\n      });\n      setLoading(false);\n    } catch (e) {\n      alert(JSON.stringify(e));\n      setLoading(false);\n    }\n  }\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  return <>{!isNotFree(classroom.occupied)\n    ? <Text style={styles.freeText}>Вільно</Text>\n    : !isPendingForMe(classroom.occupied, user, mode) && (\n    <Surface style={[{elevation: visible ? 0 : 4}, styles.occupationInfo]}\n             onTouchEnd={showModal}\n    >\n      <Text style={styles.occupantName}>{userFullName}</Text>\n      <Text style={[{\n        backgroundColor: UserTypeColors[classroom.occupied.user.type as UserTypes]\n      },\n        styles.occupantType\n      ]}\n      >\n        {UserTypesUa[classroom.occupied.user.type as UserTypes]}\n      </Text>\n      {isOwnClassroom(classroom.occupied, user) ? (\n        timeLeftInPer > 0 && <View style={{marginTop: 30}}>\n            <Paragraph>\n                Часу на заняття залишилось: {timeLeft}\n            </Paragraph>\n            <ProgressBar progress={timeLeftInPer as number / 100} visible color={colors.red}\n                         style={styles.progressBar}\n            />\n        </View>\n      ) : (\n        <Text style={styles.occupiedUntil}>Зайнято до {getTimeHHMM(new Date(classroom.occupied.until))}</Text>\n      )}\n      <UserInfo userId={classroom.occupied.user.id} hideModal={hideModal} visible={visible}/>\n    </Surface>\n  )}\n    {classroom.occupied.state === OccupiedState.RESERVED &&\n    classroom.occupied.user.id === user.id && (\n      <>\n        {timeLeftInPer > 0 && <View style={styles.spaceBottom30}>\n            <Banner visible={visibleBanner} actions={[{\n              label: 'Зрозуміло',\n              onPress: () => setVisibleBanner(false)\n            }]}\n                    style={styles.spaceBottom30}\n            >Заберіть ключі від аудиторії в учбовій частині. Максимальний час знаходження в аудиторії - 3 години.\n            </Banner>\n            <Paragraph>\n                Час на прийняття рішення: {timeLeft}\n            </Paragraph>\n            <ProgressBar progress={timeLeftInPer as number / 100} visible color={colors.red}\n                         style={styles.progressBar}\n            />\n        </View>}\n      </>\n    )}\n    {classroom.occupied.state === OccupiedState.PENDING &&\n    classroom.occupied.user.id === user.id && mode === Mode.INLINE && (\n      <>\n        {timeLeftInPer > 0 && <View style={styles.spaceBottom30}>\n            <Banner visible={visibleBanner} actions={[{\n              label: 'Зрозуміло',\n              onPress: () => setVisibleBanner(false)\n            }]}\n                    style={styles.spaceBottom30}\n            >\n              {\n                `Ви можете відхилити аудиторію ${user.queueInfo.currentSession?.skips} раз${user.queueInfo.currentSession?.skips === 2 || user.queueInfo.currentSession?.skips === 3 || user.queueInfo.currentSession?.skips === 4 ? 'и.' : '.'\n                } Якщо аудиторія не буде підтверджена на протязі визначеного часу, вона буде відхилена автоматично. Якщо показник допустимих відхилень дорівнює нулю і Ви не підтверджуєте та не відхиляєте аудиторію, вона автоматично відхиляється і Ви вибуваєте з черги.`\n              }\n            </Banner>\n            <Paragraph>\n                Часу на прийняття рішення залишилось: {timeLeft}\n            </Paragraph>\n            <ProgressBar progress={timeLeftInPer as number / 100} visible color={colors.red}\n                         style={styles.progressBar}\n            />\n        </View>}\n        <View>\n          <Button mode='contained' style={{marginBottom: 8}} color='#f91354' loading={loading}\n                  disabled={loading}\n                  onPress={() => makeDecision(false)}>\n            Відхилити аудиторію\n          </Button>\n          <Button mode='contained' onPress={() => makeDecision(true)} loading={loading}\n                  disabled={loading}>\n            Підтвердити аудиторію\n          </Button>\n        </View>\n      </>\n    )}\n  </>\n}\n\nconst styles = StyleSheet.create({\n  occupationInfo: {\n    borderRadius: 8,\n    padding: 16\n  },\n  freeText: {\n    textAlign: 'center',\n    fontSize: 20,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    alignSelf: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 32,\n    borderRadius: 32,\n    color: '#bbb'\n  },\n  occupantName: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  occupantType: {\n    color: '#fff',\n    textAlign: 'center',\n    alignSelf: 'center',\n    paddingVertical: 2,\n    paddingHorizontal: 4,\n    marginTop: 8,\n    borderRadius: 4,\n  },\n  occupiedUntil: {\n    textAlign: 'center',\n    marginTop: 8\n  },\n  progressBar: {\n    height: 24,\n    borderRadius: 6,\n  },\n  spaceBottom30: {\n    marginBottom: 30,\n    backgroundColor: '#ffffff'\n  }\n});\n\nexport default OccupantInfo;","import {gql} from \"@apollo/client\";\n\nexport const ADD_USER_TO_QUEUE = gql`\n    mutation addUserToQueue($input: AddUserToQueueInputType!) {\n        addUserToQueue(input: $input) {\n          user {\n            id\n            firstName\n            lastName\n            occupiedClassrooms {\n              id\n              state\n              until\n              classroom {\n                id\n              }\n            }\n            queueInfo {\n              id\n              currentSession {\n                id\n                state\n                skips\n              }\n            }\n          }\n          userErrors {\n              message\n              code\n            }\n        }\n    }\n`;","import {client, meVar, minimalClassroomIdsVar, modeVar} from \"../../api/client\";\nimport {EnqueuedBy, Mode, QueueState, QueueType, User} from \"../../models/models\";\nimport {ADD_USER_TO_QUEUE} from \"../../api/operations/mutations/addUserToQueue\";\n\nconst getInLine = async (minimalClassroomsIds: number[], desirableClassroomIds: number[]) => {\n  const user: User | null = meVar();\n\n  const allClassroomIds = [...(new Set([...minimalClassroomsIds, ...desirableClassroomIds]))];\n\n  const minimalData = allClassroomIds.map(id => ({\n    classroomId: id,\n    type: QueueType.MINIMAL\n  }));\n\n  const desirableData = desirableClassroomIds.map(id => ({\n    classroomId: id,\n    type: QueueType.DESIRED\n  }));\n\n  try {\n    await client.mutate({\n      mutation: ADD_USER_TO_QUEUE, variables: {\n        input: {\n          userId: user.id,\n          data: [...minimalData, ...desirableData],\n          enqueuedBy: EnqueuedBy.SELF\n        }\n      }\n    })\n    modeVar(Mode.INLINE);\n    minimalClassroomIdsVar(allClassroomIds);\n  } catch (e) {\n    alert(JSON.stringify(e));\n  }\n};\n\nexport  default getInLine;","import {gql} from \"@apollo/client\";\n\nexport const REMOVE_USER_FROM_QUEUE = gql`\n    mutation removeUserFromQueue($input: RemoveUserFromQueueInputType!) {\n        removeUserFromQueue(input: $input) {\n           user {\n            id\n            firstName\n            lastName\n            occupiedClassrooms {\n              id\n              state\n              until\n              classroom {\n                id\n              }\n            }\n            }\n            userErrors {\n             message\n             code\n            }\n        }\n    }\n`;","import {QueueSession, QueueType, User, UserQueueState} from \"../../models/models\";\nimport {getItem} from \"../../api/asyncStorage\";\nimport {client, desirableClassroomIdsVar, isMinimalSetupVar, minimalClassroomIdsVar} from \"../../api/client\";\nimport {REMOVE_USER_FROM_QUEUE} from \"../../api/operations/mutations/removeUserFromQueue\";\n\nexport default async function removeFromLine(classroomId?: number, currentSession?: QueueSession) {\n  const user: User | undefined = await getItem('user');\n  if (classroomId) {\n    try {\n      await client.mutate({\n        mutation: REMOVE_USER_FROM_QUEUE,\n        variables: {\n          input: {\n            userId: user.id,\n            deleteWhere: {\n              classroomId: {\n                equals: classroomId\n              },\n              type: {\n                equals: currentSession.state === UserQueueState.IN_QUEUE_MINIMAL\n                  ? QueueType.MINIMAL : QueueType.DESIRED\n              }\n            }\n          }\n        }\n      });\n      minimalClassroomIdsVar([]);\n      desirableClassroomIdsVar([]);\n      isMinimalSetupVar(true);\n    } catch (e) {\n      alert(JSON.stringify(e))\n    }\n  } else {\n    try {\n      await client.mutate({\n        mutation: REMOVE_USER_FROM_QUEUE,\n        variables: {\n          input: {\n            userId: user.id\n          }\n        }\n      });\n      minimalClassroomIdsVar([]);\n      desirableClassroomIdsVar([]);\n      isMinimalSetupVar(true);\n    } catch (e) {\n      alert(JSON.stringify(e))\n    }\n  }\n};","import React, {useState} from 'react';\nimport {useLocal} from \"../hooks/useLocal\";\nimport {Button, Divider} from \"react-native-paper\";\nimport {desirableClassroomIdsVar, minimalClassroomIdsVar} from \"../api/client\";\nimport {StyleSheet} from \"react-native\";\nimport {ClassroomType, Mode, QueueRecord, QueueType, User, UserQueueState} from \"../models/models\";\nimport getInLine from \"../helpers/queue/getInLine\";\nimport WaitDialog from \"./WaitDialog\";\nimport {isEnabledForQueue} from \"../helpers/helpers\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport removeFromLine from \"../helpers/queue/removeFromLine\";\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  currentUser: User;\n}\n\nconst ClassroomQueueControlButtons: React.FC<PropTypes> = ({\n                                                             classroom, currentUser: {\n    queueInfo: {currentSession}, queue, ...currentUser\n  }\n                                                           }) => {\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const currentRecord: QueueRecord[] = currentSession?.state === UserQueueState.IN_QUEUE_MINIMAL\n    && queue.filter(queueRecord => queueRecord.classroom.id === classroom.id);\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n\n  const handleClassroomForQueue = async () => {\n    if (isMinimalSetup) {\n      const minimalSet = new Set([...minimalClassroomIds]);\n      minimalSet.has(classroom.id) ? minimalSet.delete(classroom.id) : minimalSet.add(classroom.id)\n      minimalClassroomIdsVar([...minimalSet]);\n    } else {\n      const desiredSet = new Set([...desirableClassroomIds]);\n      desiredSet.has(classroom.id) ? desiredSet.delete(classroom.id) : desiredSet.add(classroom.id)\n      desirableClassroomIdsVar([...desiredSet]);\n    }\n    navigation.goBack();\n  };\n\n  const asyncHandleClassroomForQueue = async (exist: boolean) => {\n    setLoading(true);\n    if (currentSession?.state === UserQueueState.IN_QUEUE_MINIMAL) {\n      if (exist) {\n        await removeFromLine(classroom.id, currentSession)\n      } else {\n        await getInLine([classroom.id], []);\n      }\n    } else if (currentSession?.state === UserQueueState.IN_QUEUE_DESIRED_AND_OCCUPYING) {\n      if (exist) {\n        await removeFromLine(classroom.id, currentSession)\n      } else {\n        await getInLine([], [classroom.id]);\n      }\n    }\n    setLoading(false);\n    navigation.goBack();\n  };\n  if (!isEnabledForQueue(classroom, currentUser)) return null;\n  return (\n    <>\n      <WaitDialog visible={loading}/>\n      {mode === Mode.QUEUE_SETUP && (\n        <>\n          <Divider style={styles.divider}/>\n          {isMinimalSetup ? (\n            minimalClassroomIds.includes(classroom.id) ? (\n              <Button mode='contained' style={{marginBottom: 8}}\n                      onPress={handleClassroomForQueue}\n              >\n                Видалити з черги (мінімальні)\n              </Button>\n            ) : (\n              <Button mode='contained' style={{marginBottom: 8}}\n                      onPress={handleClassroomForQueue}\n              >\n                Додати до черги (мінімальні)\n              </Button>\n            )\n          ) : (\n            desirableClassroomIds.includes(classroom.id) ? (\n              <Button mode='contained' style={{marginBottom: 8}}\n                      onPress={handleClassroomForQueue}\n              >\n                Видалити з черги (бажані)\n              </Button>\n            ) : (\n              <Button mode='contained' style={{marginBottom: 8}}\n                      onPress={handleClassroomForQueue}\n              >\n                Додати до черги (бажані)\n              </Button>\n            )\n          )}\n        </>\n      )}\n      {(currentSession?.state === UserQueueState.IN_QUEUE_MINIMAL\n        || currentSession?.state === UserQueueState.IN_QUEUE_DESIRED_AND_OCCUPYING)\n      && (\n        <>\n          <Divider style={styles.divider}/>\n          {currentRecord.some(({type}) => type === QueueType.MINIMAL) ? (\n            <Button mode='contained' style={{marginBottom: 8}}\n                    onPress={() => asyncHandleClassroomForQueue(true)}\n            >\n              Видалити з черги\n            </Button>\n          ) : (\n            <Button mode='contained' style={{marginBottom: 8}}\n                    onPress={() => asyncHandleClassroomForQueue(false)}\n            >\n              Додати до черги\n            </Button>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create(\n  {\n    divider: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n  }\n)\n\nexport default ClassroomQueueControlButtons;","import {gql} from \"@apollo/client\";\n\nexport const RESERVE_FREE_CLASSROOM = gql`\n    mutation reserveFreeClassroom($input: ReserveFreeClassroomInput!) {\n        reserveFreeClassroom(input: $input) {\n          classroom {\n            id\n            occupied {\n              user {\n                id\n                firstName\n                patronymic\n                lastName\n                type\n                nameTemp\n              }\n              until\n              state\n            }\n          }\n          userErrors {\n            message\n            code\n          }\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\nimport {\n  ClassroomType,\n  DisabledState,\n  InstrumentType,\n  OccupiedState,\n  UserQueueState\n} from \"../models/models\";\nimport {ActivityIndicator, Appbar, Button, Chip, Divider, Title} from \"react-native-paper\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {useQuery} from \"@apollo/client\";\nimport {isEnabledForCurrentDepartment, isOccupiedOrPendingByCurrentUser} from \"../helpers/helpers\";\nimport {useLocal} from \"../hooks/useLocal\";\nimport {client} from \"../api/client\";\nimport Colors from \"../constants/Colors\";\nimport {GET_CLASSROOM} from \"../api/operations/queries/classroom\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport moment from \"moment\";\nimport InstrumentItem from \"./InstrumentItem\";\nimport OccupantInfo from \"./OccupantInfo\";\nimport ClassroomQueueControlButtons from \"./ClassroomQueueControlButtons\";\nimport {RESERVE_FREE_CLASSROOM} from \"../api/operations/mutations/reserveFreeClassroom\";\n\ninterface PropTypes {\n  route: any;\n}\n\nconst windowHeight = Dimensions.get(\"window\").height;\n\nexport default function ClassroomInfo({route: {params: {classroomId, currentUserId}}}: PropTypes) {\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState(false);\n  const [classroom, setClassroom] = useState<ClassroomType | null>(null);\n  const {\n    data: userData,\n    loading: userLoading,\n    error: userError,\n  } = useQuery(GET_USER_BY_ID, {\n    variables: {\n      where: {\n        id: currentUserId\n      }\n    }\n  });\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n\n  useEffect(() => {\n    setLoading(true);\n    try {\n      client.query({\n        query: GET_CLASSROOM,\n        variables: {\n          where: {\n            id: classroomId\n          }\n        },\n      }).then(({data}: any) => {\n        setClassroom(data.classroom);\n        setLoading(false);\n      });\n    } catch (e) {\n      alert(JSON.stringify(e));\n      setLoading(false);\n    }\n  }, []);\n\n  const goBack = () => navigation.goBack();\n\n  const getReservedClassroom = async () => {\n    setLoading(true);\n    try {\n    const result = await client.mutate({\n      mutation: RESERVE_FREE_CLASSROOM,\n      variables: {\n        input: {\n          classroomName: classroom.name\n        }\n      }\n    });\n    if (result.data.reserveFreeClassroom.userErrors.length) {\n      result.data.reserveFreeClassroom.userErrors.forEach(({message}: any) => {\n        alert(JSON.stringify(message))\n      })\n    } else {\n      goBack();\n      setLoading(false);\n    }\n    } catch (e) {\n      alert(JSON.stringify(e));\n      setLoading(false);\n    }\n  };\n\n  return <View style={styles.container}>\n    <Appbar style={styles.top}>\n      <Appbar.BackAction onPress={goBack}/>\n      {classroom && userData && (\n        <Appbar.Content\n          title={`Аудиторія ${classroom.name}`}\n          subtitle={classroom.chair ? classroom.chair.name : ''}\n        />\n      )}\n    </Appbar>\n    <View style={styles.wrapper}>\n      {(!classroom || !userData) ? <ActivityIndicator animating color='#fff' size={64}/> : (\n        <View>\n          {!isEnabledForCurrentDepartment(classroom, userData.user) && (\n            <View style={styles.warning}>\n              <Title style={styles.warningText}>Аудиторія недоступна для вашої кафедри</Title>\n            </View>\n          )}\n          {classroom.disabled.state === DisabledState.DISABLED && (\n            <View style={styles.warning}>\n              <Title style={styles.warningText}>Аудиторія відключена від системи</Title>\n              <Title style={styles.warningText}>{classroom.disabled.comment}</Title>\n              <Title style={styles.warningText}>\n                до {moment(classroom.disabled.until).format('DD-MM-YYYY HH:mm')}\n              </Title>\n            </View>\n          )}\n          {classroom.isHidden && (\n            <View style={styles.warning}>\n              <Title style={styles.warningText}>Аудиторія недоступна</Title>\n            </View>\n          )}\n          <View style={styles.tags}>\n            {classroom.isWing && <Chip selected selectedColor='#00f' mode='outlined'\n                                       style={styles.tag}>Флігель</Chip>}\n            {classroom.isOperaStudio && <Chip selected selectedColor='#00f' mode='outlined'\n                                              style={styles.tag}>Оперна студія</Chip>}\n            {classroom.special && <Chip selected selectedColor='#00f' mode='outlined'\n                                        style={styles.tag}>Спеціалізована</Chip>}\n          </View>\n          <Divider style={styles.divider}/>\n          <View>\n            <Text style={{textAlign: 'center'}}>{classroom.description}</Text>\n          </View>\n          <Divider style={styles.divider}/>\n          <View>\n            <Text style={{textAlign: 'center'}}>Поверх: {classroom.floor}</Text>\n          </View>\n          <Divider style={styles.divider}/>\n          <View>\n            {!!classroom.instruments.length && (\n              <>\n                {classroom.instruments?.map((instrument: InstrumentType) => (\n                  <InstrumentItem key={instrument.id} instrument={instrument} expanded/>\n                ))}\n                <Divider style={styles.divider}/>\n              </>\n            )}\n          </View>\n          <OccupantInfo classroom={classroom} user={userData.user}/>\n          {classroom.occupied.state !== OccupiedState.FREE\n          && !isOccupiedOrPendingByCurrentUser(classroom.occupied, userData.user)\n          && <ClassroomQueueControlButtons classroom={classroom} currentUser={userData.user}/>\n          }\n          {classroom.disabled.state !== DisabledState.DISABLED\n          && classroom.occupied.state === OccupiedState.FREE\n          && isEnabledForCurrentDepartment(classroom, userData.user)\n          && userData.user?.queueInfo.currentSession?.state !== UserQueueState.OCCUPYING\n          && userData.user?.queueInfo.currentSession?.state !== UserQueueState.IN_QUEUE_DESIRED_AND_OCCUPYING\n          && (\n            <>\n              <Divider style={styles.divider}/>\n              <Button mode='contained' onPress={getReservedClassroom} disabled={!classroom || loading}>\n                Взяти аудиторію\n              </Button>\n            </>\n          )}\n        </View>\n      )}\n    </View>\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: '#2e287c',\n  },\n  container: {\n    backgroundColor: '#ffffff',\n    height: windowHeight\n  },\n  wrapper: {\n    marginTop: 100,\n    paddingLeft: 16,\n    paddingRight: 16,\n    backgroundColor: '#fff',\n  },\n  warning: {\n    backgroundColor: '#f9135411',\n    borderColor: Colors.red,\n    borderWidth: 2,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16\n  },\n  warningText: {\n    fontWeight: \"bold\",\n    color: Colors.red,\n    textAlign: \"center\"\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  department: {\n    fontSize: 20,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  tags: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  tag: {\n    marginRight: 8\n  },\n  description: {\n    fontSize: 16,\n  },\n  scheduleHeader: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  occupationInfo: {\n    borderRadius: 8,\n    padding: 16\n  },\n  freeText: {\n    textAlign: 'center',\n    fontSize: 20,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    alignSelf: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 32,\n    borderRadius: 32,\n    color: '#bbb'\n  },\n  occupantName: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  occupantType: {\n    color: '#fff',\n    textAlign: 'center',\n    alignSelf: 'center',\n    paddingVertical: 2,\n    paddingHorizontal: 4,\n    marginTop: 8,\n    borderRadius: 4,\n  },\n  occupiedUntil: {\n    textAlign: 'center',\n    marginTop: 8\n  },\n  queueSetupButtons: {\n    marginTop: 32,\n    backgroundColor: '#ffffff'\n  },\n  progressBar: {\n    height: 24,\n    borderRadius: 6,\n  },\n  spaceBottom30: {\n    marginBottom: 30,\n    backgroundColor: '#ffffff'\n  }\n});","import {ClassroomType} from \"../models/models\";\n\nexport default function sortAB(a: ClassroomType, b: ClassroomType) {\n  return parseInt(a.name) - parseInt(b.name);\n}","import React from \"react\";\nimport {Dimensions, Image, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\nimport {ClassroomType, DisabledState} from \"../../models/models\";\nimport Colors from \"../../constants/Colors\";\nimport {Button, Surface} from \"react-native-paper\";\nimport InstrumentItem from \"../InstrumentItem\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {useLocal} from \"../../hooks/useLocal\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst cellWidth = ((windowWidth - 10) / 3);\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  isEnabledForCurrentUser: boolean;\n}\n\nconst FreeClassroomCell: React.FC<PropTypes> = ({classroom, isEnabledForCurrentUser}) => {\n  const navigation = useNavigation();\n  const special = !!classroom.special;\n  const {instruments, disabled} = classroom;\n  const isDisabled = disabled.state === DisabledState.DISABLED || !isEnabledForCurrentUser;\n\n  const handlePress = () => {\n    navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n  };\n\n  return (\n    <TouchableHighlight onPress={handlePress}>\n      <Surface style={[styles.cell, isDisabled ? styles.disabled : styles.free]}>\n        <View style={styles.cellHeader}>\n          <Text style={styles.name}>{classroom.name}</Text>\n          <Image source={require('./../../assets/images/specialPiano.png')}\n                 style={[special ? styles.special : styles.notSpecial]}/>\n        </View>\n        <Text style={styles.occupationInfo} numberOfLines={1}>\n          {isDisabled ? !isEnabledForCurrentUser ? 'Для студентів кафедри' : disabled?.comment : 'Вільно'}\n        </Text>\n        <View style={styles.instruments}>\n          {instruments?.length\n            ? instruments\n              .slice()\n              .sort((a, b) => b.rate - a.rate).slice(0, 2)\n              .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n            : <View style={styles.space}/>}\n        </View>\n      </Surface>\n    </TouchableHighlight>\n  )\n}\n\nexport default FreeClassroomCell;\n\nconst styles = StyleSheet.create({\n  cell: {\n    width: cellWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    margin: 1,\n    elevation: 2,\n    borderRadius: 4,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  occupationInfo: {\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center',\n    backgroundColor: '#00000011'\n  },\n  free: {\n    backgroundColor: '#4bfd63'\n  },\n  disabled: {\n    backgroundColor: '#ccc',\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: cellWidth,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  },\n  timeLeftProgress: {\n    left: 0,\n    position: 'absolute',\n    zIndex: 1000,\n    backgroundColor: '#00000033',\n    height: 100,\n    width: cellWidth,\n  },\n  timeLeft: {\n    fontSize: 12,\n    backgroundColor: '#f91354',\n    color: '#fff',\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  keyImage: {\n    position: \"absolute\",\n    top: 8,\n    right: 8,\n    width: 30,\n    height: 30,\n    resizeMode: \"stretch\",\n    tintColor: Colors.red\n  }\n});","import React, {CSSProperties} from \"react\";\nimport {Dimensions, Image, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\nimport {ClassroomType, DisabledState, Mode} from \"../../models/models\";\nimport Colors from \"../../constants/Colors\";\nimport {IconButton, Surface} from \"react-native-paper\";\nimport InstrumentItem from \"../InstrumentItem\";\nimport {fullName, isNotFree, typeStyle} from \"../../helpers/helpers\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {desirableClassroomIdsVar, minimalClassroomIdsVar} from \"../../api/client\";\nimport useTimeLeft from \"../../hooks/useTimeLeft\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst cellWidth = ((windowWidth - 10) / 3);\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  isEnabledForCurrentUser: boolean;\n}\n\nconst OccupiedClassroomCell: React.FC<PropTypes> = ({classroom, isEnabledForCurrentUser}) => {\n  const navigation = useNavigation();\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n\n  const special = !!classroom.special;\n  const {instruments, occupied, disabled, isHidden} = classroom;\n  const isDisabled = disabled.state === DisabledState.DISABLED || !isEnabledForCurrentUser;\n  const userFullName = fullName(occupied.user, true);\n\n  const handleCheck = () => {\n    if (isMinimalSetup) {\n      const minimalSet = new Set([...minimalClassroomIds]);\n      minimalSet.has(classroom.id) ? minimalSet.delete(classroom.id) : minimalSet.add(classroom.id)\n      minimalClassroomIdsVar([...minimalSet]);\n    } else {\n      const desiredSet = new Set([...desirableClassroomIds]);\n      desiredSet.has(classroom.id) ? desiredSet.delete(classroom.id) : desiredSet.add(classroom.id)\n      desirableClassroomIdsVar([...desiredSet]);\n    }\n  };\n\n  const handlePress = () => {\n    if (mode === Mode.QUEUE_SETUP) {\n      handleCheck();\n    } else {\n      navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n    }\n  };\n\n  const handleLongPress = () => {\n    navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n  };\n\n  const isChecked = () => {\n    if (isMinimalSetup) {\n      return minimalClassroomIds.includes(classroom.id) && mode === Mode.QUEUE_SETUP;\n    } else {\n      return desirableClassroomIds.includes(classroom.id) && mode === Mode.QUEUE_SETUP;\n    }\n  };\n\n  const cellStyle = StyleSheet.create({\n    cell: {\n      width: cellWidth,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 100,\n      margin: 1,\n      elevation: 2,\n      borderRadius: 4,\n      position: 'relative',\n      overflow: 'hidden',\n      opacity: isHidden ? .5 : 1,\n      backgroundColor: isDisabled ? '#ccc' : '#fff'\n    }\n  });\n\n  return (\n    <TouchableHighlight onPress={handlePress} onLongPress={handleLongPress}>\n      <Surface style={cellStyle.cell}>\n        {isChecked() && (\n          <IconButton icon='check-bold' style={styles.checkMark} color='#0f0'\n                      onPress={handlePress} onLongPress={handleLongPress}/>\n        )}\n        <View style={styles.cellHeader}>\n          <Text style={styles.name}>{classroom.name}</Text>\n          <Image source={require('./../../assets/images/specialPiano.png')}\n                 style={[special ? styles.special : styles.notSpecial]}/>\n        </View>\n        <Text style={[styles.occupationInfo, typeStyle(occupied, isDisabled)]} numberOfLines={1}>\n          {isDisabled ? !isEnabledForCurrentUser ? 'Для студентів кафедри' : disabled?.comment : userFullName}\n        </Text>\n        <View style={styles.instruments}>\n          {instruments?.length\n            ? instruments\n              .slice()\n              .sort((a, b) => b.rate - a.rate).slice(0, 2)\n              .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n            : <View style={styles.space}/>}\n        </View>\n      </Surface>\n    </TouchableHighlight>\n  )\n}\n\nexport default OccupiedClassroomCell;\n\nconst styles = StyleSheet.create({\n  occupationInfo: {\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: cellWidth,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  },\n  timeLeftProgress: {\n    left: 0,\n    position: 'absolute',\n    zIndex: 1000,\n    backgroundColor: '#00000033',\n    height: 100,\n    width: cellWidth,\n  },\n  timeLeft: {\n    fontSize: 12,\n    backgroundColor: '#f91354',\n    color: '#fff',\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  keyImage: {\n    position: \"absolute\",\n    top: 8,\n    right: 8,\n    width: 30,\n    height: 30,\n    resizeMode: \"stretch\",\n    tintColor: Colors.red\n  }\n});","import React from \"react\";\nimport {Dimensions, Image, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\nimport {ClassroomType, DisabledState} from \"../../models/models\";\nimport Colors from \"../../constants/Colors\";\nimport {Surface} from \"react-native-paper\";\nimport InstrumentItem from \"../InstrumentItem\";\nimport useTimeLeft from \"../../hooks/useTimeLeft\";\nimport {useNavigation} from \"@react-navigation/native\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst cellWidth = ((windowWidth - 10) / 3);\n\ntype PropTypes = {\n  classroom: ClassroomType;\n}\n\nconst ReservedClassroomCell: React.FC<PropTypes> = ({classroom}) => {\n  const navigation = useNavigation();\n  const special = !!classroom.special;\n  const {instruments, occupied, disabled} = classroom;\n  const isDisabled = disabled.state === DisabledState.DISABLED;\n  const [timeLeft, timeLeftInPer] = useTimeLeft(occupied, 15);\n\n  const handlePress = () => {\n    navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n  };\n\n  const ProgressBackground = () => (\n    <View\n      style={{\n        ...styles.timeLeftProgress,\n        width: (cellWidth / 100) * (timeLeftInPer as number)\n      }}\n    />\n  );\n\n  return (\n    <TouchableHighlight onPress={handlePress}>\n      <Surface style={[styles.cell, isDisabled ? styles.disabled : styles.occupied]}>\n        <Image source={require('../../assets/images/key.png')} style={styles.keyImage}/>\n        <ProgressBackground/>\n        <View style={styles.cellHeader}>\n          <Text style={styles.name}>{classroom.name}</Text>\n          <Image source={require('./../../assets/images/specialPiano.png')}\n                 style={[special ? styles.special : styles.notSpecial]}/>\n        </View>\n        <Text style={styles.timeLeft} numberOfLines={1}>\n          {timeLeft}\n        </Text>\n        <View style={styles.instruments}>\n          {instruments?.length\n            ? instruments\n              .slice()\n              .sort((a, b) => b.rate - a.rate).slice(0, 2)\n              .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n            : <View style={styles.space}/>}\n        </View>\n      </Surface>\n    </TouchableHighlight>\n  )\n}\n\nexport default ReservedClassroomCell;\n\nconst styles = StyleSheet.create({\n  cell: {\n    width: cellWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    margin: 1,\n    elevation: 2,\n    borderRadius: 4,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  occupied: {},\n  disabled: {\n    backgroundColor: '#ccc',\n  },\n  occupationInfo: {\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: cellWidth,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  },\n  timeLeftProgress: {\n    left: 0,\n    position: 'absolute',\n    zIndex: 1000,\n    backgroundColor: '#00000033',\n    height: 100,\n    width: cellWidth,\n  },\n  timeLeft: {\n    fontSize: 12,\n    backgroundColor: '#f91354',\n    color: '#fff',\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  keyImage: {\n    position: \"absolute\",\n    zIndex: 2,\n    top: 8,\n    right: cellWidth / 2 - 15,\n    width: 30,\n    height: 30,\n    resizeMode: \"stretch\",\n    tintColor: Colors.red\n  }\n});","import React from \"react\";\nimport {Dimensions, Image, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\nimport {ClassroomType, DisabledState} from \"../../models/models\";\nimport Colors from \"../../constants/Colors\";\nimport {Surface} from \"react-native-paper\";\nimport InstrumentItem from \"../InstrumentItem\";\nimport useTimeLeft from \"../../hooks/useTimeLeft\";\nimport {useNavigation} from \"@react-navigation/native\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst cellWidth = ((windowWidth - 10) / 3);\n\ntype PropTypes = {\n  classroom: ClassroomType;\n}\n\nconst PendingClassroomCell: React.FC<PropTypes> = ({classroom}) => {\n  const navigation = useNavigation();\n  const special = !!classroom.special;\n  const {instruments, occupied, disabled} = classroom;\n  const isDisabled = disabled.state === DisabledState.DISABLED;\n  const [timeLeft, timeLeftInPer] = useTimeLeft(occupied, 2);\n\n  const handlePress = () => {\n    navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n  };\n\n  const ProgressBackground = () => (\n    <View\n      style={{\n        ...styles.timeLeftProgress,\n        width: (cellWidth / 100) * (timeLeftInPer as number)\n      }}\n    />\n  );\n\n  return (\n    <TouchableHighlight onPress={handlePress}>\n      <Surface style={[styles.cell, isDisabled ? styles.disabled : styles.occupied]}>\n        <ProgressBackground/>\n        <View style={styles.cellHeader}>\n          <Text style={styles.name}>{classroom.name}</Text>\n          <Image source={require('./../../assets/images/specialPiano.png')}\n                 style={[special ? styles.special : styles.notSpecial]}/>\n        </View>\n        <Text style={styles.timeLeft} numberOfLines={1}>\n          {timeLeft}\n        </Text>\n        <View style={styles.instruments}>\n          {instruments?.length\n            ? instruments\n              .slice()\n              .sort((a, b) => b.rate - a.rate).slice(0, 2)\n              .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n            : <View style={styles.space}/>}\n        </View>\n      </Surface>\n    </TouchableHighlight>\n  )\n}\n\nexport default PendingClassroomCell;\n\nconst styles = StyleSheet.create({\n  cell: {\n    width: cellWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    margin: 1,\n    elevation: 2,\n    borderRadius: 4,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  occupied: {},\n  disabled: {\n    backgroundColor: '#ccc',\n  },\n  occupationInfo: {\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: cellWidth,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  },\n  timeLeftProgress: {\n    left: 0,\n    position: 'absolute',\n    zIndex: 1000,\n    backgroundColor: '#00000033',\n    height: 100,\n    width: cellWidth,\n  },\n  timeLeft: {\n    fontSize: 12,\n    backgroundColor: '#f91354',\n    color: '#fff',\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  keyImage: {\n    position: \"absolute\",\n    top: 8,\n    right: 8,\n    width: 30,\n    height: 30,\n    resizeMode: \"stretch\",\n    tintColor: Colors.red\n  }\n});","import React, {CSSProperties} from \"react\";\nimport {Dimensions, Image, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\nimport {ClassroomType, DisabledState, Mode} from \"../../models/models\";\nimport Colors from \"../../constants/Colors\";\nimport {IconButton, Surface} from \"react-native-paper\";\nimport InstrumentItem from \"../InstrumentItem\";\nimport {fullName, isNotFree, typeStyle} from \"../../helpers/helpers\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {minimalClassroomIdsVar} from \"../../api/client\";\nimport useTimeLeft from \"../../hooks/useTimeLeft\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst cellWidth = ((windowWidth - 10) / 3);\n\ntype PropTypes = {\n  classroom: ClassroomType;\n}\n\nconst OccupiedClassroomCell: React.FC<PropTypes> = ({classroom}) => {\n  const navigation = useNavigation();\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n\n  const special = !!classroom.special;\n  const {instruments, occupied, disabled, isHidden} = classroom;\n  const isDisabled = disabled.state === DisabledState.DISABLED;\n  const [timeLeft, timeLeftInPer] = useTimeLeft(occupied, 180);\n\n  const ProgressBackground = () => (\n    <View\n      style={{\n        ...styles.timeLeftProgress,\n        width: (cellWidth / 100) * (timeLeftInPer as number)\n      }}\n    />\n  );\n\n  const handlePress = () => {\n      navigation.navigate('ClassroomInfo', {classroomId: classroom.id});\n  };\n\n  const cellStyle = StyleSheet.create({\n    cell: {\n      width: cellWidth,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 100,\n      margin: 1,\n      elevation: 2,\n      borderRadius: 4,\n      position: 'relative',\n      overflow: 'hidden',\n      opacity: isHidden ? .5 : 1,\n      backgroundColor: isDisabled ? '#ccc' : '#fff'\n    }\n  });\n\n  return (\n    <TouchableHighlight onPress={handlePress}>\n      <Surface style={cellStyle.cell}>\n        <ProgressBackground/>\n        <View style={styles.cellHeader}>\n          <Text style={styles.name}>{classroom.name}</Text>\n          <Image source={require('./../../assets/images/specialPiano.png')}\n                 style={[special ? styles.special : styles.notSpecial]}/>\n        </View>\n        <Text style={styles.timeLeft} numberOfLines={1}>\n          {timeLeft}\n        </Text>\n        <View style={styles.instruments}>\n          {instruments?.length\n            ? instruments\n              .slice()\n              .sort((a, b) => b.rate - a.rate).slice(0, 2)\n              .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n            : <View style={styles.space}/>}\n        </View>\n      </Surface>\n    </TouchableHighlight>\n  )\n}\n\nexport default OccupiedClassroomCell;\n\nconst styles = StyleSheet.create({\n  occupationInfo: {\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: cellWidth,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  },\n  timeLeftProgress: {\n    left: 0,\n    position: 'absolute',\n    zIndex: 1000,\n    backgroundColor: '#00000033',\n    height: 100,\n    width: cellWidth,\n  },\n  timeLeft: {\n    fontSize: 12,\n    backgroundColor: '#f91354',\n    color: '#fff',\n    width: cellWidth,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  keyImage: {\n    position: \"absolute\",\n    top: 8,\n    right: 8,\n    width: 30,\n    height: 30,\n    resizeMode: \"stretch\",\n    tintColor: Colors.red\n  }\n});","import React from 'react';\nimport {StyleSheet, Text, View} from \"react-native\";\nimport {ClassroomType, OccupiedState, User} from \"../../models/models\";\nimport sortAB from \"../../helpers/sortAB\";\nimport FreeClassroomCell from \"./FreeClassroomCell\";\nimport OccupiedClassroomCell from \"./OccupiedClassroomCell\";\nimport ReservedClassroomCell from \"./ReservedClassroomCell\";\nimport PendingClassroomCell from \"./PendingClassroomCell\";\nimport {isEnabledForCurrentDepartment} from \"../../helpers/helpers\";\nimport OccupiedByCurrentUserClassroomCell from \"./OccupiedByCurrentUserClassroomCell\";\n\ntype PropTypes = {\n  classrooms: ClassroomType[];\n  currentUser: User;\n  title?: string;\n}\n\nconst ClassroomsBrowser: React.FC<PropTypes> = ({\n                                                  classrooms, title,\n                                                  currentUser\n                                                }) => {\n  if (!classrooms.length) return null;\n  return (\n    <>\n      {title && <Text style={styles.gridDivider}>\n        {title}\n      </Text>}\n      <View style={styles.grid}>\n        {classrooms.slice().sort(sortAB).map(classroom => {\n          const {occupied: {state, user}, id} = classroom;\n          const isEnabledForCurrentUser = isEnabledForCurrentDepartment(classroom, currentUser);\n\n          const isFree = state === OccupiedState.FREE;\n          const isOccupiedByCurrentUser = state === OccupiedState.OCCUPIED && user.id === currentUser.id;\n          const isOccupied = state === OccupiedState.OCCUPIED || OccupiedState.PENDING || OccupiedState.RESERVED;\n          const isPending = state === OccupiedState.PENDING && user.id === currentUser.id;\n          const isReserved = state === OccupiedState.RESERVED && user.id === currentUser.id;\n\n          if (isFree) return <FreeClassroomCell key={id} classroom={classroom}\n                                                isEnabledForCurrentUser={isEnabledForCurrentUser}\n          />\n          if (isReserved) return <ReservedClassroomCell key={id} classroom={classroom}/>\n          if (isPending) return <PendingClassroomCell key={id} classroom={classroom}/>\n          if (isOccupiedByCurrentUser) return <OccupiedByCurrentUserClassroomCell key={id} classroom={classroom}/>\n          if (isOccupied) return <OccupiedClassroomCell key={id} classroom={classroom}\n                                                        isEnabledForCurrentUser={isEnabledForCurrentUser}\n          />\n        })}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create(\n  {\n    top: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      paddingTop: 26,\n      height: 80,\n      backgroundColor: 'transparent',\n      zIndex: 1\n    },\n    grid: {\n      marginBottom: 8,\n      marginLeft: 2,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'flex-start'\n    },\n    getInLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      left: 20,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLineSingle: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    approve: {\n      position: 'absolute',\n      zIndex: 1,\n      right: 20,\n      bottom: 15,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    wrapper: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'transparent',\n      paddingTop: 80,\n    },\n    queueSwitcher: {\n      flexDirection: 'row',\n      width: '76%',\n      justifyContent: 'center',\n      paddingHorizontal: 5,\n      marginHorizontal: 20,\n      alignItems: 'center',\n    },\n    gridDivider: {\n      color: '#fff',\n      marginBottom: 10,\n      marginLeft: 8,\n      marginRight: 8,\n      paddingLeft: 8,\n      borderBottomWidth: 1,\n      borderBottomColor: '#ffffff77',\n      paddingBottom: 10\n    }\n  }\n);\n\nexport default ClassroomsBrowser;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CLASSROOMS = gql`\r\n  query getClassrooms($where: ClassroomWhereInput) {\r\n    classrooms(where: $where) {\r\n      id\r\n      description\r\n      name\r\n      floor\r\n      special\r\n      isHidden\r\n      chair {\r\n          name\r\n      }\r\n      isWing\r\n      isOperaStudio\r\n      occupied {\r\n        user {\r\n          id\r\n          firstName\r\n          patronymic\r\n          lastName\r\n          type\r\n          nameTemp\r\n          email\r\n          phoneNumber\r\n        }\r\n        until\r\n        state\r\n      }\r\n      instruments {\r\n        name\r\n        type\r\n        rate\r\n      }\r\n      disabled {\r\n        comment\r\n        until\r\n        state\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CLASSROOMS_NO_SCHEDULE = gql`\r\n  query getClassroomsNoSchedule {\r\n    classrooms {\r\n      id\r\n      name\r\n      special\r\n      isHidden\r\n      chair {\r\n          id\r\n          name\r\n          exclusivelyQueueAllowedDepartmentsInfo {\r\n            department {\r\n              id\r\n              name\r\n            }\r\n          }\r\n      }\r\n      isWing\r\n      isOperaStudio\r\n      occupied {\r\n        user {\r\n          id\r\n          firstName\r\n          patronymic\r\n          lastName\r\n          type\r\n          nameTemp\r\n        }\r\n        until\r\n        state\r\n      }\r\n      instruments {\r\n        id\r\n        name\r\n        type\r\n        rate\r\n      }\r\n      disabled {\r\n        id\r\n        comment\r\n        until\r\n        state\r\n      }\r\n    }\r\n  }\r\n`;","import {gql} from \"@apollo/client/core\";\n\nexport const FOLLOW_CLASSROOMS = gql`\n  subscription {\n  classroomUpdate {\n  classroom {\n        id\n        occupied {\n          user {\n            id\n            firstName\n            lastName\n            patronymic\n            type\n          }\n          until\n          state\n        }\n        disabled {\n        comment\n        state\n        until\n      }\n      }\n    }\n  }\n`;","import {gql} from \"@apollo/client/core\";\n\nexport const FOLLOW_USER = gql`\n subscription userUpdate($userId: Int!) {\n    userUpdate(userId: $userId) {\n    user {\n      id\n      occupiedClassrooms {\n        id\n        state\n        classroom {\n          id\n          name\n        }\n      }\n      queue {\n        id\n        state\n        type\n        classroom {\n          id\n        }\n      }\n      queueInfo {\n        id\n        sanctionedUntil\n        currentSession {\n          id\n          state\n          skips\n        }\n      }\n    }\n  }\n}\n`;","import {ClassroomType, DisabledState, OccupiedState, User} from \"../models/models\";\nimport {isEnabledForCurrentDepartment} from \"./helpers\";\n\nexport const filterDisabledForQueue = (classroom: ClassroomType, currentUser: User) => {\n  return (\n    classroom.occupied.state !== OccupiedState.FREE &&\n    classroom.disabled.state === DisabledState.NOT_DISABLED &&\n    !classroom.isHidden &&\n    isEnabledForCurrentDepartment(classroom, currentUser)\n  );\n};","import {desirableClassroomIdsVar, minimalClassroomIdsVar} from \"../api/client\";\nimport {ClassroomType, SavedFilterT, User} from \"../models/models\";\nimport {filterDisabledForQueue} from \"./filterDisabledForQueue\";\n\nexport const filterSavedFilter = (savedFilter: SavedFilterT, classrooms: ClassroomType[], currentUser: User) => {\n  const enabledClassrooms = (classroom: ClassroomType, isMinimal: boolean) => {\n    return savedFilter[isMinimal ? 'minimalClassroomIds': 'desirableClassroomIds'].includes(classroom.id)\n      && filterDisabledForQueue(classroom, currentUser)\n  };\n\n  const minimalIds = classrooms\n    .filter((classroom) => enabledClassrooms(classroom, true))\n    .map(({id}) => id);\n\n  const desireIds = classrooms\n    .filter((classroom) => enabledClassrooms(classroom, false))\n    .map(({id}) => id);\n\n  minimalClassroomIdsVar(minimalIds);\n  desirableClassroomIdsVar(desireIds);\n};","import {StyleSheet} from \"react-native\";\nimport {Button, Dialog, Paragraph, Portal} from \"react-native-paper\";\nimport {InstrumentType, Mode} from \"../models/models\";\nimport React, {useState} from \"react\";\nimport {modeVar} from \"../api/client\";\nimport removeFromLine from \"../helpers/queue/removeFromLine\";\nimport WaitDialog from \"./WaitDialog\";\n\ninterface PropTypes {\n  hideDialog: () => void;\n  visible: boolean;\n}\n\nexport default function ConfirmLineOut({hideDialog, visible}: PropTypes) {\n  const [loading, setLoading] = useState(false);\n\n  const handleOk = async () => {\n    setLoading(true);\n    await removeFromLine();\n    modeVar(Mode.PRIMARY);\n    setLoading(false);\n    hideDialog();\n  };\n\n  return <Portal>\n    <Dialog visible={visible} onDismiss={hideDialog}>\n      <Dialog.Title>Увага!</Dialog.Title>\n      <Dialog.Content>\n        <Paragraph>Ви дійсно бажаєте покинути чергу? Цю дію неможливо буде відмінити.</Paragraph>\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button onPress={hideDialog}>Ні</Button>\n        <Button onPress={handleOk}>Так</Button>\n      </Dialog.Actions>\n    </Dialog>\n    <WaitDialog visible={loading}/>\n  </Portal>\n};","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, Text, View} from \"react-native\";\nimport {Button} from \"react-native-paper\";\nimport Colors from \"../../constants/Colors\";\nimport {hasOwnClassroom} from \"../../helpers/helpers\";\nimport {ClassroomType, Mode, SavedFilterT} from \"../../models/models\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {desirableClassroomIdsVar, minimalClassroomIdsVar, modeVar} from \"../../api/client\";\nimport {filterDisabledForQueue} from \"../../helpers/filterDisabledForQueue\";\nimport {getItem} from \"../../api/asyncStorage\";\nimport {filterSavedFilter} from \"../../helpers/filterSavedFIlters\";\nimport getInLine from \"../../helpers/queue/getInLine\";\nimport ErrorDialog from \"../../components/ErrorDialog\";\nimport moment from \"moment\";\nimport WaitDialog from \"../../components/WaitDialog\";\nimport ConfirmLineOut from \"../../components/ConfirmLineOut\";\n\ntype PropTypes = {\n  currentUser: any;\n  classrooms: ClassroomType[];\n}\n\nconst Buttons: React.FC<PropTypes> = ({currentUser: {queueInfo: {sanctionedUntil}, ...currentUser},\n                                        classrooms}) => {\n  const {data: {mode}} = useLocal('mode');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const [visibleModalError, setVisibleModalError] = useState(false);\n  const queueErrorMessage = `Ви не можете ставати в чергу через накладені санкції до ${sanctionedUntil ? moment(sanctionedUntil)\n    .format('DD-MM-YYYY HH:mm') : ''}. До закінчення санкційного терміну ви можете брати вільні аудиторії.`;\n  const [loading, setLoading] = useState(false);\n  const [visibleLineOut, setVisibleLineOut] = useState(false);\n\n\n  const handlePress = async () => {\n    setLoading(true);\n    if (sanctionedUntil) return setVisibleModalError(true);\n    if (mode === Mode.PRIMARY) {\n      const availableClassroomsIds = classrooms.filter(classroom => {\n        return filterDisabledForQueue(classroom, currentUser);\n      }).map(({id}) => id);\n      modeVar(Mode.QUEUE_SETUP);\n      const savedFilters: SavedFilterT[] | undefined = await getItem('filters');\n      if (savedFilters) {\n        const mainFilter = savedFilters!.find(filter => filter.main);\n        if (mainFilter) {\n          filterSavedFilter(mainFilter, classrooms, currentUser)\n        } else {\n          minimalClassroomIdsVar(availableClassroomsIds);\n          desirableClassroomIdsVar([]);\n        }\n      } else {\n        minimalClassroomIdsVar(availableClassroomsIds);\n        desirableClassroomIdsVar([]);\n      }\n    }\n    if (mode === Mode.QUEUE_SETUP) {\n      modeVar(Mode.PRIMARY);\n      minimalClassroomIdsVar([]);\n      desirableClassroomIdsVar([]);\n    }\n    setLoading(false);\n  };\n\n  const handleReady = async () => {\n    setLoading(true);\n    await getInLine(minimalClassroomIds, desirableClassroomIds);\n    setLoading(false);\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      {mode === Mode.PRIMARY && !(hasOwnClassroom(currentUser.occupiedClassrooms)) && (\n        <Button style={styles.getInLine} mode='contained' color={Colors.blue}\n                onPress={handlePress} loading={loading} disabled={loading}>\n          <Text>Стати в чергу</Text>\n        </Button>\n      )}\n      {mode === Mode.QUEUE_SETUP && (\n        <>\n          <Button style={styles.getOutLine} mode='contained' color={Colors.red}\n                  onPress={handlePress} loading={loading} disabled={loading}>\n            <Text>Відміна</Text>\n          </Button>\n          <Button style={styles.approve} mode='contained' color={Colors.blue}\n                  disabled={(!minimalClassroomIds.length && !desirableClassroomIds.length)|| loading}\n                  onPress={handleReady} loading={loading}>\n            <Text>Стати в чергу</Text>\n          </Button>\n        </>\n      )}\n      {mode === Mode.INLINE && (\n        <Button style={styles.getOutLine} mode='contained' color={Colors.red}\n                onPress={() => setVisibleLineOut(true)} loading={loading} disabled={loading}>\n          <Text>Вийти з черги</Text>\n        </Button>\n      )}\n      <ErrorDialog visible={visibleModalError} hideDialog={() => setVisibleModalError(false)}\n        message={queueErrorMessage}\n      />\n      <WaitDialog visible={loading}/>\n      <ConfirmLineOut hideDialog={() => setVisibleLineOut(false)} visible={visibleLineOut}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create(\n  {\n    wrapper: {\n      position: 'absolute',\n      bottom: 16,\n      left: 16,\n      right: 16,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      zIndex: 1\n    },\n\n    getInLine: {\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLine: {\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginRight: 16,\n    },\n    getOutLineSingle: {\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    approve: {\n      width: '48%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }\n);\n\nexport default Buttons;","import {gql} from \"@apollo/client\";\n\nexport const GENERAL_QUEUE_SIZE = gql`\n  query {\n    generalQueueSize\n  }\n`;","import {gql} from \"@apollo/client/core\";\n\nexport const FOLLOW_GENERAL_QUEUE_SIZE = gql`\n  subscription generalQueueSize {\n    generalQueueSize\n  }\n`;","import {useEffect, useState} from \"react\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType} from \"../models/models\";\nimport {useQuery} from \"@apollo/client\";\nimport {FOLLOW_CLASSROOMS} from \"../api/operations/subscriptions/classrooms\";\n\nconst useClassrooms = (props?: any): [Array<ClassroomType>, any] => {\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const {data, loading, error, subscribeToMore} = useQuery(GET_CLASSROOMS, {\n    variables: {\n      date: ISODateString(props?.date ? props.date : new Date()),\n    }\n  })\n\n  useEffect(() => {\n    !loading && !error && setClassrooms(\n      data.classrooms\n        .slice()\n        .sort(\n          (a: ClassroomType, b: ClassroomType) =>\n            parseInt(a.name) - parseInt(b.name)\n        )\n    );\n  }, [data, loading, error]);\n\n  return classrooms;\n};\n\nexport default useClassrooms;","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions, TextInput} from \"react-native\";\nimport {Button, Checkbox, Headline, IconButton, Modal, Portal} from \"react-native-paper\";\nimport {ClassroomType, SavedFilterT, User} from \"../../models/models\";\nimport {getItem, setItem} from \"../../api/asyncStorage\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport Colors from \"../../constants/Colors\";\nimport {filterSavedFilter} from \"../../helpers/filterSavedFIlters\";\nimport useClassrooms from \"../../hooks/useClassrooms\";\n\nexport type SpecialT = 'with' | 'only' | 'without';\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  currentUser: User;\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SavedFilters({hideModal, visible, currentUser}: PropTypes) {\n  const classrooms: ClassroomType[] = useClassrooms();\n  const [savedFilters, setSavedFilters] = useState<SavedFilterT[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [inputName, setInputName] = useState<string>('');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const [selectedFilter, setSelectedFilter] = useState(-1);\n  const [saveAsMainFilter, setSaveAsMainFilter] = useState(false);\n\n  useEffect(() => {\n    getItem('filters').then(data => {\n      setSavedFilters(data as any);\n    });\n    return () => {\n      setSelectedFilter(-1);\n      setInputName('');\n    };\n  }, []);\n\n  const handleSaveFilter = () => {\n    setIsSaving(true);\n\n    const item: SavedFilterT = {\n      minimalClassroomIds,\n      desirableClassroomIds,\n      name: inputName,\n      main: saveAsMainFilter\n    };\n\n    setItem('filters', savedFilters ? [...savedFilters?.map((filter: any) => {\n      return saveAsMainFilter ? ({...filter, main: false}) : filter\n    }), item] : [item]).then(res => {\n      setIsSaving(false);\n    });\n    // @ts-ignore\n    setSavedFilters(prevState => prevState ? [...prevState?.map((filter: any) => {\n      return saveAsMainFilter ? ({...filter, main: false}) : filter\n    }), item] : [item]);\n  };\n\n  const handleRemoveFilter = (index: number) => {\n    const newFilters = savedFilters;\n\n    newFilters.splice(index, 1);\n    setItem('filters', newFilters).then(res => {\n      getItem('filters').then((data: any) => setSavedFilters(data))\n    })\n    setSelectedFilter(-1);\n  };\n\n  const handleSelectFilter = (filterItem: any, index: number) => {\n    filterSavedFilter(filterItem, classrooms, currentUser)\n    setSelectedFilter(index);\n    hideModal();\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View style={styles.header}>\n        <Headline>Збережені фільтри</Headline>\n      </View>\n      <View style={styles.body}>\n        {savedFilters?.map((filterItem: SavedFilterT, index) => (\n          <View key={index} style={styles.itemRow}>\n            <Text style={selectedFilter === index ? styles.selectedItem : styles.item}\n                  onPress={() => handleSelectFilter(filterItem, index)}>\n              {filterItem.main ? filterItem.name + ' (основний)' : filterItem.name}\n            </Text>\n            <IconButton icon='trash-can-outline' style={styles.bin}\n              onPress={() => handleRemoveFilter(index)}\n            />\n          </View>\n        ))}\n        <View style={styles.newFilterSection}>\n          <TextInput placeholder='Назва нового фільтру' value={inputName}\n                     onChangeText={text => setInputName(text)}\n          />\n          <View style={styles.mainFilterCheckbox}>\n            <Checkbox status={saveAsMainFilter ? 'checked' : 'unchecked'}\n                    onPress={() => setSaveAsMainFilter(prevState => !prevState)}\n            />\n            <Text>Застосувати як основний фільтр</Text>\n          </View>\n          <Button mode='contained'\n                  disabled={isSaving || !inputName}\n                  onPress={handleSaveFilter}\n          >\n            Зберегти новий сет аудиторій\n          </Button>\n        </View>\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    overflow: 'hidden'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#dddddd',\n    width: '100%',\n    backgroundColor: '#f1f1f1'\n  },\n  body: {\n    padding: 20,\n    width: '100%',\n  },\n  itemRow: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    marginBottom: 5,\n  },\n  item: {\n    fontSize: 16,\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1,\n    color: '#000',\n    width: '80%',\n    marginTop: 10\n  },\n  selectedItem: {\n    fontSize: 16,\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1,\n    color: Colors.blue,\n    width: '80%',\n    marginTop: 10\n  },\n  bin: {\n    width: '20%',\n  },\n  mainFilterCheckbox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    marginLeft: -10\n  },\n  newFilterSection: {\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: '#eee',\n    padding: 16,\n    marginTop: 50\n  }\n});","import React from 'react';\nimport {StyleSheet, Text, View} from \"react-native\";\nimport {\n  Modal,\n  Portal,\n  RadioButton,\n} from \"react-native-paper\";\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  isGrandPianoOnly: boolean;\n  setIsGrandPianoOnly: (value: boolean) => void;\n}\n\nexport default function InstrumentsList({hideModal, visible, isGrandPianoOnly,\n                                          setIsGrandPianoOnly}: PropTypes) {\n\n  const handleSelect = (newValue: string) => {\n    setIsGrandPianoOnly(newValue === '0')\n    hideModal();\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View>\n        <RadioButton.Group onValueChange={newValue => handleSelect(newValue)}\n                           value={isGrandPianoOnly ? '0' : '1'}>\n          <View style={styles.item}>\n            <RadioButton value=\"0\" />\n            <Text>Рояль</Text>\n          </View>\n          <View style={styles.item}>\n            <RadioButton value=\"1\" />\n            <Text>Піаніно або рояль</Text>\n          </View>\n        </RadioButton.Group>\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    position: 'absolute',\n    width: '90%',\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n}));","import React from 'react'\nimport {StyleSheet, View, TouchableOpacity, Image} from 'react-native'\nimport {Dialog, Paragraph, Portal, ProgressBar} from \"react-native-paper\";\n\ntype PropTypes = {\n  size: number;\n  count: number;\n  setCount: (count: number) => void;\n  visible: boolean;\n  hideDialog: () => void;\n}\n\nexport default function CustomRating({size = 5, count, setCount, visible, hideDialog}: PropTypes) {\n  const stars = new Array(size).fill(null);\n\n  const handleRate = (value: number) => {\n    setCount(value);\n    hideDialog();\n  };\n\n\n  return (\n    <Portal>\n      <Dialog visible={visible} onDismiss={hideDialog}>\n        <Dialog.Title style={{textAlign: 'center'}}>Виберіть мінімальний рейтинг</Dialog.Title>\n        <Dialog.Content>\n          <View style={styles.rate}>\n            {stars.map((value, index) => (\n              <TouchableOpacity key={index} onPress={() => handleRate(index + 1)}>\n                <Image source={require('../../assets/images/star.png')}\n                       style={{...styles.star, opacity: index < count ? 1 : .3}}\n                />\n              </TouchableOpacity>\n            ))}\n          </View>\n        </Dialog.Content>\n      </Dialog>\n    </Portal>\n  )\n}\n\nconst styles = StyleSheet.create({\n  rate: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  star: {\n    width: 20,\n    height: 20\n  },\n})","import React, {useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions, ScrollView} from \"react-native\";\nimport {\n  Button,\n  IconButton,\n  Modal,\n  Portal,\n  TextInput\n} from \"react-native-paper\";\nimport {InstrumentType} from \"../../models/models\";\nimport InstrumentsList from \"./InstrumentsList\";\nimport CustomRating from \"../../components/CustomRating/CustomRating\";\nimport Colors from \"../../constants/Colors\";\n\nexport type SpecialT = 'with' | 'only' | 'without';\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  instruments: InstrumentType[];\n  setInstruments: any;\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function InstrumentFilters({hideModal, visible, instruments, setInstruments}: PropTypes) {\n  const [isGrandPianoOnly, setIsGrandPianoOnly] = useState(false);\n  const [count, setCount] = useState(0);\n  const [visibleList, setVisibleList] = useState(false);\n  const [visibleRate, setVisibleRate] = useState(false);\n\n  const showModalList = () => setVisibleList(true);\n\n  const hideModalList = () => setVisibleList(false);\n\n  const showModalRate = () => setVisibleRate(true);\n\n  const hideModalRate = () => setVisibleRate(false);\n\n  const addInstrument = () => {\n    const newInstrument = {type: isGrandPianoOnly ? 'GrandPiano' : 'UpRightPiano', rate: count};\n    setInstruments((prevState: InstrumentType[]) => [...prevState, newInstrument]);\n    setCount(0);\n    setIsGrandPianoOnly(false);\n  };\n\n  const removeInstrument = (index: number) => {\n    const newArray = instruments.slice();\n    newArray.splice(index, 1);\n\n    setInstruments(newArray);\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View style={styles.body}>\n        <ScrollView>\n          {instruments.length ? instruments.map((instrument, index) => (\n            <View key={index} style={styles.instrumentRow}>\n              <Text style={{width: '40%'}}>\n                {instrument.type === 'UpRightPiano' ? 'Рояль або піаніно' : 'Рояль'}\n              </Text>\n              <View style={{flexDirection: 'row', alignItems: 'center', width: '20%'}}>\n                <Button icon='star' color={Colors.orange} disabled>\n                  {instrument.rate} +\n                </Button>\n              </View>\n              <IconButton icon='trash-can-outline' onPress={() => removeInstrument(index)}/>\n            </View>\n          )) : <Text style={styles.noInstrumentsLabel}>Інструменти не вибрані</Text>}\n          <View style={styles.newInstrumentRow}>\n            <View style={{width: '40%', flexDirection: 'row', alignItems: 'center'}}>\n              <Text onPress={showModalList}>\n                {!isGrandPianoOnly ? 'Рояль або піаніно' : 'Рояль'}\n              </Text>\n              <IconButton icon='menu-down' onPress={showModalList}/>\n            </View>\n            <View style={{flexDirection: 'row', alignItems: 'center', width: '20%'}}>\n              <Button onPress={showModalRate} icon='star' color={Colors.orange}>{count} +</Button>\n              <CustomRating size={10} count={count} setCount={setCount} hideDialog={hideModalRate}\n                            visible={visibleRate}\n              />\n            </View>\n            <IconButton icon='plus' onPress={addInstrument}/>\n          </View>\n        </ScrollView>\n        <View style={styles.buttons}>\n          <Button mode='contained' onPress={hideModal}>Закрити</Button>\n        </View>\n      </View>\n      <InstrumentsList hideModal={hideModalList} visible={visibleList}\n                       isGrandPianoOnly={isGrandPianoOnly} setIsGrandPianoOnly={setIsGrandPianoOnly} />\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    position: 'absolute',\n    height: 300,\n    width: '90%',\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#dddddd',\n    width: '100%',\n    backgroundColor: '#f1f1f1'\n  },\n  body: {\n    padding: 20,\n  },\n  radioItem: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  divider: {\n    borderBottomColor: '#eee',\n    alignSelf: 'center',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    width: windowWidth - 80,\n    height: 1,\n    marginVertical: 16\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttons: {\n    paddingTop: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  instrumentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    padding: 10,\n  },\n  newInstrumentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    padding: 10,\n  },\n  countInput: {\n    height: 40,\n    width: 40,\n    backgroundColor: 'transparent',\n    paddingLeft: 5\n  },\n  noInstrumentsLabel: {\n    textAlign: 'center',\n    paddingBottom: 15,\n    color: '#ccc',\n    fontSize: 18,\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1,\n  }\n}));","import React, {useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions} from \"react-native\";\nimport {Button, Checkbox, Divider, Headline, Modal, Portal, RadioButton} from \"react-native-paper\";\nimport InstrumentFilters from \"./InstrumentFilters\";\nimport {InstrumentType} from \"../../models/models\";\n\nexport type SpecialT = 'with' | 'only' | 'without';\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  apply: (instruments: InstrumentType[], withWing: boolean, operaStudioOnly: boolean, special: SpecialT) => void;\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function Filters({hideModal, visible, apply}: PropTypes) {\n  const [instruments, setInstruments] = useState<InstrumentType[]>([]);\n  const [special, setSpecial] = useState<SpecialT>('with');\n  const [withWing, setWithWing] = useState(true);\n  const [onlyOperaStudio, setOnlyOperaStudio] = useState(false);\n  const [visibleInstrumentFilters, setVisibleInstrumentFilters] = useState(false);\n\n  const showModalInstrumentFilters = () => setVisibleInstrumentFilters(true);\n\n  const hideModalInstrumentFilters= () => setVisibleInstrumentFilters(false);\n\n  const handleApply = () => {\n    apply(instruments, withWing, onlyOperaStudio, special);\n    hideModal();\n  };\n\n  const getEnding = () => {\n    switch (instruments.length) {\n      case 1: return '';\n      case 2: return 'а';\n      case 3: return 'и';\n      case 4: return 'и';\n      case 5: return 'ів';\n      default: return '...';\n    }\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View style={styles.header}>\n        <Headline>Фільтри аудиторій для черги</Headline>\n      </View>\n      <View style={styles.body}>\n        <Button icon='pencil' onPress={showModalInstrumentFilters}>\n          <Text>\n            { !instruments.length\n              ? 'Будь-які або без інструментів'\n              : `${instruments.length} інструмент${getEnding()}` }\n          </Text>\n        </Button>\n        <Divider style={styles.divider}/>\n        <View style={styles.checkbox}>\n          <Checkbox status={!withWing ? 'checked' : 'unchecked'}\n                    onPress={() => setWithWing(prevState => !prevState)}/>\n          <Text>Без флігеля</Text>\n        </View>\n        <View style={styles.checkbox}>\n          <Checkbox status={onlyOperaStudio ? 'checked' : 'unchecked'}\n                    onPress={() => setOnlyOperaStudio(prevState => !prevState)}/>\n          <Text>Тільки оперна студія</Text>\n        </View>\n        <Divider style={styles.divider}/>\n        <RadioButton.Group onValueChange={newValue => setSpecial(newValue as SpecialT)} value={special}>\n          <View style={styles.radioItem}>\n            <RadioButton value='with' />\n            <Text>Зі спеціалізованими (ф-но)</Text>\n          </View>\n          <View style={styles.radioItem}>\n            <RadioButton value='only' />\n            <Text>Тільки спеціалізовані (ф-но)</Text>\n          </View>\n          <View style={styles.radioItem}>\n            <RadioButton value='without' />\n            <Text>Без спеціалізованих (ф-но)</Text>\n          </View>\n        </RadioButton.Group>\n        <Divider style={styles.divider}/>\n        <View style={styles.buttons}>\n          <Button mode='contained' onPress={handleApply}>Застосувати</Button>\n        </View>\n        <InstrumentFilters hideModal={hideModalInstrumentFilters} visible={visibleInstrumentFilters}\n                           instruments={instruments} setInstruments={setInstruments} />\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    overflow: 'hidden'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#dddddd',\n    width: '100%',\n    backgroundColor: '#f1f1f1'\n  },\n  body: {\n    padding: 20,\n  },\n  radioItem: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  divider: {\n    borderBottomColor: '#eee',\n    alignSelf: 'center',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    width: windowWidth - 80,\n    height: 1,\n    marginVertical: 16\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});","import {ClassroomType, InstrumentType} from \"../../models/models\";\n\ntype InstrumentTypeOrderT = {\n  [index: string]: number;\n};\n\nconst instrumentTypeOrder: InstrumentTypeOrderT = {\n  GrandPiano: 0,\n  UpRightPiano: 1\n};\n\nexport function getClassroomsFilteredByInstruments(classrooms: ClassroomType[],\n                                                   userInstrumentFilterInput: InstrumentType[]) {\n  const instrumentsFilterSorted = sortUserFilterInstruments(userInstrumentFilterInput);\n\n  return classrooms.filter((classroom) => {\n    const instrumentsFilter = [...instrumentsFilterSorted];\n    let classroomInstruments = [...classroom.instruments];\n\n    if (instrumentsFilter.length > classroomInstruments.length) {\n      return false;\n    }\n\n    // first checking all the required grand pianos\n    while (instrumentsFilter[instrumentsFilter.length - 1]?.type === 'GrandPiano') {\n      const classroomGrandPianoInd = getMinimumSatisfactoryInstrumentIndex(\n        classroomInstruments,\n        'GrandPiano',\n        instrumentsFilter[instrumentsFilter.length - 1].rate\n      );\n      if (classroomGrandPianoInd === -1) {\n        return false;\n      }\n\n      instrumentsFilter.pop();\n      classroomInstruments.splice(classroomGrandPianoInd, 1);\n    }\n\n    // checking all the other instruments\n    while (instrumentsFilter.length) {\n      const classroomInstrumentInd = getMinimumSatisfactoryInstrumentIndex(\n        classroomInstruments, null, instrumentsFilter[instrumentsFilter.length - 1].rate\n      );\n      if (classroomInstrumentInd === -1) {\n        return false;\n      }\n\n      instrumentsFilter.pop();\n      classroomInstruments.splice(classroomInstrumentInd, 1);\n    }\n\n    return true;\n  })\n}\n\nfunction sortUserFilterInstruments(instruments: InstrumentType[]) {\n  return instruments.sort((instA, instB) => {\n\n    if (instrumentTypeOrder[instA.type] === instrumentTypeOrder[instB.type]) {\n      return instA.rate - instB.rate;\n    }\n\n    return instrumentTypeOrder[instB.type] - instrumentTypeOrder[instA.type]\n  })\n}\n\nfunction getMinimumSatisfactoryInstrumentIndex(instruments: InstrumentType[],\n                                               instrumentType: string | null, minimumRate: number) {\n  let bestIndex = -1;\n\n  instruments.forEach((instrument, i) => {\n    if (instrumentType && instrument.type !== instrumentType) return;\n\n    if (instrument.rate < minimumRate) return;\n\n    if (bestIndex === -1 || instrument.rate - minimumRate < instruments[bestIndex].rate - minimumRate) {\n      bestIndex = i;\n    }\n  });\n  return bestIndex;\n}","import {gql} from \"@apollo/client\";\n\nexport const GENERAL_QUEUE_POSITION = gql`\n  query generalQueuePosition($userId: Int!){\n    generalQueuePosition(userId: $userId)\n  }\n`;","import {gql} from \"@apollo/client/core\";\n\nexport const FOLLOW_GENERAL_QUEUE_POSITION = gql`\n  subscription generalQueuePosition($userId: Int!) {\n    generalQueuePosition(userId: $userId)\n  }\n`;","import React, {useEffect, useState} from 'react';\nimport {Appbar, Button} from \"react-native-paper\";\nimport {DrawerActions, useNavigation} from \"@react-navigation/native\";\nimport {StyleSheet, View} from \"react-native\";\nimport {useQuery} from \"@apollo/client\";\nimport {GENERAL_QUEUE_SIZE} from \"../../api/operations/queries/generalQueueSize\";\nimport {FOLLOW_GENERAL_QUEUE_SIZE} from \"../../api/operations/subscriptions/generalQueueSize\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {ClassroomType, InstrumentType, Mode, User} from \"../../models/models\";\nimport {desirableClassroomIdsVar, isMinimalSetupVar, minimalClassroomIdsVar} from \"../../api/client\";\nimport SavedFilters from \"./SavedFilters\";\nimport Filters, {SpecialT} from \"./Filters\";\nimport {getClassroomsFilteredByInstruments} from \"./helpers\";\nimport {filterDisabledForQueue} from \"../../helpers/filterDisabledForQueue\";\nimport {GENERAL_QUEUE_POSITION} from \"../../api/operations/queries/generalQueuePosition\";\nimport {FOLLOW_GENERAL_QUEUE_POSITION} from \"../../api/operations/subscriptions/generalQueuePosition\";\n\ntype PropTypes = {\n  freeClassroomsAmount: number;\n  classrooms: ClassroomType[];\n  currentUser: User;\n}\n\nconst ClassroomsAppBar: React.FC<PropTypes> = (\n  {\n    freeClassroomsAmount, classrooms, currentUser\n  }\n) => {\n  const navigation = useNavigation();\n  const {data, loading, error, subscribeToMore} = useQuery(GENERAL_QUEUE_SIZE);\n  const {\n    data: dataPosition, loading: loadingPosition,\n    error: errorPosition, subscribeToMore: subscribeToMorePosition\n  } = useQuery(GENERAL_QUEUE_POSITION, {\n    variables: {\n      userId: currentUser.id\n    }\n  });\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const [visible, setVisible] = useState(false);\n  const [visibleSavedFilters, setVisibleSavedFilters] = useState(false);\n  const [generalQueueSize, setGeneralQueueSize] = useState(0);\n  const [generalQueuePosition, setGeneralQueuePosition] = useState(0);\n\n  useEffect(() => {\n    const unsubscribeSize = subscribeToMore({\n        document: FOLLOW_GENERAL_QUEUE_SIZE,\n        updateQuery: (prev, {subscriptionData}) => {\n          if (!subscriptionData.data) return prev;\n          setGeneralQueueSize(subscriptionData.data.generalQueueSize);\n          return subscriptionData.data.generalQueueSize\n        }\n      }\n      )\n    ;\n    const unsubscribePosition = subscribeToMorePosition({\n        document: FOLLOW_GENERAL_QUEUE_POSITION,\n        variables: {\n          userId: currentUser.id\n        },\n        updateQuery: (prev, {subscriptionData}) => {\n          if (!subscriptionData.data) return prev;\n          setGeneralQueuePosition(subscriptionData.data.generalQueuePosition);\n          return subscriptionData.data.generalQueuePosition\n        }\n      }\n    );\n\n    return () => {\n      unsubscribeSize();\n      unsubscribePosition();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!loading && !error) setGeneralQueueSize(data.generalQueueSize);\n  }, [data, loading, error]);\n\n  const applyGeneralFilter = (instruments: InstrumentType[], withWing: boolean,\n                              operaStudioOnly: boolean, special: SpecialT) => {\n\n    const filteredClassroomsByInstruments = instruments.length ?\n      getClassroomsFilteredByInstruments(classrooms, instruments) : classrooms;\n\n    const filteredIds = filteredClassroomsByInstruments\n      .filter(classroom => filterDisabledForQueue(classroom, currentUser))\n      .filter(classroom => withWing ? true : !classroom.isWing)\n      .filter(classroom => operaStudioOnly ? classroom.isOperaStudio : true)\n      .filter(classroom => {\n        switch (special) {\n          case \"with\":\n            return true;\n          case \"only\":\n            return classroom.special;\n          case \"without\":\n            return !classroom.special;\n        }\n      })\n      .map((classroom) => classroom.id);\n\n    if (isMinimalSetup) {\n      minimalClassroomIdsVar(filteredIds);\n    } else {\n      desirableClassroomIdsVar(filteredIds);\n    }\n  };\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  const showModalSavedFilters = () => setVisibleSavedFilters(true);\n\n  const hideModalSavedFilters = () => setVisibleSavedFilters(false);\n\n  return (\n    <Appbar style={styles.top}>\n      <Appbar.Action icon=\"menu\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n                     color='#fff'\n      />\n      {mode === Mode.INLINE && (\n        <Appbar.Content title={`Ваша позиція в черзі: ${generalQueuePosition}`}\n                        color='#fff'\n        />\n      )}\n      {mode === Mode.PRIMARY && (\n        <Appbar.Content title={`Людей в черзі: ${generalQueueSize}`}\n                        subtitle={`Вільних аудиторій: ${freeClassroomsAmount}`}\n                        color='#fff'\n        />\n      )}\n      {mode === Mode.QUEUE_SETUP && (\n        <>\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', width: '88%'}}>\n            <View style={styles.queueSwitcher}>\n              <Button mode={isMinimalSetup ? 'contained' : 'text'}\n                      style={{position: 'relative', width: '45%'}}\n                      color='#fff'\n                      onPress={() => isMinimalSetupVar(true)}\n              >\n                Мінімальні\n              </Button>\n              <Button\n                mode={!isMinimalSetup ? 'contained' : 'text'}\n                style={{position: 'relative', width: '35%'}}\n                color='#fff'\n                onPress={() => isMinimalSetupVar(false)}\n              >\n                Бажані\n              </Button>\n            </View>\n          </View>\n          <Appbar.Action icon=\"content-save\" onPress={showModalSavedFilters} color='#fff'\n                         style={{position: 'absolute', right: 40, top: 28}}/>\n          <Appbar.Action icon=\"filter\" onPress={showModal} color='#fff'\n                         style={{position: 'absolute', right: 0, top: 28}}/>\n        </>\n      )}\n      <SavedFilters hideModal={hideModalSavedFilters} visible={visibleSavedFilters} currentUser={currentUser}/>\n      <Filters hideModal={hideModal} visible={visible} apply={applyGeneralFilter}/>\n    </Appbar>\n  );\n}\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    zIndex: 1\n  },\n  queueSwitcher: {\n    flexDirection: 'row',\n    width: '76%',\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n});\n\nexport default ClassroomsAppBar;","import {View, StyleSheet, Text, ScrollView, Dimensions} from \"react-native\";\nimport React from \"react\";\n\nexport default function Log({data}: any) {\n  return JSON.stringify(data).length > 2 ?\n    <View style={styles.container}>\n      <ScrollView>\n        <Text style={styles.text}>\n          {typeof data === 'object' ? JSON.stringify(data) : data}\n        </Text>\n      </ScrollView>\n    </View>\n    : <></>\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '50%',\n    backgroundColor: '#00000099',\n    position: 'absolute',\n    zIndex: 99999999,\n    top: 70,\n    elevation: 1000,\n    right: 16,\n    padding: 16,\n    maxHeight: (Dimensions.get('window').height / 100) * 85\n  },\n  text: {\n    color: '#00ff65'\n  }\n});","import {Button, Dialog, Paragraph, Portal} from \"react-native-paper\";\nimport {Mode} from \"../models/models\";\nimport React, {useState} from \"react\";\nimport {modeVar} from \"../api/client\";\nimport removeFromLine from \"../helpers/queue/removeFromLine\";\nimport WaitDialog from \"./WaitDialog\";\n\nexport default function ConfirmContinueDesiredQueue() {\n  const [loading, setLoading] = useState(false);\n\n  const handleLeave = async () => {\n    setLoading(true);\n    await removeFromLine();\n    modeVar(Mode.PRIMARY);\n    setLoading(false);\n  };\n\n  const handleOk = () => {\n    //TODO: handle continue for DESIRED\n  };\n\n  return <Portal>\n    <Dialog visible={true}>\n      <Dialog.Title>Увага!</Dialog.Title>\n      <Dialog.Content>\n        <Paragraph>Ви отримали аудиторію і можете продовжити стояти в черзі за бажаними аудиторіями. Продовжити?</Paragraph>\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button onPress={handleLeave}>Покинути чергу</Button>\n        <Button onPress={handleOk}>Так</Button>\n      </Dialog.Actions>\n    </Dialog>\n    <WaitDialog visible={loading}/>\n  </Portal>\n};","import {useEffect, useRef} from \"react\";\n\nexport function usePrevious(value: any) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};","import * as React from 'react';\nimport {Portal, Button, Modal} from 'react-native-paper';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {useState} from \"react\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n}\n\nexport default function InlineDialog({visible, hideDialog}: PropTypes) {\n  return (\n    <Portal>\n      <Modal visible={visible} onDismiss={hideDialog} contentContainerStyle={styles.containerStyle}>\n        <View>\n          <Text style={styles.header}>Вітаємо!</Text>\n          <Text style={styles.paragraph}>Ви успішно стали в чергу!</Text>\n          <View style={styles.buttons}>\n            <Button mode='contained' onPress={hideDialog}>Закрити</Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  paragraph: {\n    textAlign: 'center',\n    marginBottom: 5,\n    fontSize: 16\n  },\n  buttons: {\n    marginTop: 20,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});","import * as React from 'react';\nimport {Portal, Button, Modal} from 'react-native-paper';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {useState} from \"react\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n}\n\nexport default function QueueOutDialog({visible, hideDialog}: PropTypes) {\n  return (\n    <Portal>\n      <Modal visible={visible} onDismiss={hideDialog} contentContainerStyle={styles.containerStyle}>\n        <View>\n          <Text style={styles.header}>Увага!</Text>\n          <Text style={styles.paragraph}>Ви покинули чергу!</Text>\n          <View style={styles.buttons}>\n            <Button mode='contained' onPress={hideDialog}>Закрити</Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  paragraph: {\n    textAlign: 'center',\n    marginBottom: 5,\n    fontSize: 16\n  },\n  buttons: {\n    marginTop: 20,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});","import React, {useEffect, useRef, useState} from 'react';\nimport {\n  AppState,\n  AppStateStatus,\n  Dimensions,\n  ImageBackground,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport {ActivityIndicator} from \"react-native-paper\";\nimport {ClassroomType, DisabledState, Mode, OccupiedState, User, UserQueueState} from \"../../models/models\";\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport {RootStackParamList} from \"../../types\";\nimport ClassroomInfo from \"../../components/ClassroomInfo\";\nimport {useQuery} from \"@apollo/client\";\nimport ClassroomsBrowser from \"../../components/ClassroomsBrowser/ClassroomsBrowser\";\nimport {GET_CLASSROOMS, GET_CLASSROOMS_NO_SCHEDULE} from \"../../api/operations/queries/classrooms\";\nimport {FOLLOW_CLASSROOMS} from \"../../api/operations/subscriptions/classrooms\";\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\nimport {FOLLOW_USER} from \"../../api/operations/subscriptions/user\";\nimport {getItem} from \"../../api/asyncStorage\";\nimport {hasOwnClassroom, isEnabledForCurrentDepartment, isEnabledForQueue} from \"../../helpers/helpers\";\nimport Buttons from \"./Buttons\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {client, modeVar} from \"../../api/client\";\nimport ClassroomsAppBar from \"./ClassroomsAppBar\";\nimport Log from \"../../components/Log\";\nimport ConfirmContinueDesiredQueue from \"../../components/ConfirmContinueDesiredQueue\";\nimport {usePrevious} from \"../../hooks/usePrevious\";\nimport InlineDialog from \"../../components/InlineDialog\";\nimport QueueOutDialog from \"../../components/QueueOutDialog\";\nimport {sendPushNotification} from \"../PushNotification\";\nimport { useNavigation } from '@react-navigation/native';\nimport {GENERAL_QUEUE_SIZE} from \"../../api/operations/queries/generalQueueSize\";\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst windowHeight = Dimensions.get(\"window\").height;\n\nexport default function Home() {\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const appState = useRef(AppState.currentState);\n  const {data: {me}} = useLocal('me');\n\n  useEffect(() => {\n    getItem('user').then((data: User) => setCurrentUserId(data.id));\n    AppState.addEventListener('change', _handleAppStateChange);\n    return () => {\n      AppState.removeEventListener('change', _handleAppStateChange);\n    }\n  }, []);\n\n  const _handleAppStateChange = (nextAppState: AppStateStatus) => {\n    if (\n      appState.current.match(/inactive|background/) &&\n      nextAppState === 'active'\n    ) {\n      try {\n        client.query({\n          query: GET_CLASSROOMS,\n          fetchPolicy: 'network-only'\n        });\n        client.query({\n          query: GET_USER_BY_ID,\n          variables: {\n            where: {\n              id: me.id\n            }\n          },\n          fetchPolicy: 'network-only'\n        });\n        client.query({\n          query: GENERAL_QUEUE_SIZE,\n          fetchPolicy: 'network-only'\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    appState.current = nextAppState;\n  };\n\n  if (!currentUserId) return null;\n  // @ts-ignore\n  return <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName='ClassroomsList'>\n    <Stack.Screen\n      name={'ClassroomsList' as any}\n      component={ClassroomsList}\n      initialParams={{currentUserId}}\n    />\n    <Stack.Screen\n      name={'ClassroomInfo' as any}\n      component={ClassroomInfo}\n      initialParams={{currentUserId}}\n    />\n  </Stack.Navigator>\n}\n\ntype QueryClassroomsData = {\n  classrooms: ClassroomType[];\n}\n\nconst ClassroomsList: React.FC = ({route}: any) => {\n  const {data: {mode}} = useLocal('mode');\n  const navigation = useNavigation();\n  const {data: {pushNotificationToken}} = useLocal('pushNotificationToken');\n  const [showLog, setShowLog] = useState(false);\n  const [freeClassroomsAmount, setFreeClassroomsAmount] = useState(0);\n  const [showQueueInSuccess, setShownQueueInSuccess] = useState(false);\n  const [showQueueOutSuccess, setShownQueueOutSuccess] = useState(false);\n  const {\n    data,\n    loading,\n    error,\n    subscribeToMore\n  } = useQuery<QueryClassroomsData>(GET_CLASSROOMS_NO_SCHEDULE);\n  const {\n    data: userData,\n    loading: userLoading,\n    error: userError,\n    subscribeToMore: subscribeToMoreUser\n  } = useQuery(GET_USER_BY_ID, {\n    variables: {\n      where: {\n        id: route.params.currentUserId\n      }\n    }\n  });\n  const prevUserData: { user: User } = usePrevious(userData);\n  const prevClassroomsData: { classrooms: ClassroomType[] } = usePrevious(data);\n\n  useEffect(() => {\n    if (userData && prevUserData) {\n      const {currentSession} = userData.user?.queueInfo;\n      const {currentSession: prevSession} = prevUserData.user?.queueInfo;\n      if (!prevSession && currentSession?.state === UserQueueState.IN_QUEUE_MINIMAL) {\n        setShownQueueInSuccess(true);\n      }\n      if (!currentSession &&\n        (prevSession?.state === UserQueueState.IN_QUEUE_MINIMAL ||\n          prevSession?.state === UserQueueState.IN_QUEUE_DESIRED_AND_OCCUPYING)) {\n        setShownQueueOutSuccess(true);\n      }\n    }\n  }, [userData]);\n\n  // useEffect(() => {\n  //   if (data && prevClassroomsData && userData) {\n  //     data.classrooms.forEach(({occupied, id, name}) => {\n  //       const prevClassroomOccupiedData = prevClassroomsData.classrooms\n  //         .find((classroom) => classroom.id === id)?.occupied;\n  //       if (prevClassroomOccupiedData.user?.id !== occupied.user?.id && occupied.state === OccupiedState.PENDING\n  //         && occupied.user?.id === userData.user.id) {\n  //         sendPushNotification(pushNotificationToken, `Аудиторія ${name} звільнена.`,\n  //           `Ви маєте 2 хв. щоб зарезервувати або пропустити ії.`);\n  //       }\n  //     })\n  //   }\n  // }, [data, userData]);\n\n  useEffect(() => {\n    const unsubscribeClassrooms = subscribeToMore({\n      document: FOLLOW_CLASSROOMS,\n    });\n    const unsubscribeUser = subscribeToMoreUser({\n      document: FOLLOW_USER,\n      variables: {\n        userId: route.params.currentUserId\n      }\n    });\n    return () => {\n      unsubscribeClassrooms();\n      unsubscribeUser();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!loading && !error && userData) {\n      const freeClassrooms = data.classrooms.filter(classroom => {\n        return classroom.occupied.state === OccupiedState.FREE\n          && classroom.disabled.state === DisabledState.NOT_DISABLED\n          && isEnabledForCurrentDepartment(classroom, userData.user);\n      });\n      setFreeClassroomsAmount(freeClassrooms.length);\n    }\n  }, [data, userData]);\n\n  useEffect(() => {\n    if (userData) {\n      if (!!userData.user?.queue.length) modeVar(Mode.INLINE);\n      if (!userData.user?.queue.length && mode === Mode.INLINE) modeVar(Mode.PRIMARY);\n    }\n  }, [userData]);\n\n  /**\n   * Find occupied classroom for current user (OCCUPIED or RESERVED)\n   * */\n  const own = ({id}: ClassroomType) => {\n    return id === hasOwnClassroom(userData.user.occupiedClassrooms);\n  };\n\n  /**\n   * Filter classrooms for primary state (not in queue and not in queue setup)\n   * Hidden shown when is occupied\n   * Without occupied by current user\n   * */\n  const primary = (classroom: ClassroomType) => {\n    const ownClassroomId = hasOwnClassroom(userData.user.occupiedClassrooms);\n    const fullHidden = classroom.occupied.state === OccupiedState.FREE && classroom.isHidden;\n\n    return classroom.id !== ownClassroomId && !fullHidden &&\n      !(userData.user.occupiedClassrooms.some((data: any) => {\n        return data.classroom.id === classroom.id && data.state === OccupiedState.PENDING\n      }));\n  };\n\n  /**\n   * From BE queue data\n   * Filter chosen classrooms in queue setup mode (MINIMAl and DESIRED)\n   * */\n  const chosen = (classroom: ClassroomType) => {\n\n    return userData.user.queue.some(({classroom: {id}, ...queueRecord}: any) => classroom.id === id)\n      && !(userData.user.occupiedClassrooms.some(({id}: ClassroomType) => classroom.id === id));\n  };\n\n  /**\n   * Others not in queue classrooms\n   * */\n  const notChosen = (classroom: ClassroomType) => {\n    const ownClassroomId = hasOwnClassroom(userData.user.occupiedClassrooms);\n\n    return !(userData.user.queue.some(({classroom: {id}}: any) => classroom.id === id)) &&\n      classroom.id !== ownClassroomId;\n  };\n\n  /**\n   * Filter action pending classrooms for current user\n   * */\n  const pending = ({id}: ClassroomType) => {\n    return userData.user.occupiedClassrooms.some((data: any) => {\n      return data.classroom.id === id && data.state === OccupiedState.PENDING\n    });\n  };\n\n  const handleShowLog = () => {\n    setShowLog(prevState => !prevState);\n  }\n\n  return (\n    <ImageBackground source={require('../../assets/images/bg.jpg')}\n                     style={{width: '100%', height: windowHeight}}>\n      {!loading && !error && !userLoading && !userError\n      && userData.user.queueInfo.currentSession?.state === UserQueueState.IN_QUEUE_DESIRED_AND_OCCUPYING\n      && <ConfirmContinueDesiredQueue/>}\n      {!userLoading && !userError && (\n        <>\n          <InlineDialog visible={showQueueInSuccess}\n                        hideDialog={() => setShownQueueInSuccess(false)}\n          />\n          <QueueOutDialog visible={showQueueOutSuccess}\n                          hideDialog={() => setShownQueueOutSuccess(false)}\n          />\n        </>\n      )}\n      {mode !== Mode.QUEUE_SETUP && (\n        <TouchableOpacity style={styles.hiddenLogButton} onLongPress={handleShowLog}\n                          delayLongPress={3000}>\n        </TouchableOpacity>\n      )}\n      {!loading && !error && !userLoading && !userError && (\n        <ClassroomsAppBar freeClassroomsAmount={freeClassroomsAmount} classrooms={data.classrooms}\n                          currentUser={userData.user}\n        />\n      )}\n\n      <View style={styles.wrapper}>\n        {showLog && (\n          <Log data={JSON.stringify({...userData.user.queueInfo, ...userData.user.queue})}/>\n        )}\n        {!loading && !error && !userLoading && !userError && (\n          <ScrollView style={styles.scrollView}>\n            {/**\n             My classroom: OCCUPIED or RESERVED classroom by current user\n             Shown anytime except QUEUE_SETUP mode.\n             */}\n            {mode !== Mode.QUEUE_SETUP && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter(own)} currentUser={userData.user}\n                                 title='Моя аудиторія'\n              />\n            )}\n\n            {/**\n             Pending classroom: PENDING for approval by current user\n             Shown in QUEUED mode\n             */}\n            {mode === Mode.INLINE && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter(pending)} currentUser={userData.user}\n                                 title='Аудиторії, що очікують підтвердження'\n              />\n            )}\n\n            {/**\n             Classrooms browser shown when current user is not in queue\n             Shown all classrooms except classrooms of current user (OCCUPIED, PENDING and RESERVED)\n             and hidden and FREE at same time\n             */}\n            {mode === Mode.PRIMARY && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter(primary)} currentUser={userData.user}\n                                 title='Всі аудиторії'\n              />\n            )}\n\n            {/**\n             Classrooms browser shown when current user is in QUEUE_SETUP mode\n             Shown all classrooms except classrooms of current user (OCCUPIED, PENDING and RESERVED),\n             hidden, free, disabled and disabled for current department\n             */}\n            {mode === Mode.QUEUE_SETUP && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter((classroom => {\n                return isEnabledForQueue(classroom, userData.user);\n              }))} currentUser={userData.user}/>\n            )}\n\n            {/**\n             All chosen for queue classrooms when IN_QUEUE mode is enabled\n             */}\n            {mode === Mode.INLINE && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter(chosen)} currentUser={userData.user}\n                                 title='Аудиторії, за якими я стою в черзі'\n              />\n            )}\n\n            {/**\n             All NOT chosen for queue classrooms when IN_QUEUE mode is enabled\n             */}\n            {mode === Mode.INLINE && (\n              <ClassroomsBrowser classrooms={data.classrooms.filter(notChosen)} currentUser={userData.user}\n                                 title='Інші аудиторії'\n              />\n            )}\n          </ScrollView>\n        )}\n        {loading && <ActivityIndicator animating color='#fff' size={64}/>}\n      </View>\n      {!!userData && !loading && !error && (\n        <Buttons currentUser={userData.user} classrooms={data.classrooms}/>\n      )}\n    </ImageBackground>\n  )\n}\n\nconst styles = StyleSheet.create(\n  {\n    grid: {\n      marginBottom: 80,\n      marginLeft: 2,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'flex-start'\n    },\n    getInLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      left: 20,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLineSingle: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 15,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    approve: {\n      position: 'absolute',\n      zIndex: 1,\n      right: 20,\n      bottom: 15,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    wrapper: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'transparent',\n      paddingTop: 80,\n    },\n    queueSwitcher: {\n      flexDirection: 'row',\n      width: '76%',\n      justifyContent: 'center',\n      paddingHorizontal: 5,\n      marginHorizontal: 20,\n      alignItems: 'center',\n    },\n    hiddenLogButton: {\n      position: \"absolute\",\n      zIndex: 1000,\n      width: 100,\n      height: 50,\n      top: 16,\n      right: 16,\n    },\n    scrollView: {\n      paddingTop: 8,\n      paddingBottom: 80\n    }\n  }\n);","import React from 'react';\nimport {ImageBackground, Image, View} from \"react-native\";\nimport {ProgressBar} from \"react-native-paper\";\n\nexport default function Splash() {\n\n  return (\n    <ImageBackground source={require('./../assets/images/bg.jpg')} style={{\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }}>\n      <Image source={require('./../assets/images/au_logo_shadow.png')} style={{\n        width: '80%',\n        resizeMode: 'contain',\n        height: 130,\n      }}/>\n      <View style={{width: '70%', marginTop: 40}}>\n        <ProgressBar indeterminate color='#fff'/>\n      </View>\n    </ImageBackground>\n  )\n};","import React from 'react';\nimport {ScrollView, StyleSheet, Text, ImageBackground, Dimensions} from \"react-native\";\nimport {Appbar, Paragraph, Title} from \"react-native-paper\";\nimport {DrawerActions} from \"@react-navigation/native\";\n\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function PrivacyPolicy({navigation}: any) {\n  return (\n    <ImageBackground source={require('../assets/images/bg.jpg')}\n                     style={{width: '100%', height: windowHeight}}>\n      <Appbar style={styles.top}>\n        <Appbar.Action icon=\"menu\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n                       color='#fff'\n        />\n        <Appbar.Content\n          title='Політика конфіденційності' color='#fff'\n        />\n      </Appbar>\n      <ScrollView style={styles.wrapper}>\n        <Title> Політика конфіденційності </Title>\n        <Paragraph> Останнє оновлення: 25 серпня 2021 р.</Paragraph>\n        <Paragraph> Ця Політика конфіденційності описує нашу політику та процедури щодо збору, використання та розкриття\n          вашої\n          інформації під час користування Сервісом та розповідає вам про ваші права на конфіденційність та про те, як\n          закон\n          захищає вас. </Paragraph>\n        <Paragraph> Ми використовуємо Ваші персональні дані для надання та покращення Послуги. Користуючись Послугою, ви\n          погоджуєтесь на\n          збір та використання інформації відповідно до цієї Політики конфіденційності.</Paragraph>\n        <Title> Інтерпретація та визначення </Title>\n        <Title> Інтерпретація </Title>\n        <Paragraph> Слова, у яких початкова буква написана з великої букви, мають значення, визначені за таких умов.\n          Наступні визначення\n          мають однакове значення незалежно від того, чи входять вони в однині чи множині. </Paragraph>\n        <Title style={{fontSize: 16}}> Визначення </Title>\n        <Paragraph> Для цілей цієї Політики конфіденційності: </Paragraph>\n\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Обліковий запис </Text> означає унікальний обліковий запис,\n            створений для доступу до нашого\n            Сервісу або частин нашого Сервісу. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Додаток </Text> означає програмне забезпечення, надане\n            Компанією, завантажене Вами на будь -якому\n            електронному пристрої під назвою Auditorium </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Компанія </Text> (в даній Угоді також згадується як \"Компанія\",\n            \"Ми\", \"Ми\" або \"Наша\" або\n            \"Auditorium\"). </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Країна </Text> відноситься до: Україна </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Пристрій </Text> означає будь -який пристрій, який має доступ до\n            Доатку, наприклад комп’ютер,\n            мобільний телефон або цифровий планшет. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Особисті дані </Text> - це будь -яка інформація, що стосується\n            ідентифікованої особи або особи, що\n            ідентифікується. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Послуга </Text> відноситься до Програми. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Постачальник послуг </Text> означає будь -яку фізичну або\n            юридичну особу, яка обробляє дані від\n            імені Компанії. Він відноситься до сторонніх компаній або приватних осіб, зайнятих Компанією для сприяння\n            Службі, надання Послуги від імені Компанії, для надання послуг, пов'язаних із Послугою, або для надання\n            допомоги Компанії в аналізі використання Сервісу. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Дані про використання </Text> відносяться до даних, зібраних\n            автоматично, або генерованих шляхом\n            використання Сервісу, або з інфраструктури самої Сервісу (наприклад, тривалість відвідування сторінки).\n          </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Ви </Text> означає фізичну особу, яка отримує доступ або\n            користується Послугою, або компанію чи\n            іншу юридичну особу, від імені якої така особа отримує доступ або користується Службою, якщо це можливо.\n          </Paragraph>\n        </Paragraph>\n\n        <Title> Збір та використання ваших особистих даних </Title>\n        <Title style={{fontSize: 16}}> Типи зібраних даних </Title>\n        <Title style={{fontSize: 14}}>Особисті дані </Title>\n        <Paragraph> Під час користування нашим Сервісом ми можемо попросити вас надати нам певну особисту інформацію,\n          яка може бути\n          використана для зв’язку або ідентифікації вас. Інформація, що ідентифікує особу, може включати, але не\n          обмежуватися\n          ними: </Paragraph>\n\n        <Paragraph>\n          <Paragraph> Адреса електронної пошти </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph> Ім'я та прізвище </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph> Номер телефону </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph> Дані про місце Вашого навчання або роботи </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph> Дані використання </Paragraph>\n        </Paragraph>\n\n        <Title style={{fontSize: 14}}>Дані використання </Title>\n        <Paragraph> Дані про використання збираються автоматично під час використання Сервісу. </Paragraph>\n        <Paragraph> Дані про використання можуть включати таку інформацію, як адреса Інтернет -протоколу вашого пристрою\n          (наприклад, IP\n          -адреса), тип веб -переглядача, версія браузера, сторінки нашої Служби, які ви відвідуєте, час і дата вашого\n          відвідування, час, витрачений на ці сторінки , унікальні ідентифікатори пристрою та інші діагностичні\n          дані. </Paragraph>\n        <Paragraph> Коли ви отримуєте доступ до Служби через або через мобільний пристрій, ми можемо автоматично збирати\n          певну\n          інформацію, включаючи, але не обмежуючись, тип мобільного пристрою, яким ви користуєтесь, унікальний\n          ідентифікатор\n          вашого мобільного пристрою, IP -адресу вашого мобільного пристрою , Ваша мобільна операційна система, тип\n          мобільного\n          Інтернет -браузера, який ви використовуєте, унікальні ідентифікатори пристрою та інші діагностичні\n          дані. </Paragraph>\n        <Paragraph> Ми також можемо збирати інформацію, яку надсилає ваш веб -переглядач, коли ви відвідуєте наш Сервіс\n          або коли ви\n          отримуєте доступ до Служби за допомогою мобільного пристрою або через нього. </Paragraph>\n        <Title style={{fontSize: 16}}> Використання ваших особистих даних </Title>\n        <Paragraph> Компанія може використовувати Персональні дані для таких цілей: </Paragraph>\n\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Для надання та підтримки нашого Застосунку </Text>, зокрема для\n            контролю за його використанням.\n          </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Щоб керувати своїм обліковим записом: </Text> керуйте своєю\n            реєстрацією як користувач Додатку.\n            Надані Вами персональні дані можуть надати Вам доступ до різних функцій Сервісу, які доступні Вам як\n            зареєстрованому користувачу. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Щоб зв’язатися з Вами: </Text> Щоб зв’язатися з Вами електронною\n            поштою, телефонними дзвінками,\n            SMS або іншими еквівалентними формами\n            електронного зв'язку, наприклад, push -сповіщення мобільних додатків щодо оновлень або інформативні\n            комунікації, пов'язані з функціональними можливостями, продуктами або контрактними послугами, включаючи\n            безпеку\n            оновлення, коли це необхідно або розумно для їх впровадження. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Щоб надати Вам </Text> новини, спеціальні пропозиції та загальну\n            інформацію про інші товари,\n            послуги\n            та події, які ми пропонуємо, подібні до тих, які ви вже придбали чи запитали про них, крім випадків, коли це\n            відбувається\n            Ви вирішили не отримувати таку інформацію. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> Щоб керувати Вашими запитами: </Text> Щоб відвідувати та\n            керувати Вашими запитами до нас. </Paragraph>\n        </Paragraph>\n        <Paragraph>\n          <Paragraph><Text style={{fontWeight: '600'}}> В інших цілях </Text>: Ми можемо використовувати Вашу інформацію\n            в інших цілях, таких як аналіз\n            даних,\n            визначення тенденцій використанняб оцінка та\n            покращення наших послуг.</Paragraph>\n        </Paragraph>\n\n        <Paragraph> Ми можемо передавати Вашу особисту інформацію у таких ситуаціях: </Paragraph>\n\n        <Paragraph><Text style={{fontWeight: '600'}}> З постачальниками послуг. </Text> Ми можемо передавати Вашу\n          особисту інформацію постачальникам послуг\n          відстежувати та аналізувати використання нашого Сервісу, щоб зв’язатися з Вами.\n        </Paragraph>\n        <Paragraph><Text style={{fontWeight: '600'}}> З діловими партнерами: </Text> Ми можемо поділитися Вашою\n          інформацією з нашими діловими партнерами,\n          щоб запропонувати Вам\n          певні товари, послуги чи акції.\n        </Paragraph>\n        <Paragraph><Text style={{fontWeight: '600'}}> З іншими користувачами: </Text> коли ви ділитесь особистою\n          інформацією або іншим чином взаємодієте у\n          загальнодоступних місцях\n          з іншими користувачами таку інформацію можуть переглядати всі користувачі та публічно розповсюджувати їх за\n          межами.\n        </Paragraph>\n        <Paragraph><Text style={{fontWeight: '600'}}> З вашої згоди </Text>: Ми можемо розкривати Вашу особисту\n          інформацію для будь-яких інших цілейю</Paragraph>\n\n        <Title style={{fontSize: 16}}> Збереження ваших особистих даних</Title>\n        <Paragraph> Компанія зберігатиме Ваші персональні дані лише стільки часу, скільки це необхідно для цілей,\n          викладених у цій\n          Політиці Конфіденційності. Ми будемо зберігати та використовувати Ваші Персональні дані в обсязі, необхідному\n          для виконання наших\n          юридичних зобов’язань (наприклад, якщо ми зобов’язані зберігати ваші дані відповідно до чинного\n          законодавства).</Paragraph>\n        <Paragraph> Компанія також зберігатиме дані про використання для цілей внутрішнього аналізу. Дані про\n          використання зазвичай\n          зберігаються для коротший період часу, за винятком випадків, коли ці дані використовуються для посилення\n          безпеки або покращення\n          функціональності. </Paragraph>\n        <Title style={{fontSize: 16}}> Передача ваших особистих даних </Title>\n        <Paragraph> Ваша інформація, включаючи персональні дані, обробляється в офісах компанії та в будь -яких інших\n          місцях\n          де знаходяться сторони, які беруть участь у обробці. Це означає, що ця інформація може бути передана\n          на комп'ютерах, що знаходяться за межами Вашого штату, провінції, країни чи іншої урядової юрисдикції, де\n          законодавство про захист даних може відрізнятися від законодавства Вашої юрисдикції. </Paragraph>\n        <Paragraph> Ваша згода з цією Політикою конфіденційності з подальшим поданням такої інформації є вашою згодою на\n          це.</Paragraph>\n        <Paragraph> Компанія вживе всіх необхідних заходів, щоб забезпечити безпечне та відповідне поводження з Вашими\n          даними\n          згідно з цією Політикою конфіденційності, передача Ваших персональних даних не відбуватиметься до організації\n          чи країни\n          якщо немає належного контролю, включаючи безпеку Ваших даних та іншої особистої інформації. </Paragraph>\n        <Title style={{fontSize: 16}}> Розкриття ваших особистих даних </Title>\n        <Title style={{fontSize: 14}}>Ділові операції </Title>\n        <Paragraph> Якщо Компанія бере участь у злитті, поглинанні або продажу активів, Ваші Персональні дані можуть\n          бути передані. Ми будемо\n          надіслати повідомлення до того, як Ваші Персональні дані будуть передані та стануть предметом іншої Політики\n          конфіденційності. </Paragraph>\n        <Title style={{fontSize: 14}}>Правоохоронні органи </Title>\n        <Paragraph> За певних обставин від Компанії може знадобитися розкриття ваших Персональних даних, якщо цього\n          вимагає закон\n          або у відповідь на дійсні запити державних органів (наприклад, суду чи державного органу). </Paragraph>\n        <Title style={{fontSize: 14}}>Інші законодавчі вимоги </Title>\n        <Paragraph> Компанія може добросовісно розкрити Ваші Персональні дані, що такі дії необхідні для: </Paragraph>\n\n        <Paragraph> Виконувати юридичні зобов’язання </Paragraph>\n        <Paragraph> Захищати та захищати права чи майно Компанії </Paragraph>\n        <Paragraph> Запобігайте або розслідувати можливі правопорушення, пов'язані з Додатком</Paragraph>\n        <Paragraph> Захищати особисту безпеку Користувачів Послуги</Paragraph>\n\n        <Title style={{fontSize: 16}}> Безпека ваших особистих даних </Title>\n        <Paragraph> Для нас важлива безпека ваших персональних даних, але пам’ятайте, що жоден спосіб передачі через\n          Інтернет,\n          або спосіб електронного зберігання не є 100% безпечним.</Paragraph>\n        <Title> Посилання на інші веб-сайти </Title>\n        <Paragraph> Наш Сервіс може містити посилання на інші веб-сайти, якими ми не керуємо. Якщо Ви натискаєте\n          посилання третьої сторони, Ви\n          буде перенаправлено на веб-сайт цієї третьої сторони. Ми наполегливо радимо Вам переглянути Політику\n          конфіденційності кожного Вашого сайту\n          відвідування. </Paragraph>\n        <Paragraph> Ми не контролюємо і не несемо відповідальності за зміст, політику конфіденційності чи практику\n          будь-якої третьої особи\n          вечірки або послуги. </Paragraph>\n        <Title> Зміни до цієї Політики конфіденційності </Title>\n        <Paragraph> Ми можемо час від часу оновлювати нашу Політику конфіденційності. Ми повідомимо Вас про будь-які\n          зміни, опублікувавши нову Політику Конфіденційности на цій сторінці. </Paragraph>\n        <Paragraph> Ми повідомимо Вас електронною поштою та/або помітним повідомленням про наш Додаток до того, як зміна\n          набуде чинності та\n          оновлення. Дата останнього оновлення у верхній частині цієї Політики конфіденційності. </Paragraph>\n        <Paragraph> Радимо періодично переглядати цю Політику конфіденційності на предмет будь-яких змін. Зміни в цій\n          Політиці конфіденційності\n          набувають чинності, коли вони розміщені на цій сторінці. </Paragraph>\n        <Title> Зв’яжіться з нами </Title>\n        <Paragraph> Якщо у вас є запитання щодо цієї Політики конфіденційності, ви можете зв'язатися з\n          нами: </Paragraph>\n\n        <Paragraph> На електронну адресу: auditorium.knmau@gmail.com </Paragraph>\n      </ScrollView>\n    </ImageBackground>\n  )\n}\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n  },\n  wrapper: {\n    marginTop: 80,\n    paddingLeft: 16,\n    paddingRight: 16,\n    backgroundColor: '#fff'\n  },\n});","import {DarkTheme, DefaultTheme, NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport * as React from 'react';\nimport {useEffect, useRef, useState} from 'react';\nimport {Alert, AppState, AppStateStatus, BackHandler, ColorSchemeName, StyleSheet} from 'react-native';\nimport {RootStackParamList} from '../types';\nimport Login from \"../screens/Login\";\nimport SignUp from \"../screens/Signup/SignUp\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport ForgotPasswordSuccess from \"../screens/ForgotPasswordSuccess\";\nimport {createDrawerNavigator} from \"@react-navigation/drawer\";\nimport Users from \"../screens/Users\";\nimport CustomSidebarMenu from \"./CustomSidebarMenu\";\nimport Profile from \"../screens/Profile\";\nimport {getItem} from \"../api/asyncStorage\";\nimport Home from \"../screens/ClassroomsList/ClassroomsList\";\nimport {meVar} from \"../api/client\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport Splash from \"../screens/Splash\";\nimport PrivacyPolicy from \"../screens/PrivacyPolicy\";\nimport {useLocal} from \"../hooks/useLocal\";\n\nexport default function Navigation({colorScheme}: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator/>\n    </NavigationContainer>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator<RootStackParamList>();\n\n\nfunction RootNavigator() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [appIsReady, setAppIsReady] = useState(false);\n  const {data: {me}} = useLocal('me');\n\n  useEffect(() => {\n\n    async function prepare() {\n      try {\n        const user = await getItem('user');\n        if (user) {\n          setCurrentUser(user);\n          meVar(user);\n        }\n        await SplashScreen.preventAutoHideAsync();\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n\n    const backAction = () => {\n      Alert.alert('Увага!', 'Ви дійсно хочете вийти з додатку?', [\n        {\n          text: 'Ні',\n          onPress: () => null,\n          style: 'cancel',\n        },\n        { text: 'Так', onPress: () => BackHandler.exitApp() },\n      ]);\n      return true;\n    };\n\n    const backHandler = BackHandler.addEventListener('hardwareBackPress', backAction);\n\n    return () => backHandler.remove();\n  }, []);\n\n  return (\n    me ? <Drawer.Navigator initialRouteName=\"Home\" drawerStyle={styles.drawer} drawerContentOptions={{\n        activeBackgroundColor: '#2b5dff',\n        labelStyle: {\n          fontSize: 20,\n          color: '#fff'\n        },\n      }}\n                           drawerContent={(props: any) => <CustomSidebarMenu {...props}/>}\n      >\n        <Drawer.Screen name=\"Home\"\n                       component={Home}\n                       options={{\n                         title: 'Аудиторії',\n                       }}\n                       initialParams={{id: me.id}}\n        />\n        <Drawer.Screen name=\"Users\" component={Users} options={{\n          title: 'Довідник',\n        }}/>\n        {/*<Drawer.Screen name=\"Schedule\" component={Schedule} options={{*/}\n        {/*  title: 'Розклад'*/}\n        {/*}}/>*/}\n        <Drawer.Screen name=\"Profile\" component={Profile} options={{\n          title: 'Мій профіль'\n        }}/>\n        <Drawer.Screen name=\"PrivacyPolicy\" component={PrivacyPolicy} options={{\n          title: 'Політика конфіденційності'\n        }}/>\n      </Drawer.Navigator>\n      : <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={\"Login\" as any}>\n        <Stack.Screen\n          name={\"Login\" as any}\n          component={appIsReady ? Login : Splash}\n        />\n        <Stack.Screen\n          name={\"SignUp\" as any}\n          component={SignUp}\n        />\n        <Stack.Screen\n          name={\"ForgotPassword\" as any}\n          component={ForgotPassword}\n        />\n        <Stack.Screen\n          name={\"ForgotPasswordSuccess\" as any}\n          component={ForgotPasswordSuccess}\n        />\n      </Stack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawer: {\n    backgroundColor: '#2e287c',\n  }\n});\n","import {StatusBar} from 'expo-status-bar';\nimport React, {useEffect} from 'react';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {ApolloProvider} from \"@apollo/client\";\nimport {client} from \"./api/client\";\nimport {Provider, DefaultTheme} from \"react-native-paper\";\nimport * as Localization from 'expo-localization';\nimport i18n from 'i18n-js';\nimport en from './localization/en.json';\nimport ua from './localization/ua.json';\n\ni18n.locale = Localization.locale;\ni18n.fallbacks = true;\ni18n.translations = {en, ua};\n\nexport default function App() {\n  const colorScheme = useColorScheme();\n\n  const theme = {\n    ...DefaultTheme,\n    roundness: 8,\n    colors: {\n      ...DefaultTheme.colors,\n      primary: '#2b5dff',\n      accent: '#ffc000',\n    },\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <SafeAreaProvider>\n        <Provider theme={theme}>\n          <Navigation colorScheme={colorScheme}/>\n          <StatusBar/>\n        </Provider>\n      </SafeAreaProvider>\n    </ApolloProvider>\n  );\n}\n","var map = {\n\t\"./af\": 272,\n\t\"./af.js\": 272,\n\t\"./ar\": 273,\n\t\"./ar-dz\": 274,\n\t\"./ar-dz.js\": 274,\n\t\"./ar-kw\": 275,\n\t\"./ar-kw.js\": 275,\n\t\"./ar-ly\": 276,\n\t\"./ar-ly.js\": 276,\n\t\"./ar-ma\": 277,\n\t\"./ar-ma.js\": 277,\n\t\"./ar-sa\": 278,\n\t\"./ar-sa.js\": 278,\n\t\"./ar-tn\": 279,\n\t\"./ar-tn.js\": 279,\n\t\"./ar.js\": 273,\n\t\"./az\": 280,\n\t\"./az.js\": 280,\n\t\"./be\": 281,\n\t\"./be.js\": 281,\n\t\"./bg\": 282,\n\t\"./bg.js\": 282,\n\t\"./bm\": 283,\n\t\"./bm.js\": 283,\n\t\"./bn\": 284,\n\t\"./bn-bd\": 285,\n\t\"./bn-bd.js\": 285,\n\t\"./bn.js\": 284,\n\t\"./bo\": 286,\n\t\"./bo.js\": 286,\n\t\"./br\": 287,\n\t\"./br.js\": 287,\n\t\"./bs\": 288,\n\t\"./bs.js\": 288,\n\t\"./ca\": 289,\n\t\"./ca.js\": 289,\n\t\"./cs\": 290,\n\t\"./cs.js\": 290,\n\t\"./cv\": 291,\n\t\"./cv.js\": 291,\n\t\"./cy\": 292,\n\t\"./cy.js\": 292,\n\t\"./da\": 293,\n\t\"./da.js\": 293,\n\t\"./de\": 294,\n\t\"./de-at\": 295,\n\t\"./de-at.js\": 295,\n\t\"./de-ch\": 296,\n\t\"./de-ch.js\": 296,\n\t\"./de.js\": 294,\n\t\"./dv\": 297,\n\t\"./dv.js\": 297,\n\t\"./el\": 298,\n\t\"./el.js\": 298,\n\t\"./en-au\": 299,\n\t\"./en-au.js\": 299,\n\t\"./en-ca\": 300,\n\t\"./en-ca.js\": 300,\n\t\"./en-gb\": 301,\n\t\"./en-gb.js\": 301,\n\t\"./en-ie\": 302,\n\t\"./en-ie.js\": 302,\n\t\"./en-il\": 303,\n\t\"./en-il.js\": 303,\n\t\"./en-in\": 304,\n\t\"./en-in.js\": 304,\n\t\"./en-nz\": 305,\n\t\"./en-nz.js\": 305,\n\t\"./en-sg\": 306,\n\t\"./en-sg.js\": 306,\n\t\"./eo\": 307,\n\t\"./eo.js\": 307,\n\t\"./es\": 308,\n\t\"./es-do\": 309,\n\t\"./es-do.js\": 309,\n\t\"./es-mx\": 310,\n\t\"./es-mx.js\": 310,\n\t\"./es-us\": 311,\n\t\"./es-us.js\": 311,\n\t\"./es.js\": 308,\n\t\"./et\": 312,\n\t\"./et.js\": 312,\n\t\"./eu\": 313,\n\t\"./eu.js\": 313,\n\t\"./fa\": 314,\n\t\"./fa.js\": 314,\n\t\"./fi\": 315,\n\t\"./fi.js\": 315,\n\t\"./fil\": 316,\n\t\"./fil.js\": 316,\n\t\"./fo\": 317,\n\t\"./fo.js\": 317,\n\t\"./fr\": 318,\n\t\"./fr-ca\": 319,\n\t\"./fr-ca.js\": 319,\n\t\"./fr-ch\": 320,\n\t\"./fr-ch.js\": 320,\n\t\"./fr.js\": 318,\n\t\"./fy\": 321,\n\t\"./fy.js\": 321,\n\t\"./ga\": 322,\n\t\"./ga.js\": 322,\n\t\"./gd\": 323,\n\t\"./gd.js\": 323,\n\t\"./gl\": 324,\n\t\"./gl.js\": 324,\n\t\"./gom-deva\": 325,\n\t\"./gom-deva.js\": 325,\n\t\"./gom-latn\": 326,\n\t\"./gom-latn.js\": 326,\n\t\"./gu\": 327,\n\t\"./gu.js\": 327,\n\t\"./he\": 328,\n\t\"./he.js\": 328,\n\t\"./hi\": 329,\n\t\"./hi.js\": 329,\n\t\"./hr\": 330,\n\t\"./hr.js\": 330,\n\t\"./hu\": 331,\n\t\"./hu.js\": 331,\n\t\"./hy-am\": 332,\n\t\"./hy-am.js\": 332,\n\t\"./id\": 333,\n\t\"./id.js\": 333,\n\t\"./is\": 334,\n\t\"./is.js\": 334,\n\t\"./it\": 335,\n\t\"./it-ch\": 336,\n\t\"./it-ch.js\": 336,\n\t\"./it.js\": 335,\n\t\"./ja\": 337,\n\t\"./ja.js\": 337,\n\t\"./jv\": 338,\n\t\"./jv.js\": 338,\n\t\"./ka\": 339,\n\t\"./ka.js\": 339,\n\t\"./kk\": 340,\n\t\"./kk.js\": 340,\n\t\"./km\": 341,\n\t\"./km.js\": 341,\n\t\"./kn\": 342,\n\t\"./kn.js\": 342,\n\t\"./ko\": 343,\n\t\"./ko.js\": 343,\n\t\"./ku\": 344,\n\t\"./ku.js\": 344,\n\t\"./ky\": 345,\n\t\"./ky.js\": 345,\n\t\"./lb\": 346,\n\t\"./lb.js\": 346,\n\t\"./lo\": 347,\n\t\"./lo.js\": 347,\n\t\"./lt\": 348,\n\t\"./lt.js\": 348,\n\t\"./lv\": 349,\n\t\"./lv.js\": 349,\n\t\"./me\": 350,\n\t\"./me.js\": 350,\n\t\"./mi\": 351,\n\t\"./mi.js\": 351,\n\t\"./mk\": 352,\n\t\"./mk.js\": 352,\n\t\"./ml\": 353,\n\t\"./ml.js\": 353,\n\t\"./mn\": 354,\n\t\"./mn.js\": 354,\n\t\"./mr\": 355,\n\t\"./mr.js\": 355,\n\t\"./ms\": 356,\n\t\"./ms-my\": 357,\n\t\"./ms-my.js\": 357,\n\t\"./ms.js\": 356,\n\t\"./mt\": 358,\n\t\"./mt.js\": 358,\n\t\"./my\": 359,\n\t\"./my.js\": 359,\n\t\"./nb\": 360,\n\t\"./nb.js\": 360,\n\t\"./ne\": 361,\n\t\"./ne.js\": 361,\n\t\"./nl\": 362,\n\t\"./nl-be\": 363,\n\t\"./nl-be.js\": 363,\n\t\"./nl.js\": 362,\n\t\"./nn\": 364,\n\t\"./nn.js\": 364,\n\t\"./oc-lnc\": 365,\n\t\"./oc-lnc.js\": 365,\n\t\"./pa-in\": 366,\n\t\"./pa-in.js\": 366,\n\t\"./pl\": 367,\n\t\"./pl.js\": 367,\n\t\"./pt\": 368,\n\t\"./pt-br\": 369,\n\t\"./pt-br.js\": 369,\n\t\"./pt.js\": 368,\n\t\"./ro\": 370,\n\t\"./ro.js\": 370,\n\t\"./ru\": 371,\n\t\"./ru.js\": 371,\n\t\"./sd\": 372,\n\t\"./sd.js\": 372,\n\t\"./se\": 373,\n\t\"./se.js\": 373,\n\t\"./si\": 374,\n\t\"./si.js\": 374,\n\t\"./sk\": 375,\n\t\"./sk.js\": 375,\n\t\"./sl\": 376,\n\t\"./sl.js\": 376,\n\t\"./sq\": 377,\n\t\"./sq.js\": 377,\n\t\"./sr\": 378,\n\t\"./sr-cyrl\": 379,\n\t\"./sr-cyrl.js\": 379,\n\t\"./sr.js\": 378,\n\t\"./ss\": 380,\n\t\"./ss.js\": 380,\n\t\"./sv\": 381,\n\t\"./sv.js\": 381,\n\t\"./sw\": 382,\n\t\"./sw.js\": 382,\n\t\"./ta\": 383,\n\t\"./ta.js\": 383,\n\t\"./te\": 384,\n\t\"./te.js\": 384,\n\t\"./tet\": 385,\n\t\"./tet.js\": 385,\n\t\"./tg\": 386,\n\t\"./tg.js\": 386,\n\t\"./th\": 387,\n\t\"./th.js\": 387,\n\t\"./tk\": 388,\n\t\"./tk.js\": 388,\n\t\"./tl-ph\": 389,\n\t\"./tl-ph.js\": 389,\n\t\"./tlh\": 390,\n\t\"./tlh.js\": 390,\n\t\"./tr\": 391,\n\t\"./tr.js\": 391,\n\t\"./tzl\": 392,\n\t\"./tzl.js\": 392,\n\t\"./tzm\": 393,\n\t\"./tzm-latn\": 394,\n\t\"./tzm-latn.js\": 394,\n\t\"./tzm.js\": 393,\n\t\"./ug-cn\": 395,\n\t\"./ug-cn.js\": 395,\n\t\"./uk\": 396,\n\t\"./uk.js\": 396,\n\t\"./ur\": 397,\n\t\"./ur.js\": 397,\n\t\"./uz\": 398,\n\t\"./uz-latn\": 399,\n\t\"./uz-latn.js\": 399,\n\t\"./uz.js\": 398,\n\t\"./vi\": 400,\n\t\"./vi.js\": 400,\n\t\"./x-pseudo\": 401,\n\t\"./x-pseudo.js\": 401,\n\t\"./yo\": 402,\n\t\"./yo.js\": 402,\n\t\"./zh-cn\": 403,\n\t\"./zh-cn.js\": 403,\n\t\"./zh-hk\": 404,\n\t\"./zh-hk.js\": 404,\n\t\"./zh-mo\": 405,\n\t\"./zh-mo.js\": 405,\n\t\"./zh-tw\": 406,\n\t\"./zh-tw.js\": 406\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 575;","module.exports = __webpack_public_path__ + \"static/media/au_logo.de05cb10.png\";","module.exports = __webpack_public_path__ + \"static/media/key.5df04324.png\";"],"sourceRoot":""}