{"version":3,"sources":["assets/images/bg.jpg","assets/images/GrandPiano.png","assets/images/au_logo_shadow.png","assets/images/Chembalo.png","assets/images/UpRightPiano.png","assets/images/star.png","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","api/operations/mutations/login.ts","components/WaitDialog.tsx","models/models.ts","api/asyncStorage.ts","components/ErrorDialog.tsx","api/client.ts","screens/Login.tsx","api/operations/queries/degrees.ts","hooks/useDegrees.ts","api/operations/queries/departments.ts","hooks/useDepartments.ts","screens/Signup/components/Agreement.tsx","components/CustomPicker/CustomPicker.tsx","components/CustomPicker/CustomPickerField.tsx","api/operations/mutations/signUp.ts","components/InfoDialog.tsx","screens/Signup/SignUp.tsx","screens/ForgotPassword.tsx","screens/ForgotPasswordSuccess.tsx","api/operations/queries/users.ts","hooks/useUsers.ts","helpers/helpers.ts","components/UserInfo.tsx","screens/Users.tsx","navigation/CustomSidebarMenu.tsx","api/operations/queries/schedule.ts","screens/Schedule.tsx","screens/Profile.tsx","screens/Settings.tsx","screens/Signup/SignUpStepTwo.tsx","screens/Signup/Verification.tsx","api/operations/queries/classrooms.ts","hooks/useClassrooms.tsx","components/InstrumentInfo.tsx","components/InstrumentItem.tsx","hooks/useLocal.ts","helpers/queue/addToFilteredList.ts","components/ClassroomCell.tsx","screens/ClassroomsList/InstrumentsList.tsx","screens/ClassroomsList/InstrumentFilters.tsx","screens/ClassroomsList/Filters.tsx","components/ScheduleItem.tsx","api/operations/mutations/addUserToQueue.ts","helpers/queue/getInLine.ts","components/ClassroomInfo.tsx","screens/ClassroomsList/helpers.ts","components/InlineDialog.tsx","api/operations/mutations/removeUserFromQueue.ts","helpers/queue/removeFromLine.ts","components/ConfirmLineOut.tsx","api/operations/queries/me.ts","screens/ClassroomsList/MyClassroomCell.tsx","screens/ClassroomsList/ClassroomsList.tsx","screens/Signup/Frozen.tsx","screens/Loading.tsx","screens/Splash.tsx","navigation/index.tsx","App.tsx","node_modules/moment/locale sync /^/.//.*$","assets/images/au_logo.png","assets/images/specialPiano.png"],"names":["module","exports","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","LOGIN","gql","WaitDialog","visible","message","Portal","Dialog","dismissable","Title","textAlign","Content","Paragraph","ProgressBar","indeterminate","marginTop","ACCESS_RIGHTS","Mode","ErrorCodesUa","ErrorCodes","EmploymentTypes","EmploymentTypesUa","UserTypes","UserTypesUa","UserTypeColors","ActivityTypesColor","ActivityTypes","NotificationsTypes","AccountStatuses","OccupiedState","ClassroomsFilterTypes","QueueState","QueueType","setItem","key","value","a","async","AsyncStorage","JSON","stringify","console","log","getItem","then","result","parse","removeItem","ErrorDialog","hideDialog","onDismiss","marginBottom","Actions","Button","onPress","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","me","read","meVar","accessRights","accessRightsVar","mode","modeVar","minimalClassroomIds","minimalClassroomIdsVar","desirableClassroomIds","desirableClassroomIdsVar","isMinimalSetup","isMinimalSetupVar","makeVar","USER","PRIMARY","Login","route","navigation","useMutation","login","loading","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","modalActivator","setModalActivator","showError","setShowError","errorMessage","setErrorMessage","useEffect","styles","container","ImageBackground","source","require","bg","Image","logo","title","Surface","inputs","TextInput","label","input","onChangeText","e","secureTextEntry","selectionColor","right","Icon","name","prevState","length","variables","data","userErrors","code","user","queue","minimal","filter","type","state","MINIMAL","ACTIVE","desired","DESIRED","INLINE","map","classroom","id","graphQLErrors","button","disabled","navigate","uppercase","labelStyle","footer","StyleSheet","create","flex","alignItems","justifyContent","width","resizeMode","height","fontSize","fontWeight","elevation","borderRadius","paddingLeft","paddingRight","paddingBottom","position","bottom","opacity","GET_DEGREES","useDegrees","updateList","degrees","setDegrees","query","where","fetchPolicy","slice","sort","b","GET_DEPARTMENTS","useDepartments","departments","setDepartments","Agreement","setCheckAgreement","ScrollView","CustomPicker","setSelected","selected","items","searchText","setSearchText","filteredItems","setFilteredItems","filtered","String","toLowerCase","includes","Modal","contentContainerStyle","Searchbar","placeholder","search","clearButtonMode","item","handlePress","borderBottomWidth","borderStyle","borderBottomColor","padding","margin","CustomPickerField","setIsVisited","checkValidation","underlineColor","visiblePicker","setVisiblePicker","showPicker","picker","pickerField","numberOfLines","IconButton","icon","pickerIcon","flexDirection","paddingVertical","top","SIGN_UP","InfoDialog","navigateToLogin","marginRight","currentYear","parseInt","moment","format","startYearsItems","windowHeight","Dimensions","get","SignUp","selectedDepartment","setSelectedDepartment","selectedDegree","setSelectedDegree","selectedStartYear","setSelectedStartYear","setVisible","visibleAgreement","setVisibleAgreement","visibleBackDialog","setVisibleBackDialog","firstName","setFirstName","lastName","setLastName","patronymic","setPatronymic","phoneNumber","setPhoneNumber","passwordConfirm","setPasswordConfirm","checkAgreement","isSignupTouched","setIsSignupTouched","isLastNameValidated","setIsLastNameValidated","isFirstNameValidated","setIsFirstNameValidated","isEmailValidated","setIsEmailValidated","isPhoneValidated","setIsPhoneValidated","isPasswordValidated","setIsPasswordValidated","isPasswordConfirmValidated","setIsPasswordConfirmValidated","isStartYearValidated","setIsStartYearValidated","isDepartmentValidated","setIsDepartmentValidated","isDegreeValidated","setIsDegreeValidated","isStartYearModalVisited","setIsStartYearModalVisited","setIsDepartmentModalVisited","isDegreeModalVisited","setIsDegreeModalVisited","signup","checkLastNameValidation","error","checkFirstNameValidation","checkEmailValidation","test","checkPhoneValidation","checkPasswordValidation","checkPasswordConfirmValidation","checkStartYearValidation","checkDepartmentValidation","checkDegreeValidation","goBack","Error","validator","HelperText","Appbar","BackAction","subtitle","wrapper","scrollView","Banner","actions","infoPanel","onBlur","keyboardType","forceTextInputFocus","agreement","Checkbox","status","uncheckedColor","link","navButtons","department","degree","startYear","alert","signUpButton","left","paddingTop","textDecorationLine","ForgotPassword","ForgotPasswordSuccess","loginButton","GET_USERS","GET_USER_BY_ID","useUsers","users","setUsers","formatMinutesToMM","fullName","withInitials","undefined","charAt","typeStyle","occupied","student","STUDENT","POST_GRADUATE","ISODateString","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","isOccupiedOnSchedule","scheduleUnits","forEach","push","from","split","to","fromHours","fromMinutes","toHours","toMinutes","hours","minutes","seconds","milliseconds","scheduleUnitToDate","some","current","isAfter","isBefore","isTeacherType","TEACHER","CONCERTMASTER","ILLUSTRATOR","UserInfo","userId","hideModal","useQuery","openPhoneNumber","Linking","openURL","containerStyle","ActivityIndicator","animating","occupantName","nameTemp","Divider","divider","phoneRow","extraPhoneNumbers","number","index","borderWidth","borderColor","Users","pages","setPages","currentPage","setCurrentPage","currentUserId","setCurrentUserId","UserElement","DataTable","Row","showModal","Cell","Header","header","alignSelf","list","Pagination","pagination","page","numberOfPages","onPageChange","sideMenuProfileIcon","iconStyle","marginHorizontal","customItem","userData","userName","logout","marginVertical","CustomSidebarMenu","SafeAreaView","size","DrawerContentScrollView","DrawerItemList","GET_SCHEDULE_UNIT","GET_SCHEDULE","windowWidth","Schedule","timeline","date","Date","hour","Action","pointerEvents","schedule","classrooms","lastValue","row","unit","gap","onTouchEnd","activity","INDIVIDUAL_LESSON","marginLeft","borderLeftColor","borderLeftWidth","paddingHorizontal","flexWrap","zIndex","Profile","storageUser","setIsLoading","Settings","SignUpStepTwo","useNavigation","lineHeight","Verification","setStorageUser","update","setUpdate","isLoading","u","GET_CLASSROOMS","useClassrooms","setClassrooms","InstrumentInfo","instrument","instrumentType","intRate","Math","round","rate","Array","fill","toFixed","star","InstrumentItem","expanded","imageSource","useLocal","localVarName","addToFilteredList","classroomId","elementIndex","findIndex","filteredArray","splice","ClassroomsCell","filteredList","special","instruments","occupiedOnSchedule","userFullName","handleTouch","TouchableHighlight","QUEUE_SETUP","underlayColor","onLongPress","cell","free","checkMark","cellHeader","notSpecial","occupationInfo","comment","space","until","InstrumentsList","isGrandPianoOnly","setIsGrandPianoOnly","RadioButton","Group","onValueChange","newValue","handleSelect","InstrumentFilters","setInstruments","count","setCount","visibleList","setVisibleList","showModalList","body","instrumentRow","newArray","removeInstrument","noInstrumentsLabel","newInstrumentRow","countInput","autoCompleteType","replace","newInstrument","buttons","radioItem","checkbox","Filters","apply","setSpecial","withWing","setWithWing","onlyOperaStudio","setOnlyOperaStudio","visibleInstrumentFilters","setVisibleInstrumentFilters","Headline","getEnding","overflow","ScheduleItem","scheduleUnit","isLecture","LECTURE","lecture","individual","ADD_USER_TO_QUEUE","getInLine","minimalClassroomsIds","minimalData","desirableData","mutate","mutation","ClassroomInfo","params","isWing","isOperaStudio","chair","description","floor","classroomName","isAlreadyFilteredClassroom","tags","Chip","selectedColor","tag","scheduleHeader","occupantType","occupiedUntil","getHours","getMinutes","freeText","queueSetupButtons","instrumentTypeOrder","GrandPiano","UpRightPiano","getClassroomsFilteredByInstruments","userInstrumentFilterInput","instrumentsFilterSorted","instA","instB","instrumentsFilter","classroomInstruments","classroomGrandPianoInd","getMinimumSatisfactoryInstrumentIndex","pop","classroomInstrumentInd","minimumRate","bestIndex","i","InlineDialog","queueLength","paragraph","REMOVE_USER_FROM_QUEUE","removeFromLine","equals","ConfirmLineOut","GET_ME","MyClassroomCell","occupiedClassroom","gridDivider","find","Stack","createStackNavigator","Home","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","ClassroomsList","visibleModalInline","setVisibleModalInline","visibleLineOut","setVisibleLineOut","queueSize","freeClassroomsAmount","setFreeClassroomsAmount","inlineTitle","watchQuery","pollInterval","subscribe","next","myClassroom","OCCUPIED","filterAwaitingFreeClassrooms","filterMyPendingClassrooms","PENDING","dispatch","DrawerActions","openDrawer","queueSwitcher","OWNER","grid","isHidden","approve","getOutLine","getOutLineSingle","operaStudioOnly","filteredIds","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Frozen","Loading","Splash","Navigation","colorScheme","NavigationContainer","DarkTheme","DefaultTheme","RootNavigator","Drawer","createDrawerNavigator","accountStatus","setAccountStatus","appIsReady","setAppIsReady","getAccountStatus","studentInfo","employeeInfo","getMe","SplashScreen","warn","drawerStyle","drawer","drawerContentOptions","activeBackgroundColor","drawerContent","UNVERIFIED","FROZEN","ACADEMIC_LEAVE","checkStatus","options","initialParams","App","roundness","colors","primary","accent","Provider","StatusBar","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","Object","resolve"],"mappings":"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","file":"static/js/app.4f60cb6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.b6732535.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GrandPiano.5e053f8a.png\";","module.exports = __webpack_public_path__ + \"static/media/au_logo_shadow.0250c21a.png\";","module.exports = __webpack_public_path__ + \"static/media/Chembalo.5e053f8a.png\";","module.exports = __webpack_public_path__ + \"static/media/UpRightPiano.791ce387.png\";","module.exports = __webpack_public_path__ + \"static/media/star.f99f6a14.png\";","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n    mutation login($input: LoginInput!) {\r\n        login(input: $input) {\r\n            token\r\n            user {\r\n                id\r\n                firstName\r\n                patronymic\r\n                lastName\r\n                type\r\n                phoneNumber\r\n                extraPhoneNumbers\r\n                email\r\n                department {\r\n                  id\r\n                  name  \r\n                }\r\n                occupiedClassroom: classroom {\r\n                  id\r\n                  name\r\n                  occupied {\r\n                    state\r\n                  }\r\n                }\r\n                studentInfo {\r\n                  degree {\r\n                    name\r\n                  }\r\n                  startYear\r\n                  accountStatus\r\n                }\r\n                employeeInfo {\r\n                  employmentType\r\n                  accountStatus\r\n                }\r\n                queue {\r\n                  id\r\n                  classroom {\r\n                    id\r\n                    name\r\n                  }\r\n                  state\r\n                  type\r\n                }\r\n            }\r\n               \r\n            userErrors {\r\n                message\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;","import * as React from 'react';\nimport {Paragraph, Dialog, Portal, ProgressBar} from 'react-native-paper';\n\ninterface PropTypes {\n  message: string;\n  visible: boolean;\n}\n\nexport default function WaitDialog({visible, message}: PropTypes) {\n  return (\n      <Portal>\n        <Dialog visible={visible} dismissable={false}>\n          <Dialog.Title style={{textAlign: 'center'}}>Зачекайте, будь ласка!</Dialog.Title>\n          <Dialog.Content>\n            <Paragraph style={{textAlign: 'center'}}>{message}</Paragraph>\n            <ProgressBar indeterminate style={{marginTop: 16}}/>\n          </Dialog.Content>\n        </Dialog>\n      </Portal>\n  );\n};","export enum ACCESS_RIGHTS {\r\n  USER,\r\n  DISPATCHER,\r\n  ADMIN\r\n}\r\n\r\nexport enum Mode {\r\n  PRIMARY = 'PRIMARY',\r\n  QUEUE_SETUP = 'QUEUE_SETUP',\r\n  INLINE = 'INLINE',\r\n  OWNER = 'OWNER'\r\n}\r\n\r\nexport enum ErrorCodesUa {\r\n  INVALID_PASSWORD = \"Невірний пароль\",\r\n  USER_NOT_FOUND = \"Користувача не знайдено\",\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  INVALID_PASSWORD = \"INVALID_PASSWORD\",\r\n  USER_NOT_FOUND = \"USER_NOT_FOUND\",\r\n}\r\n\r\nexport enum EmploymentTypes {\r\n  FULL_TIME = 'FULL_TIME',\r\n  PART_TIME = 'PART_TIME',\r\n  HOURLY = 'HOURLY',\r\n}\r\n\r\nexport enum EmploymentTypesUa {\r\n  FULL_TIME = 'Штатний співробітник',\r\n  PART_TIME = 'Часткова',\r\n  HOURLY = 'Погодинна',\r\n}\r\n\r\nexport enum UserTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMIN = \"ADMIN\",\r\n  DISPATCHER = \"DISPATCHER\",\r\n  PIANO_TUNER = \"PIANO_TUNER\",\r\n  STAFF = \"STAFF\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum UserTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMIN = \"Адмін\",\r\n  DISPATCHER = \"Диспетчер\",\r\n  PIANO_TUNER = \"Настроювач фортепіано\",\r\n  STAFF = \"Співробітник\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Іллюстратор\",\r\n  OTHER = \"Користувач\",\r\n}\r\n\r\nexport enum UserTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMIN = \"#ffa200\",\r\n  DISPATCHER = \"#ffa200\",\r\n  PIANO_TUNER = \"#ffa200\",\r\n  STAFF = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport enum ActivityTypesColor {\r\n  LECTURE = '#ffa200',\r\n  INDIVIDUAL_LESSON = '#2b5dff'\r\n}\r\n\r\nexport enum ActivityTypes {\r\n  LECTURE = 'LECTURE',\r\n  INDIVIDUAL_LESSON = 'INDIVIDUAL_LESSON'\r\n}\r\n\r\nexport enum NotificationsTypes {\r\n  OK = \"ok\",\r\n  ALERT = \"alert\",\r\n  DEFAULT = \"default\",\r\n}\r\n\r\nexport enum AccountStatuses {\r\n  ACTIVE = 'ACTIVE',\r\n  UNVERIFIED = 'UNVERIFIED',\r\n  ACADEMIC_LEAVE = 'ACADEMIC_LEAVE',\r\n  FROZEN = 'FROZEN'\r\n}\r\n\r\nexport type User = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: Date | null;\r\n  classroom: ClassroomType;\r\n  queue: QueueRecord[];\r\n};\r\n\r\nexport type CurrentUser = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: Date | null;\r\n  occupiedClassroom: ClassroomType;\r\n  queue: QueueRecord[];\r\n}\r\n\r\nexport type StudentInfo = {\r\n  degree: Degree;\r\n  startYear: number;\r\n  accountStatus: AccountStatuses;\r\n};\r\n\r\nexport type EmployeeInfo = {\r\n  employmentType: EmploymentTypes;\r\n  accountStatus: AccountStatuses;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  user: User;\r\n  until: Date;\r\n  state: OccupiedState | null;\r\n};\r\n\r\nexport enum OccupiedState {\r\n  OCCUPIED = 'OCCUPIED',\r\n  PENDING = 'PENDING',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport type Comment = {\r\n  id: number;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  persNumber: number;\r\n  comments: Comment | null;\r\n  classroom: ClassroomType;\r\n};\r\n\r\nexport type DisabledInfo = {\r\n  comment: string;\r\n  until: Date;\r\n};\r\n\r\nexport type ScheduleUnitType = {\r\n  id: number;\r\n  user: User;\r\n  classroom: ClassroomType;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: string;\r\n};\r\n\r\nexport type ClassroomType = {\r\n  id: number;\r\n  name: string;\r\n  chair: Department | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo | null;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnitType>;\r\n  isHidden: boolean;\r\n};\r\n\r\nexport type RegisterUnit = {\r\n  id: number;\r\n  user: User;\r\n  nameTemp: string;\r\n  classroom: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  start: string;\r\n  end: string;\r\n};\r\n\r\nexport type Degree = {\r\n  id: number\r\n  name: string;\r\n  startMonth: number;\r\n  startDay: number;\r\n  durationMonths: number;\r\n};\r\n\r\nexport type Faculty = {\r\n  id: number;\r\n  name: string;\r\n  departments: Department[];\r\n  users: User[];\r\n}\r\n\r\nexport type Department = {\r\n  id: number;\r\n  name: string;\r\n  faculty: Faculty;\r\n  users: User[];\r\n};\r\n\r\nexport type MenuElement = {\r\n  text: string;\r\n  path: string;\r\n  icon: string;\r\n  exact?: boolean;\r\n  rights: string;\r\n};\r\n\r\nexport enum ClassroomsFilterTypes {\r\n  ALL = 'ALL',\r\n  FREE = 'FREE',\r\n  SPECIAL = 'SPECIAL',\r\n  INLINE = 'INLINE'\r\n}\r\n\r\nexport enum QueueState {\r\n  ACTIVE = 'ACTIVE',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum QueueType {\r\n  MINIMAL = 'MINIMAL',\r\n  DESIRED = 'DESIRED'\r\n}\r\n\r\nexport type QueueRecord = {\r\n  id: number;\r\n  user: User;\r\n  date: string;\r\n  classroom: ClassroomType;\r\n  state: QueueState;\r\n  type: QueueType;\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage'\n\n\nexport const setItem = async (key: string, value: any) => {\n  try {\n    await AsyncStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getItem = async (key: string) => {\n  let result;\n  try {\n    await AsyncStorage.getItem(key).then(value => {\n      if (value !== null) {\n        result = JSON.parse(value as string)\n      }\n    });\n    return result;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const removeItem = async (key: string) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (e) {\n    console.log(e);\n  }\n};","import * as React from 'react';\nimport {Dialog, Portal, Button} from 'react-native-paper';\nimport {Text} from 'react-native';\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  message?: string;\n}\n\nexport default function ErrorDialog({visible, hideDialog, message}: PropTypes) {\n  return (\n    <Portal>\n      <Dialog visible={visible} onDismiss={hideDialog}>\n        <Dialog.Title style={{color: '#f91354'}}>Упс!</Dialog.Title>\n        <Dialog.Content>\n          <Text style={{marginBottom: -20}}>{!message ? 'Щось пішло не так' : message}!</Text>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={hideDialog}>Закрити</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};","import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\nimport {ACCESS_RIGHTS, Mode, User} from \"../models/models\";\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'http://54.75.17.229:4000/',\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          me: {\r\n            read() {\r\n              return meVar();\r\n            },\r\n          },\r\n          accessRights: {\r\n            read() {\r\n              return accessRightsVar();\r\n            },\r\n          },\r\n          mode: {\r\n            read() {\r\n              return modeVar();\r\n            },\r\n          },\r\n          minimalClassroomIds: {\r\n            read() {\r\n              return minimalClassroomIdsVar();\r\n            },\r\n          },\r\n          desirableClassroomIds: {\r\n            read() {\r\n              return desirableClassroomIdsVar();\r\n            },\r\n          },\r\n          isMinimalSetup: {\r\n            read() {\r\n              return isMinimalSetupVar();\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n});\r\nexport const meVar = makeVar<User | null>(null);\r\nexport const accessRightsVar = makeVar(ACCESS_RIGHTS.USER);\r\nexport const modeVar = makeVar(Mode.PRIMARY);\r\nexport const minimalClassroomIdsVar = makeVar<number[]>([]);\r\nexport const desirableClassroomIdsVar = makeVar<number[]>([]);\r\nexport const isMinimalSetupVar = makeVar(true);","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport {Image, ImageBackground, StyleSheet} from 'react-native';\nimport {Button, Surface, TextInput} from 'react-native-paper';\nimport {Text, View} from '../components/Themed';\nimport {useMutation} from \"@apollo/client\";\nimport {LOGIN} from \"../api/operations/mutations/login\";\nimport WaitDialog from \"../components/WaitDialog\";\nimport {setItem} from \"../api/asyncStorage\";\nimport ErrorDialog from \"../components/ErrorDialog\";\nimport {ErrorCodes, ErrorCodesUa, Mode, QueueState, QueueType, User} from \"../models/models\";\nimport {desirableClassroomIdsVar, meVar, minimalClassroomIdsVar, modeVar} from \"../api/client\";\n\nexport default function Login({route, navigation}: any) {\n  const [login, {loading}] = useMutation(LOGIN);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [modalActivator, setModalActivator] = useState<boolean | null>(null);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (modalActivator !== null) {\n      setShowError(true);\n    }\n  }, [modalActivator]);\n\n  const hideError = () => {\n    setShowError(false);\n  };\n\n  const handleSubmit = async () => {\n    let result: any;\n    if (email.length && password.length) {\n      try {\n        result = await login({\n          variables: {\n            input: {\n              email: email,\n              password: password\n            }\n          }\n        });\n        if (result?.data.login.userErrors?.length) {\n          setErrorMessage(ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes]);\n          setModalActivator(prevState => !prevState);\n        } else {\n          const user: User = result?.data.login.user;\n          await setItem('user', user);\n          if (user.queue.length) {\n            const minimal = user.queue.filter(({type, state}) => {\n              return type === QueueType.MINIMAL && state === QueueState.ACTIVE;\n            });\n            const desired = user.queue.filter(({type, state}) => {\n              return type === QueueType.DESIRED && state === QueueState.ACTIVE;\n            });\n            modeVar(Mode.INLINE);\n            minimalClassroomIdsVar(minimal.map(({classroom: {id}}) => id));\n            desirableClassroomIdsVar(desired.map(({classroom: {id}}) => id));\n          }\n          meVar(user);\n        }\n      } catch (e) {\n        setErrorMessage(e?.graphQLErrors[0]?.message || JSON.stringify(e));\n        setModalActivator(prevState => !prevState);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={require('../assets/images/bg.jpg')} style={styles.bg}>\n        <Image source={require('./../assets/images/au_logo_shadow.png')} style={styles.logo}/>\n        <Text style={styles.title}>Вхід</Text>\n        <Surface style={styles.inputs}>\n          <TextInput label='Логін'\n                     style={styles.input}\n                     onChangeText={(e) => setEmail(e)}\n          />\n          <TextInput label='Пароль'\n                     style={{...styles.input, marginBottom: 16}}\n                     onChangeText={(e) => setPassword(e)}\n                     secureTextEntry={!showPassword}\n                     selectionColor='#2b5dff'\n                     right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#2b5dff'\n                                            onPress={() => setShowPassword(prevState => !prevState)}\n                     />}\n          />\n\n        <Button onPress={handleSubmit} mode='contained' color='#2b5dff' loading={loading}\n                style={styles.button} disabled={(!email || !password) || loading}>\n          Увійти\n        </Button>\n        <Button onPress={() => navigation.navigate('SignUp')} mode='contained' color='#f91354'\n                style={styles.button}>\n          Реєстрація\n        </Button>\n        </Surface>\n        <Button onPress={() => navigation.navigate('ForgotPassword')} uppercase={false}\n                labelStyle={{color: '#fff'}} style={styles.button}>\n          Відновити пароль\n        </Button>\n        <View style={styles.footer}>\n        <Text style={{color: '#fff'}}>Національна музична академія України ім. П. І. Чайковського</Text>\n        <Text style={{color: '#ffffff77'}}>Розробники: Назаренко Владислав та Іван Пятоволенко</Text>\n        <Text style={{color: '#fff'}}>Auditorium © 2021</Text>\n        </View>\n      </ImageBackground>\n      <WaitDialog message='Відбувається вхід у систему' visible={loading}/>\n      <ErrorDialog visible={showError} hideDialog={hideError} message={errorMessage}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n  },\n  logo: {\n    width: '80%',\n    resizeMode: 'contain',\n    height: 130,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  input: {\n    width: '100%',\n    fontSize: 22,\n    backgroundColor: 'transparent',\n  },\n  inputs: {\n    width: '90%',\n    elevation: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    marginTop: 32,\n  },\n  button: {\n    marginTop: 16,\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n  }, bg: {\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  footer: {\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    position: \"absolute\",\n    bottom: 16,\n    opacity: .5,\n  }\n});\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_DEGREES = gql`\r\n    query getDegrees {\r\n        degrees {\r\n            id\r\n            name\r\n            startMonth\r\n            startDay\r\n            durationMonths\r\n        }\r\n    }\r\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {Degree} from \"../models/models\";\nimport {GET_DEGREES} from \"../api/operations/queries/degrees\";\n\nconst useDegrees = (updateList: boolean = false): Array<Degree> => {\n  const [degrees, setDegrees] = useState<Degree[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_DEGREES, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n      setDegrees(data.data.degrees\n          .slice().sort((a: Degree, b: Degree) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return degrees;\n};\n\nexport default useDegrees;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_DEPARTMENTS = gql`\r\n    query getDepartments($where: DepartmentWhereInput!) {\r\n        departments(where: $where) {\r\n            id\r\n            name\r\n            faculty {\r\n              id\r\n              name\r\n            }\r\n        }\r\n    }\r\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {Department} from \"../models/models\";\nimport {GET_DEPARTMENTS} from \"../api/operations/queries/departments\";\n\nconst useDepartments = (updateList: boolean): Array<Department> => {\n  const [departments, setDepartments] = useState<Department[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_DEPARTMENTS, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n      setDepartments(data.data.departments\n          .slice().sort((a: Department, b: Department) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return departments;\n};\n\nexport default useDepartments;","import React from 'react';\nimport {Button, Dialog, Portal} from \"react-native-paper\";\nimport {ScrollView, Text} from \"react-native\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  setCheckAgreement: (value: boolean) => void;\n}\n\nexport default function Agreement({visible, hideDialog, setCheckAgreement}: PropTypes) {\n  return <Portal>\n    <Dialog visible={visible} onDismiss={hideDialog}>\n      <Dialog.Title>Умови користування</Dialog.Title>\n      <Dialog.Content>\n        <ScrollView style={{height: '80%'}}>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A delectus explicabo odit officia unde? Asperiores\n            consequatur, deleniti, deserunt ducimus eveniet fuga minima minus neque placeat qui quia sed temporibus\n            voluptatem.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid error excepturi id quibusdam quod sed.\n            Aperiam aspernatur doloremque ea enim incidunt, molestiae nam nesciunt non, perferendis perspiciatis\n            possimus\n            quidem, quo!\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis deleniti doloribus earum expedita id illum\n            ipsum modi, natus nesciunt numquam odit officia porro quisquam quod quos tempore totam veniam veritatis.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam atque doloribus eius error est expedita\n            harum id labore libero minus molestiae nisi officiis qui quod, ratione similique sit tempore ullam.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A delectus explicabo odit officia unde? Asperiores\n            consequatur, deleniti, deserunt ducimus eveniet fuga minima minus neque placeat qui quia sed temporibus\n            voluptatem.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid error excepturi id quibusdam quod sed.\n            Aperiam aspernatur doloremque ea enim incidunt, molestiae nam nesciunt non, perferendis perspiciatis\n            possimus\n            quidem, quo!\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis deleniti doloribus earum expedita id illum\n            ipsum modi, natus nesciunt numquam odit officia porro quisquam quod quos tempore totam veniam veritatis.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam atque doloribus eius error est expedita\n            harum id labore libero minus molestiae nisi officiis qui quod, ratione similique sit tempore ullam.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A delectus explicabo odit officia unde? Asperiores\n            consequatur, deleniti, deserunt ducimus eveniet fuga minima minus neque placeat qui quia sed temporibus\n            voluptatem.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid error excepturi id quibusdam quod sed.\n            Aperiam aspernatur doloremque ea enim incidunt, molestiae nam nesciunt non, perferendis perspiciatis\n            possimus\n            quidem, quo!\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis deleniti doloribus earum expedita id illum\n            ipsum modi, natus nesciunt numquam odit officia porro quisquam quod quos tempore totam veniam veritatis.\n          </Text>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam atque doloribus eius error est expedita\n            harum id labore libero minus molestiae nisi officiis qui quod, ratione similique sit tempore ullam.\n          </Text>\n        </ScrollView>\n      </Dialog.Content>\n      <Dialog.Actions style={{height: 20}}>\n        <Button onPress={() => {\n          hideDialog();\n          setCheckAgreement(false);\n        }} style={{height: 20}}>Відхилити</Button>\n        <Button onPress={() => {\n          hideDialog();\n          setCheckAgreement(true);\n        }} style={{height: 20}}>Прийняти</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Portal>\n}","import React, {useEffect, useState} from 'react';\nimport {Modal, Portal, Searchbar} from \"react-native-paper\";\nimport {ScrollView, Text, StyleSheet} from \"react-native\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n  setSelected: (value: any) => void;\n  selected: any;\n  items: any[];\n}\n\nexport default function CustomPicker({visible, hideDialog, setSelected,selected, items}: PropTypes) {\n  const [searchText, setSearchText] = useState('');\n  const [filteredItems, setFilteredItems] = useState<any>([]);\n\n  useEffect(() => {\n    const filtered = items.length && items.filter(({name}) => {\n      if (searchText !== '') return String(name).toLowerCase().includes(searchText.toLowerCase());\n      return true;\n    });\n    setFilteredItems(filtered);\n  }, [items, searchText]);\n\n  const handlePress = (item: any) => {\n    setSelected({name: item.name, id: item.id});\n    hideDialog();\n  };\n\n  return (\n    <Portal>\n      <Modal visible={visible} onDismiss={hideDialog} contentContainerStyle={styles.container}>\n        <Searchbar\n          placeholder=\"Пошук\"\n          onChangeText={text => setSearchText(text)}\n          value={searchText}\n          style={styles.search}\n          clearButtonMode='while-editing'\n        />\n        <ScrollView style={{height: '80%'}}>\n          {filteredItems && [{name: 'Не вибрано', id: -1}, ...filteredItems].map(item => (\n                <Text key={item.id} style={selected.id === item.id ? styles.selected : styles.item}\n                      onPress={() => handlePress(item)}\n                >\n                  {item.name}\n                </Text>\n              )\n            )}\n        </ScrollView>\n      </Modal>\n    </Portal>\n  )\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderBottomColor: '#ccc',\n    padding: 10,\n    color: '#000',\n  },\n  selected: {\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderBottomColor: '#2b5dff',\n    padding: 10,\n    color: '#2b5dff'\n  },\n  container: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8,\n    justifyContent: 'center',\n    height: '60%'\n  },\n  search: {\n    marginBottom: 10\n  }\n});","import React, {useEffect, useState} from 'react';\nimport {Text, StyleSheet} from \"react-native\";\nimport {IconButton} from \"react-native-paper\";\nimport {View} from \"../Themed\";\nimport CustomPicker from \"./CustomPicker\";\n\ntype Item = {\n  name: string;\n  id: number;\n}\n\ninterface PropTypes {\n  selected: Item;\n  setSelected: (value: Item) => void;\n  name: string;\n  items: any[];\n  checkValidation: (value: number) => void;\n  setIsVisited: (value: boolean) => void;\n  underlineColor: string;\n}\n\nexport default function CustomPickerField({\n                                            selected, name, setSelected, items, setIsVisited,\n                                            checkValidation, underlineColor\n                                          }: PropTypes) {\n  const [visiblePicker, setVisiblePicker] = useState(false);\n\n  useEffect(() => {\n    checkValidation(selected.id);\n  }, [selected]);\n\n  const showPicker = () => {\n    setVisiblePicker(true);\n    setIsVisited(true);\n  };\n\n  const hidePicker = () => {\n    checkValidation(selected.id);\n    setVisiblePicker(false);\n  };\n\n  return <View style={styles.picker}>\n    <Text style={{...styles.pickerField, borderBottomColor: underlineColor}} numberOfLines={1}\n          onPress={showPicker}\n    >\n      {selected.id === -1 ? name : selected.name}\n    </Text>\n    <IconButton icon='chevron-down' style={styles.pickerIcon} color='#ccc'\n                onPress={showPicker}\n    />\n    <CustomPicker visible={visiblePicker} hideDialog={hidePicker}\n                  setSelected={setSelected} items={items}\n                  selected={selected}\n    />\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  picker: {\n    flexDirection: 'row',\n    position: 'relative',\n  },\n  pickerField: {\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    paddingVertical: 10,\n    paddingLeft: 22,\n    paddingRight: 42,\n    fontSize: 22,\n    marginTop: 20,\n    color: '#6f6f6f',\n    width: '100%'\n  },\n  pickerIcon: {\n    position: 'absolute',\n    right: 0,\n    top: 20,\n  }\n});","import { gql } from \"@apollo/client\";\r\n\r\nexport const SIGN_UP = gql`\r\n    mutation signup($input: SignupInput!) {\r\n        signup(input: $input) {\r\n            token\r\n            user {\r\n                id\r\n                lastName\r\n            }\r\n            userErrors {\r\n                message\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;","import * as React from 'react';\nimport {Paragraph, Dialog, Portal, Button} from 'react-native-paper';\n\ninterface PropTypes {\n  message: string;\n  visible: boolean;\n  hideDialog: () => void;\n  navigateToLogin: () => void;\n}\n\nexport default function InfoDialog({visible, message, hideDialog, navigateToLogin}: PropTypes) {\n  return (\n      <Portal>\n        <Dialog visible={visible} dismissable={false}>\n          <Dialog.Title style={{textAlign: 'center'}}>Увага</Dialog.Title>\n          <Dialog.Content>\n            <Paragraph style={{textAlign: 'center'}}>{message}</Paragraph>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={hideDialog} mode='contained' color='#f91354'\n                    style={{width: 70, marginRight: 8}}>\n              Ні\n            </Button>\n            <Button onPress={() => {\n              hideDialog();\n              navigateToLogin();\n            }} mode='contained' style={{width: 70}}>\n              Так\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n  );\n};","import * as React from 'react';\nimport {Dimensions, ImageBackground, ScrollView, StyleSheet, Text} from 'react-native';\nimport {View} from '../../components/Themed';\nimport {Appbar, Banner, Button, Checkbox, HelperText, TextInput} from 'react-native-paper';\nimport {useState} from \"react\";\nimport useDegrees from \"../../hooks/useDegrees\";\nimport useDepartments from \"../../hooks/useDepartments\";\nimport Agreement from \"./components/Agreement\";\nimport CustomPickerField from \"../../components/CustomPicker/CustomPickerField\";\nimport moment from \"moment\";\nimport {useMutation} from \"@apollo/client\";\nimport {SIGN_UP} from \"../../api/operations/mutations/signUp\";\nimport InfoDialog from \"../../components/InfoDialog\";\nimport {ErrorCodes, ErrorCodesUa} from \"../../models/models\";\n\nconst currentYear: number = parseInt(moment().format('YYYY'));\n\nconst startYearsItems = [\n  {name: currentYear, id: currentYear},\n  {name: currentYear - 1, id: currentYear - 1},\n  {name: currentYear - 2, id: currentYear - 2},\n  {name: currentYear - 3, id: currentYear - 3},\n];\n\nconst windowHeight = Dimensions.get('window').height;\n\n\nexport default function SignUp({navigation}: any) {\n  const [selectedDepartment, setSelectedDepartment] = useState({name: '', id: -1});\n  const [selectedDegree, setSelectedDegree] = useState({name: '', id: -1});\n  const [selectedStartYear, setSelectedStartYear] = useState({name: '', id: -1});\n  const [visible, setVisible] = useState(true);\n  const [visibleAgreement, setVisibleAgreement] = useState(false);\n  const [visibleBackDialog, setVisibleBackDialog] = useState(false);\n  const backMessage = 'Ви дійсно бажаєте повернутись на сторінку входу?\\n Введені дані будуть стерті.';\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [checkAgreement, setCheckAgreement] = useState(false);\n  const degrees = useDegrees();\n  const departments = useDepartments(true);\n\n  const [isSignupTouched, setIsSignupTouched] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [isLastNameValidated, setIsLastNameValidated] = useState<string | null>(null);\n  const [isFirstNameValidated, setIsFirstNameValidated] = useState<string | null>(null);\n  const [isEmailValidated, setIsEmailValidated] = useState<string | null>(null);\n  const [isPhoneValidated, setIsPhoneValidated] = useState<string | null>(null);\n  const [isPasswordValidated, setIsPasswordValidated] = useState<string | null>(null);\n  const [isPasswordConfirmValidated, setIsPasswordConfirmValidated] = useState<string | null>(null);\n  const [isStartYearValidated, setIsStartYearValidated] = useState<string | null>(null);\n  const [isDepartmentValidated, setIsDepartmentValidated] = useState<string | null>(null);\n  const [isDegreeValidated, setIsDegreeValidated] = useState<string | null>(null);\n\n  const [isStartYearModalVisited, setIsStartYearModalVisited] = useState(false);\n  const [isDepartmentModalVisited, setIsDepartmentModalVisited] = useState(false);\n  const [isDegreeModalVisited, setIsDegreeModalVisited] = useState(false);\n\n  const [signup, {loading, error}] = useMutation(SIGN_UP);\n\n  const checkLastNameValidation = (value: string) => {\n    if (!value) {\n      return setIsLastNameValidated(\"Обов'язкове поле\");\n    }\n    return setIsLastNameValidated(null);\n  };\n\n  const checkFirstNameValidation = (value: string) => {\n    if (!value) {\n      return setIsFirstNameValidated(\"Обов'язкове поле\");\n    }\n    return setIsFirstNameValidated(null);\n  };\n\n  const checkEmailValidation = (value: string) => {\n    const re = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\n    if (!value) {\n      return setIsEmailValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsEmailValidated(\"Невірний формат\");\n    }\n    return setIsEmailValidated(null);\n  };\n\n  const checkPhoneValidation = (value: string) => {\n    const re = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/\n\n    if (!value) {\n      return setIsPhoneValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsPhoneValidated(\"Невірний формат\");\n    }\n    return setIsPhoneValidated(null);\n  };\n\n  const checkPasswordValidation = (value: string) => {\n    const re = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\n    const strongRe = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n    if (!value) {\n      return setIsPasswordValidated(\"Обов'язкове поле\");\n    }\n    if (!re.test(value)) {\n      return setIsPasswordValidated(\"Невірний формат\");\n    }\n    return setIsPasswordValidated(null);\n  };\n\n  const checkPasswordConfirmValidation = (value: string) => {\n    if (!value) {\n      return setIsPasswordConfirmValidated(\"Обов'язкове поле\");\n    }\n    if (password && passwordConfirm && (password !== passwordConfirm)) {\n      return setIsPasswordConfirmValidated('Паролі не співпадають');\n    }\n    return setIsPasswordConfirmValidated(null);\n  };\n\n  const checkStartYearValidation = (value: number) => {\n    if (value === -1 && (isStartYearModalVisited || isSignupTouched)) {\n      return setIsStartYearValidated(\"Рік вступу не вибрано\");\n    }\n    return setIsStartYearValidated(null);\n  };\n\n  const checkDepartmentValidation = (value: number) => {\n    if (value === -1 && (isDegreeModalVisited || isSignupTouched)) {\n      return setIsDepartmentValidated(\"Кафедру не вибрано\");\n    }\n    return setIsDepartmentValidated(null);\n  };\n\n  const checkDegreeValidation = (value: number) => {\n    if (value === -1 && (isDegreeModalVisited || isSignupTouched)) {\n      return setIsDegreeValidated(\"Навчальний ступінь не вибрано\");\n    }\n    return setIsDegreeValidated(null);\n  };\n\n  const handleSubmit = async () => {\n    navigation.navigate('SignUpStepTwo');\n\n    checkLastNameValidation(lastName);\n    checkFirstNameValidation(firstName);\n    checkEmailValidation(email);\n    checkPhoneValidation(phoneNumber);\n    checkPasswordValidation(password);\n    checkPasswordConfirmValidation(passwordConfirm);\n    checkStartYearValidation(selectedStartYear.id);\n    checkDepartmentValidation(selectedDepartment.id);\n    checkDegreeValidation(selectedDegree.id);\n\n    if (!isLastNameValidated && !isFirstNameValidated && !isEmailValidated && !isPasswordValidated\n        && !isPasswordConfirmValidated && !isStartYearValidated && !isDepartmentValidated\n        && !isDegreeValidated) {\n      try {\n        const result = await signup({\n          variables: {\n            input: {\n              lastName: lastName,\n              firstName: firstName,\n              patronymic: patronymic,\n              password: password,\n              email: email,\n              phoneNumber: phoneNumber,\n              department: selectedDepartment.id,\n              degree: selectedDegree.id,\n              startYear: selectedStartYear.id,\n            }\n          }\n        });\n        const hasErrors = result?.data.login.userErrors?.length;\n\n        if (hasErrors) {\n          const errorMessage = ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes];\n\n          alert(errorMessage);\n        } else {\n          navigation.navigate('SignUpStepTwo');\n        }\n      } catch (e) {\n        alert(e)\n      }\n    }\n  }\n\n  const showAgreement = () => setVisibleAgreement(true);\n\n  const hideAgreement = () => setVisibleAgreement(false);\n\n  const showBackDialog = () => setVisibleBackDialog(true);\n\n  const hideBackDialog = () => setVisibleBackDialog(false);\n\n  const navigateToLogin = () => {\n    navigation.goBack();\n  };\n\n  const handleBack = () => {\n    if (lastName || firstName || patronymic || email || phoneNumber || password || passwordConfirm\n        || selectedStartYear.id !== -1 || selectedDepartment.id !== -1 || selectedDegree.id !== -1) {\n      showBackDialog();\n    } else {\n      navigateToLogin();\n    }\n  };\n\n  const Error = ({validator}: any) => (\n    <HelperText type=\"error\" style={{color: '#f91354', height: validator ? 'auto' : 0}}>\n      {validator}\n    </HelperText>\n  );\n\n  return (\n    <ImageBackground source={require('../../assets/images/bg.jpg')}\n                     style={{width: '100%', height: '100%'}}>\n      <View style={styles.container}>\n        <Appbar style={styles.top}>\n          <Appbar.BackAction onPress={handleBack} color='#fff'/>\n          <Appbar.Content title='Реєстрація' subtitle='Крок 1 із 3' color='#fff'/>\n        </Appbar>\n        <View style={styles.wrapper}>\n          <ScrollView style={styles.scrollView}>\n            <Banner\n              icon='alert-circle'\n              visible={visible}\n              actions={[\n                {\n                  label: 'Зрозуміло',\n                  onPress: () => setVisible(false),\n                }\n              ]}\n            >\n              Реєстрація педагогів та співробітників навчального закладу відбувається за допомогою диспетчера.\n            </Banner>\n            <Text style={styles.infoPanel}>\n              Введіть дані, що співпадають з вашим студентським квитком або іншим документом.\n            </Text>\n            <TextInput placeholder=\"Прізвище *\" style={styles.input} value={lastName}\n                       underlineColor={!isLastNameValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setLastName(text);\n                         checkLastNameValidation(text);\n                       }}\n                       onBlur={() => checkLastNameValidation(lastName)}\n            />\n            <Error validator={isLastNameValidated}/>\n            <TextInput placeholder=\"Ім'я *\" style={styles.input} value={firstName}\n                       underlineColor={!isFirstNameValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setFirstName(text);\n                         checkFirstNameValidation(text);\n                       }}\n                       onBlur={() => checkFirstNameValidation(firstName)}\n            />\n            <Error validator={isFirstNameValidated}/>\n            <TextInput placeholder=\"По-батькові\" style={styles.input} value={patronymic}\n                       onChangeText={text => setPatronymic(text)}\n            />\n            <View style={{height: 10}}/>\n            <TextInput placeholder=\"E-mail *\" style={styles.input} value={email}\n                       underlineColor={!isEmailValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setEmail(text);\n                         checkEmailValidation(text);\n                       }}\n                       onBlur={() => checkEmailValidation(email)}\n                       keyboardType='email-address'\n            />\n            <Error validator={isEmailValidated}/>\n            <TextInput placeholder=\"Тел. номер *\" style={styles.input}\n                       underlineColor={!isEmailValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPhoneNumber(text);\n                         checkPhoneValidation(text);\n                       }}\n                       onBlur={() => checkPhoneValidation(phoneNumber)}\n                       keyboardType='phone-pad'\n            />\n            <Error validator={isPhoneValidated}/>\n            <TextInput placeholder=\"Пароль *\" style={styles.input}\n                       underlineColor={!isPasswordValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPassword(text);\n                         checkPasswordValidation(text);\n                       }}\n                       onBlur={() => checkPasswordValidation(password)}\n                       right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#ccc'\n                                              onPress={() => setShowPassword(prevState => !prevState)}\n                                              forceTextInputFocus={false}\n                       />}\n                       secureTextEntry={!showPassword}\n            />\n            <Error validator={isPasswordValidated}/>\n            <TextInput placeholder=\"Повторіть пароль *\" style={styles.input}\n                       underlineColor={!isPasswordConfirmValidated ? '#ccc' : '#f91354'}\n                       onChangeText={text => {\n                         setPasswordConfirm(text);\n                         checkPasswordConfirmValidation(text);\n                       }}\n                       onBlur={() => checkPasswordConfirmValidation(passwordConfirm)}\n                       right={<TextInput.Icon name={showPassword ? 'eye' : 'eye-off'} color='#ccc'\n                                              onPress={() => setShowPassword(prevState => !prevState)}\n                                              forceTextInputFocus={false}\n                       />}\n                       secureTextEntry={!showPassword}\n            />\n            <Error validator={isPasswordConfirmValidated}/>\n            <CustomPickerField selected={selectedStartYear} setSelected={setSelectedStartYear}\n                               name='Рік початку навчання' items={startYearsItems}\n                               checkValidation={checkStartYearValidation}\n                               setIsVisited={setIsStartYearModalVisited}\n                               underlineColor={!isStartYearValidated ? '#ccc' : '#f91354'}\n\n            />\n            <Error validator={isStartYearValidated}/>\n            <CustomPickerField name='Кафедра' selected={selectedDepartment} items={departments}\n                               setSelected={setSelectedDepartment}\n                               checkValidation={checkDepartmentValidation}\n                               setIsVisited={setIsDepartmentModalVisited}\n                               underlineColor={!isDepartmentValidated ? '#ccc' : '#f91354'}\n\n            />\n            <Error validator={isDepartmentValidated}/>\n            <CustomPickerField name='Навчальний ступінь' selected={selectedDegree} items={degrees}\n                               setSelected={setSelectedDegree}\n                               checkValidation={checkDegreeValidation}\n                               setIsVisited={setIsDegreeModalVisited}\n                               underlineColor={!isDegreeValidated ? '#ccc' : '#f91354'}\n\n            />\n            <Error validator={isDegreeValidated}/>\n            <View style={styles.agreement}>\n              <Checkbox status={checkAgreement ? 'checked' : 'unchecked'} color='#2b5dff'\n                        uncheckedColor='#f91354'\n                        onPress={() => {\n                          setIsSignupTouched(true);\n                          setCheckAgreement(prevState => !prevState);\n                        }}/>\n              <Text style={{width: '90%'}}>Я прочитав і погоджуюсь з\n                <Text style={styles.link} onPress={showAgreement}> умовами користування</Text> сервісом *</Text>\n            </View>\n          </ScrollView>\n          <View style={styles.navButtons}>\n            <Button\n              onPress={handleSubmit}\n              mode='contained' color='#f91354'\n              style={styles.signUpButton}\n              disabled={!checkAgreement || loading}\n              loading={loading}\n            >\n              Зареєструватися\n            </Button>\n          </View>\n          <Agreement visible={visibleAgreement} hideDialog={hideAgreement}\n                     setCheckAgreement={setCheckAgreement}\n          />\n          <InfoDialog message={backMessage} visible={visibleBackDialog} hideDialog={hideBackDialog}\n                      navigateToLogin={navigateToLogin}\n          />\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  wrapper: {\n    backgroundColor: '#fff',\n    width: '100%',\n    height: windowHeight-60,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  navButtons: {\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    marginBottom: 16,\n    marginTop: 16,\n  },\n  signUpButton: {\n    height: 50,\n    justifyContent: 'center',\n    width: '90%',\n  },\n  scrollView: {\n    width: '90%',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: 'transparent',\n    fontSize: 22,\n    paddingLeft: 10,\n    margin: 0,\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  link: {\n    color: '#2b5dff',\n    textDecorationLine: 'underline'\n  },\n  agreement: {\n    paddingTop: 20,\n    paddingBottom: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  infoPanel: {\n    borderRadius: 8,\n    backgroundColor: '#b5e3ff',\n    padding: 8,\n    marginTop: 16\n  },\n});","import * as React from 'react';\nimport {View, StyleSheet, Text} from \"react-native\";\nimport {Button, TextInput} from \"react-native-paper\";\n\nexport default function ForgotPassword({navigation}: any) {\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        Введіть Вашу email адресу куди ми відправимо новий пароль.\n      </Text>\n      <TextInput placeholder=\"E-mail\" style={styles.input}/>\n      <Button onPress={()=>navigation.navigate('ForgotPasswordSuccess')} mode='contained' color='#2b5dff'\n        style={styles.button}>\n        Відновити пароль\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 5,\n    width: '90%',\n    marginBottom: 32,\n  },\n  button: {\n    marginTop: 32,\n    height: 50,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '90%',\n    height: 50\n  }\n});\n","import * as React from 'react';\nimport {View, StyleSheet, Text} from \"react-native\";\nimport {Button} from \"react-native-paper\";\n\nexport default function ForgotPasswordSuccess({navigation}: any) {\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        Пароль надіслано, перевірте пошту.\n      </Text>\n      <Button onPress={()=>navigation.navigate('Login')} mode='contained' color='#2b5dff'\n        style={styles.loginButton}>\n        На сторінку входу\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2e287c',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 5,\n    width: '90%',\n    marginBottom: 32,\n  },\n  loginButton: {\n    marginTop: 32,\n    height: 50,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '90%',\n    height: 50\n  }\n});\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        name\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUserById($where: UserWhereUniqueInput!) {\r\n    user(where: $where) {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        name\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType, User} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\n\nconst useUsers = (): Array<User> => {\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_USERS, fetchPolicy: \"cache-first\"}).then((data) => {\n        setUsers(data.data.users.slice().sort((a: User, b: User) => a.id - b.id));\n      });\n  }, []);\n\n  return users;\n};\n\nexport default useUsers;","import {\n  HOUR,\n  MINUTE,\n  TIME_SNIPPETS,\n  WORKING_DAY_END,\n  WORKING_DAY_START,\n} from \"./constants\";\nimport {\n  ACCESS_RIGHTS,\n  OccupiedInfo,\n  ScheduleUnitType,\n  User,\n  UserTypes,\n} from \"../models/models\";\nimport moment from \"moment\";\nimport React, {ReactElement} from \"react\";\nimport {accessRightsVar} from \"../api/client\";\nimport {Image} from \"react-native\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User | undefined, withInitials = false) => {\n  if (user !== undefined) {\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo) => {\n  const student = { backgroundColor: \"#2e287c\", color: \"#fff\" };\n  const employee = { backgroundColor: \"#ffc000\", color: \"#fff\" };\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  if (occupied !== null) {\n    switch (occupied.user.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n  );\n};\n\nexport const scheduleUnitToDate = (item: ScheduleUnitType) => {\n  const from = item.from.split(':');\n  const to = item.to.split(':');\n  const fromHours = +from[0];\n  const fromMinutes = +from[1];\n  const toHours = +to[0];\n  const toMinutes = +to[1];\n  const fromDate = moment({hours: fromHours, minutes: fromMinutes, seconds: 0, milliseconds: 0});\n  const toDate = moment({hours: toHours, minutes: toMinutes, seconds: 0, milliseconds: 0});\n\n  return {\n    from: fromDate,\n    to: toDate\n  };\n};\n\nexport const isOccupiedOnSchedule = (scheduleUnits: ScheduleUnitType[]) => {\n  const result: any = [];\n\n  scheduleUnits.forEach(item => result.push(scheduleUnitToDate(item)));\n\n  return result.some((item: { from: Date, to: Date }) => {\n    const current = moment();\n\n    return current.isAfter(item.from) && current.isBefore(item.to);\n  });\n};\n\nexport const showNotification = (dispatcher: any, data: string[] | HTMLElement[] | ReactElement[]) => {\n  dispatcher({\n    header: data[0],\n    message: data[1],\n    type: data[2],\n  });\n};\n\nexport const setAccessRights = (user: User) => {\n  let accessRights = ACCESS_RIGHTS.USER;\n\n  if (user && user?.type) {\n    switch (user.type) {\n      case UserTypes.ADMIN:\n        accessRights = ACCESS_RIGHTS.ADMIN;\n        break;\n      case UserTypes.DISPATCHER:\n        accessRights = ACCESS_RIGHTS.DISPATCHER;\n        break;\n      default:\n        accessRights = ACCESS_RIGHTS.USER;\n    }\n  }\n\n  accessRightsVar(accessRights);\n};\n\nexport const isTeacherType = (type: UserTypes) => {\n  return type === UserTypes.TEACHER || type === UserTypes.CONCERTMASTER || type === UserTypes.ILLUSTRATOR;\n};","import React from 'react';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {ActivityIndicator, Divider, Modal, Portal, Title} from \"react-native-paper\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport {UserTypes, UserTypesUa} from \"../models/models\";\nimport {Linking} from 'react-native'\n\ninterface PropTypes {\n  userId: number;\n  hideModal: () => void;\n  visible: boolean;\n}\n\nexport default function UserInfo({userId, hideModal, visible}: PropTypes) {\n  const {data, loading, error} = useQuery(GET_USER_BY_ID, {\n    variables: {where: {id: userId}}\n  });\n\n  const openPhoneNumber = (phoneNumber: string) => Linking.openURL(`tel:${phoneNumber}`);\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      {!loading && !error ? <>\n          <Title style={styles.occupantName}>{data.user.nameTemp === null ? fullName(data.user) :\n            data.user.nameTemp}</Title>\n          <Divider style={styles.divider}/>\n          <Text>Статус: {UserTypesUa[data.user.type as UserTypes]}</Text>\n          <Text>Кафедра: {data.user.department?.name}</Text>\n          <Divider style={styles.divider}/>\n        {isTeacherType(data.user.type) && <>\n            <View style={styles.phoneRow}><Text>Тел: </Text>\n                <Text onPress={() => openPhoneNumber(data.user.phoneNumber)} style={styles.phoneNumber}>\n                  {data.user.phoneNumber}\n                </Text>\n            </View>\n          {JSON.parse(data.user.extraPhoneNumbers).map((number: string, index: number) => {\n            return <View key={index} style={styles.phoneRow}>\n              <Text>{`Тел. ${index + 2}: `}</Text>\n              <Text onPress={() => openPhoneNumber(number)} style={styles.phoneNumber}>\n                {number}\n              </Text>\n            </View>\n          })}\n        </>}\n      </> : <ActivityIndicator animating={true} color='#2e287c'/>}\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  occupantName: {},\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  phoneRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  phoneNumber: {\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#eee',\n    padding: 8,\n    fontSize: 16,\n    marginTop: 8,\n    color: '#2b5dff'\n  }\n}));","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, View, ScrollView, Dimensions} from \"react-native\";\nimport useUsers from \"../hooks/useUsers\";\nimport {ActivityIndicator, DataTable, Searchbar} from \"react-native-paper\";\nimport {UserTypes, UserTypesUa} from \"../models/models\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport UserInfo from \"../components/UserInfo\";\n\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function Users() {\n  const users = useUsers();\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visible, setVisible] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const UserElement = ({user}: any) => <DataTable.Row onPress={() => showModal(user.id)}>\n    <DataTable.Cell>{fullName(user)}</DataTable.Cell>\n    <DataTable.Cell>{UserTypesUa[user.type as UserTypes]}</DataTable.Cell>\n  </DataTable.Row>;\n\n  const showModal = (userId: number) => {\n    setVisible(true);\n    setCurrentUserId(userId);\n  };\n\n  const hideModal = () => setVisible(false);\n\n  useEffect(() => {\n    setPages(users.length / 13)\n  }, [users]);\n\n  return <View>\n    <Searchbar\n      placeholder=\"Пошук\"\n      onChangeText={text => {\n        setSearchText(text);\n        setCurrentPage(0);\n      }}\n      value={searchText}\n      style={styles.search}\n    />\n    <DataTable>\n      <DataTable.Header style={styles.header}>\n        <DataTable.Title>П.І.Б.</DataTable.Title>\n        <DataTable.Title style={{alignSelf: 'center'}}>Статус</DataTable.Title>\n      </DataTable.Header>\n      {users.length ? <>\n        <View style={styles.list}>\n          <ScrollView>\n            {users?.filter(user => isTeacherType(user.type as UserTypes))\n              .slice()\n              //@ts-ignore\n              .sort((a , b) => fullName(a).toLowerCase() > fullName(b).toLowerCase())\n              .filter(user => fullName(user).toLowerCase().includes(searchText.toLowerCase()))\n              .slice(currentPage * 13, (currentPage * 13) + 13)\n              .map(user =>\n              <UserElement user={user}/>)}\n          </ScrollView>\n        </View>\n        <DataTable.Pagination\n          style={styles.pagination}\n          page={currentPage}\n          numberOfPages={pages}\n          onPageChange={page => {\n            setCurrentPage(page);\n          }}\n          label={`${currentPage * 13} - ${(currentPage * 13) + 13} з ${users.length}`}\n        />\n      </> : <ActivityIndicator animating={true} color='#2e287c'/>}\n    </DataTable>\n    {currentUserId ? <UserInfo userId={currentUserId} hideModal={hideModal} visible={visible}/> : null}\n  </View>\n}\n\nconst styles = StyleSheet.create(({\n  search: {\n    marginTop: 40,\n    marginBottom: -40\n  },\n  header: {\n    marginTop: 40,\n  },\n  list: {\n    height: windowHeight - 175\n  },\n  pagination: {\n    justifyContent: 'center',\n  }\n}));\n","import React, {useState} from 'react';\nimport {\n  SafeAreaView,\n  View,\n  StyleSheet,\n  Image,\n  Text,\n  Linking,\n} from 'react-native';\n\nimport {\n  DrawerContentScrollView,\n  DrawerItemList,\n} from '@react-navigation/drawer';\nimport {Avatar, Button, Dialog, IconButton, Portal} from \"react-native-paper\";\nimport {removeItem} from \"../api/asyncStorage\";\nimport {meVar} from \"../api/client\";\n\nconst CustomSidebarMenu = (props: any) => {\n  const [visible, setVisible] = useState(false);\n\n  const showDialog = () => setVisible(true);\n\n  const hideDialog = () => setVisible(false);\n\n  const logout = async () => {\n    await removeItem('user');\n    meVar(null);\n    hideDialog();\n  };\n\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <Image\n        source={require('../assets/images/au_logo.png')}\n        style={styles.sideMenuProfileIcon}\n      />\n      <View style={styles.userData}>\n        <Avatar.Icon size={44} icon='account'/>\n        <Text style={styles.userName}>{meVar()?.firstName}, вітаємо!</Text>\n        <IconButton\n          icon=\"logout\"\n          color=\"#f91354\"\n          size={30}\n          onPress={showDialog}\n          style={styles.logout}\n        />\n      </View>\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n      </DrawerContentScrollView>\n      <Text\n        style={{\n          fontSize: 16,\n          textAlign: 'center',\n          color: '#fff',\n          marginBottom: 16\n        }}\n        onPress={() => Linking.openURL('https://knmau.com.ua/')}\n      >\n        НМАУ ім. П.І.Чайковського\n      </Text>\n      <Portal>\n        <Dialog visible={visible} onDismiss={hideDialog}>\n          <Dialog.Title>Ви дійсно бажаєте вийти з аккаунту?</Dialog.Title>\n          <Dialog.Actions>\n            <Button onPress={hideDialog}>Відміна</Button>\n            <Button onPress={logout}>Так</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sideMenuProfileIcon: {\n    resizeMode: 'center',\n    width: 200,\n    height: 70,\n    marginTop: 50,\n    alignSelf: 'center',\n  },\n  iconStyle: {\n    width: 15,\n    height: 15,\n    marginHorizontal: 5,\n  },\n  customItem: {\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  userData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n    marginHorizontal: 10,\n    borderRadius: 8,\n    borderWidth: 1,\n    padding: 12,\n    borderColor: '#ffffff22',\n    flexDirection: 'row'\n  },\n  userName: {\n    color: '#fff',\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  logout: {\n    marginRight: -10,\n    marginVertical: -10\n  }\n});\n\nexport default CustomSidebarMenu;","import {gql} from \"@apollo/client\";\r\n\r\nexport const GET_SCHEDULE_UNIT = gql`\r\n  query getScheduleUnit($classroomName: String!, $date: Date!) {\r\n    schedule(classroomName: $classroomName, date: $date) {\r\n      id\r\n      user {\r\n        id\r\n        lastName\r\n        firstName\r\n        patronymic\r\n      }\r\n      from\r\n      to\r\n      activity\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_SCHEDULE = gql`\r\n  query getClassrooms($date: Date!) {\r\n    classrooms {\r\n      id\r\n      name\r\n      schedule(date: $date) {\r\n        from\r\n        to\r\n        activity\r\n        user {\r\n          id\r\n          lastName\r\n          firstName\r\n          patronymic\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, {useState} from 'react';\nimport {StyleSheet, View, Text, ScrollView, Dimensions} from \"react-native\";\nimport {Appbar, Surface, TextInput} from \"react-native-paper\";\nimport {ActivityTypes, ClassroomType} from \"../models/models\";\nimport {fullName, ISODateString} from \"../helpers/helpers\";\nimport {GET_SCHEDULE} from \"../api/operations/queries/schedule\";\nimport {useQuery} from \"@apollo/client\";\nimport UserInfo from \"../components/UserInfo\";\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function Schedule() {\n  const timeline = ['', 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n  const {data, loading, error} = useQuery(GET_SCHEDULE, {\n    variables: {date: ISODateString(new Date())}\n  });\n  const hour = (windowWidth - 40) / (timeline.length - 1);\n  const [visible, setVisible] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n\n  const showModal = (userId: number) => {\n    setCurrentUserId(userId);\n    setVisible(true);\n  };\n\n  const hideModal = () => setVisible(false);\n\n  return <>\n    <Appbar style={styles.top}>\n      <Appbar.Action icon=\"menu\" onPress={() => {}}/>\n      <Appbar.Content title=\"Розклад\"/>\n      <Appbar.Action icon=\"calendar-range\" onPress={() => {}}/>\n    </Appbar>\n    <View style={styles.timeline} pointerEvents='none'>\n      {timeline.slice(1).map(item => <Text style={{width: hour, ...styles.hour}}>{item}</Text>)}\n    </View>\n    <ScrollView style={styles.schedule}>\n      {!loading && !error && (data.classrooms as ClassroomType[])?.slice().sort((a, b) => {\n        return a.name - b.name\n      }).map(classroom => {\n        let lastValue = timeline[1] as number;\n        return <View style={styles.row}>\n          <Text style={{width: 40, textAlign: 'center'}}>{classroom.name}</Text>\n          {classroom.schedule.slice().sort((a, b) => {\n            return parseInt(a.from) - parseInt(b.from)\n          }).map(unit => {\n            const from = parseInt(unit.from);\n            const to = parseInt(unit.to);\n            const length = (to - from) * hour;\n            const gap = (from - lastValue) * hour;\n            lastValue = to;\n            return <View style={{flexDirection: 'row'}} onTouchEnd={() => showModal(unit.user.id)}>\n              <View style={{...styles.gap, width: gap}}/>\n              <Surface style={{\n                ...styles.item,\n                width: length,\n                backgroundColor: unit.activity === ActivityTypes.INDIVIDUAL_LESSON ? '#2b5dff' : '#ffc000'\n              }}>\n                <Text style={{color: '#fff'}} numberOfLines={1}>\n                  {fullName(unit.user, true)}\n                </Text>\n              </Surface>\n            </View>\n          })}\n        </View>\n      })}\n    </ScrollView>\n    {currentUserId ? <UserInfo userId={currentUserId} hideModal={hideModal} visible={visible}/> : null}\n  </>\n};\n\nconst styles = StyleSheet.create({\n  timeline: {\n    marginTop: 90,\n    height: '100%',\n    marginLeft: 40,\n    flexDirection: 'row',\n    position: 'absolute',\n    elevation: 10,\n  },\n  hour: {\n    borderLeftColor: 'rgba(221 ,221 ,221, .2)',\n    borderLeftWidth: 1\n  },\n  schedule: {\n    marginTop: 120,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomColor: 'rgba(221 ,221 ,221, .5)',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n  },\n  gap: {\n    height: 40,\n  },\n  item: {\n    borderRadius: 4,\n    elevation: 4,\n    margin: 1,\n    height: 40,\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    flexWrap: 'nowrap'\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: '#2e287c',\n    zIndex: 1\n  },\n});","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, View, Text} from \"react-native\";\nimport {client} from \"../api/client\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport {setItem} from \"../api/asyncStorage\";\n\nexport default function Profile() {\n  const [storageUser, setStorageUser] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (storageUser) {\n      setIsLoading(true);\n      client.query({\n        query: GET_USER_BY_ID,\n        variables: {\n          where: {id: storageUser.id}\n        },\n        fetchPolicy: 'network-only',\n      }).then(({data: {user}}) => {\n        setItem('user', user).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  }, []);\n\n  return <View>\n    <Text>Profile</Text>\n  </View>\n}\n\nconst styles = StyleSheet.create({\n\n});","import React from 'react';\nimport {StyleSheet, View, Text} from \"react-native\";\n\nexport default function Settings() {\n  return <View>\n    <Text>Settings</Text>\n  </View>\n}\n\nconst styles = StyleSheet.create({\n\n});","import {useNavigation} from '@react-navigation/native';\nimport React from 'react';\nimport {View, Text, StyleSheet, ImageBackground} from \"react-native\";\nimport {Appbar, Button, Title} from \"react-native-paper\";\n\nexport default function SignUpStepTwo() {\n  const navigation = useNavigation();\n  const message1 = 'Щоб підтвердити вказаний e-mail, перейдіть за посиланням, яке ми' +\n    ' надіслали на Вашу адресу.';\n  const message2 = 'Далі увійдіть до свого аккаунту та пройдіть верифікацію в учбовій частині.';\n\n\n  const navigateToLogin = () => {\n    navigation.navigate('Login');\n  };\n\n  return <ImageBackground source={require('../../assets/images/bg.jpg')}\n                          style={{width: '100%', height: '100%'}}>\n    <View style={styles.container}>\n      <Appbar style={styles.top}>\n        <Appbar.BackAction onPress={navigateToLogin}/>\n        <Appbar.Content title='Реєстрація' subtitle='Крок 2 із 3' color='#fff'/>\n      </Appbar>\n      <View style={styles.wrapper}>\n        <Title style={styles.title}>Вітаємо! Реєстрація успішна!</Title>\n        <Text style={styles.message}>{message1}</Text>\n        <Text style={styles.message}>{message2}</Text>\n        <Button mode='contained' style={styles.button} onPress={navigateToLogin}>На сторінку входу</Button>\n      </View>\n    </View>\n  </ImageBackground>\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  wrapper: {},\n  title: {\n    textAlign: 'center',\n    fontSize: 32,\n    padding: 20,\n    lineHeight: 40,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30\n  },\n  message: {\n    textAlign: 'center',\n    borderRadius: 8,\n    backgroundColor: '#b5e3ff77',\n    padding: 8,\n    marginHorizontal: 20,\n    marginBottom: 10,\n    fontSize: 20,\n  },\n  button: {\n    width: 200,\n    alignSelf: 'center',\n    marginTop: 50,\n    height: 50,\n    justifyContent: 'center'\n  }\n});","import React, {useEffect, useState} from 'react';\nimport {View, Text, StyleSheet, ImageBackground} from \"react-native\";\nimport {Appbar, Button, Title} from \"react-native-paper\";\nimport {client, meVar} from \"../../api/client\";\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\nimport {getItem, removeItem, setItem} from \"../../api/asyncStorage\";\n\nexport default function Verification() {\n  const message1 = 'Для доступу до застосунку підтвердіть свій аккаунт в учбовій частині. \\n' +\n    'Ваш номер користувача:';\n  const message2 = 'Після верифікації оновіть сторінку або поверніться на сторінку входу.';\n  const [storageUser, setStorageUser] = useState<any>(null);\n  const [update, setUpdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getItem('user').then(u => setStorageUser(u));\n  },[]);\n\n  useEffect(() => {\n    if (storageUser) {\n      setIsLoading(true);\n      client.query({\n        query: GET_USER_BY_ID,\n        variables: {\n          where: {id: storageUser.id}\n        },\n        fetchPolicy: 'network-only',\n      }).then(({data: {user}}) => {\n        setItem('user', user).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  }, [update]);\n\n  const navigateToLogin = async () => {\n    await removeItem('user');\n    meVar(null);\n  };\n\n  return <ImageBackground source={require('../../assets/images/bg.jpg')}\n                          style={{width: '100%', height: '100%'}}>\n    <View style={styles.container}>\n      <Appbar style={styles.top}>\n        <Appbar.BackAction onPress={navigateToLogin}/>\n        <Appbar.Content title='Реєстрація' subtitle='Крок 3 із 3' color='#fff'/>\n      </Appbar>\n      <View style={styles.wrapper}>\n        <Title style={styles.title}>Верифікація в учбовій частині</Title>\n        <Text style={styles.message}>{message1}</Text>\n        <Title style={styles.number}>{storageUser ? storageUser.id : ''}</Title>\n        <Text style={styles.message}>{message2}</Text>\n        <Button mode='contained' style={styles.button} loading={isLoading} disabled={isLoading}\n                onPress={() => setUpdate(prevState => !prevState)}\n        >\n          Оновити\n        </Button>\n        <Button mode='contained' style={styles.button} onPress={navigateToLogin}>\n          На сторінку входу\n        </Button>\n      </View>\n    </View>\n  </ImageBackground>\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  wrapper: {},\n  title: {\n    textAlign: 'center',\n    fontSize: 32,\n    padding: 10,\n    lineHeight: 40,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 15\n  },\n  number: {\n    textAlign: 'center',\n    fontSize: 50,\n    padding: 30,\n    lineHeight: 60,\n    marginHorizontal: 20,\n    marginBottom: 12,\n    color: '#fff',\n    borderRadius: 8,\n    borderStyle: \"solid\",\n    borderColor: '#ffffff33',\n    borderWidth: 1,\n  },\n  message: {\n    textAlign: 'center',\n    borderRadius: 8,\n    backgroundColor: '#b5e3ff77',\n    padding: 8,\n    marginHorizontal: 20,\n    marginBottom: 10,\n    fontSize: 20,\n  },\n  button: {\n    width: 200,\n    alignSelf: 'center',\n    marginTop: 10,\n    height: 50,\n    justifyContent: 'center'\n  }\n});","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CLASSROOMS = gql`\r\n  query getClassrooms($date: Date!, $where: ClassroomWhereInput) {\r\n    classrooms(where: $where) {\r\n      id\r\n      description\r\n      name\r\n      floor\r\n      special\r\n      isHidden\r\n      chair {\r\n          name\r\n      }\r\n      isWing\r\n      isOperaStudio\r\n      occupied {\r\n        user {\r\n          id\r\n          firstName\r\n          patronymic\r\n          lastName\r\n          type\r\n          nameTemp\r\n          email\r\n          phoneNumber\r\n        }\r\n        until\r\n        state\r\n      }\r\n      schedule(date: $date) {\r\n        from\r\n        to\r\n        activity\r\n      }\r\n      instruments {\r\n        name\r\n        type\r\n        rate\r\n      }\r\n      disabled {\r\n        comment\r\n        until\r\n      }\r\n    }\r\n  }\r\n`;","import {useEffect, useState} from \"react\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType} from \"../models/models\";\nimport {useQuery} from \"@apollo/client\";\n\nconst useClassrooms = (props?: any): Array<ClassroomType> => {\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const {data, loading, error} = useQuery(GET_CLASSROOMS, {\n    variables: {\n      date: ISODateString(props?.date ? props.date : new Date()),\n    }\n  })\n\n  useEffect(() => {\n    !loading && !error && setClassrooms(\n      data.classrooms\n        .slice()\n        .sort(\n          (a: ClassroomType, b: ClassroomType) =>\n            parseInt(a.name) - parseInt(b.name)\n        )\n    );\n  }, [data, loading, error]);\n\n  return classrooms;\n};\n\nexport default useClassrooms;","import React from 'react';\nimport {View, Text, StyleSheet, Image} from \"react-native\";\nimport {Divider, Modal, Portal, Title} from \"react-native-paper\";\nimport {fullName, isTeacherType} from \"../helpers/helpers\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USER_BY_ID} from \"../api/operations/queries/users\";\nimport {InstrumentType, UserTypes, UserTypesUa} from \"../models/models\";\nimport {Linking} from 'react-native'\n\ninterface PropTypes {\n  instrument: InstrumentType;\n  hideModal: () => void;\n  visible: boolean;\n  imageSource: string;\n}\n\nexport default function InstrumentInfo({instrument, hideModal, visible}: PropTypes) {\n  let instrumentType: any = `./../assets/images/UpRightPiano.png`;\n  // @ts-ignore\n  const intRate = Math.round(instrument.rate);\n  const rate = new Array(10).fill(1);\n\n  switch (instrument.type) {\n    case 'Chembalo':\n      instrumentType = <Image source={require(`./../assets/images/Chembalo.png`)} style={styles.icon}/>;\n      break;\n    case 'GrandPiano':\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n      break;\n    case 'UpRightPiano':\n      instrumentType = <Image source={require(`./../assets/images/UpRightPiano.png`)} style={styles.icon}/>;\n      break;\n    default:\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n  }\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <Title style={{textAlign: 'center'}}>{instrumentType} {instrument.name}</Title>\n      <Divider style={styles.divider}/>\n      <Text style={{textAlign: 'center'}}>Тип: {instrument.type}</Text>\n      <Divider style={styles.divider}/>\n      <Text style={{textAlign: 'center'}}>Рейтинг: {instrument.rate.toFixed(1)}</Text>\n      <View style={styles.rate}>\n        {rate.map((item, index) => <Image\n          style={{...styles.star, opacity: index < intRate ? 1 : .3}}\n          source={require('../assets/images/star.png')}\n        />)}\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 8\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  phoneRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  phoneNumber: {\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#eee',\n    padding: 8,\n    fontSize: 16,\n    marginTop: 8,\n    color: '#2b5dff'\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    marginLeft: 4,\n    opacity: .6\n  },\n  star: {\n    width: 20,\n    height: 20\n  },\n  rate: {\n    marginTop: 8,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n}));","import React, {useState} from 'react';\nimport {View, StyleSheet, Text, Dimensions, Image} from \"react-native\";\nimport {ClassroomType, InstrumentType} from \"../models/models\";\nimport InstrumentInfo from \"./InstrumentInfo\";\n\ninterface PropTypes {\n  instrument: InstrumentType;\n  expanded?: boolean;\n}\n\nexport default function InstrumentItem({instrument, expanded = false}: PropTypes) {\n  const {type, rate, name} = instrument;\n  let instrumentType: any = `./../assets/images/UpRightPiano.png`;\n  const [visible, setVisible] = useState(false);\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  switch (type) {\n    case 'Chembalo':\n      instrumentType = <Image source={require(`./../assets/images/Chembalo.png`)} style={styles.icon}/>;\n      break;\n    case 'GrandPiano':\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n      break;\n    case 'UpRightPiano':\n      instrumentType = <Image source={require(`./../assets/images/UpRightPiano.png`)} style={styles.icon}/>;\n      break;\n    default:\n      instrumentType = <Image source={require(`./../assets/images/GrandPiano.png`)} style={styles.icon}/>;\n  }\n\n  return <View style={styles.wrapper} onTouchEnd={expanded ? showModal : () => {}}>\n    {instrumentType}\n    {expanded && <>\n        <Text style={styles.name}>{name}</Text>\n        <Image style={styles.star} source={require('../assets/images/star.png')}/>\n    </>}\n    <Text>{rate.toFixed(1)}</Text>\n    <InstrumentInfo instrument={instrument} hideModal={hideModal} visible={visible}\n                    imageSource={instrumentType}/>\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    marginTop: 4,\n    marginBottom: 4,\n    marginRight: 2,\n    backgroundColor: 'rgba(0, 0, 0, .05)',\n    paddingTop: 4,\n    paddingBottom: 4,\n    paddingLeft: 4,\n    paddingRight: 8,\n    borderRadius: 4,\n    alignItems: 'center'\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    marginLeft: 4,\n    opacity: .6\n  },\n  name: {\n    marginLeft: 4,\n    marginRight: 4\n  },\n  star: {\n    width: 20,\n    height: 20\n  }\n});","import {gql, useQuery} from \"@apollo/client\";\n\nexport const useLocal = (localVarName: string) => {\n  return useQuery(gql`\n      query ${localVarName} {\n        ${localVarName} @client\n      }\n  `);\n};","import {minimalClassroomIdsVar} from \"../../api/client\";\n\nconst addToFilteredList = (classroomId: number, isMinimalSetup: boolean,\n                           minimalClassroomIds: any, desirableClassroomIds: any) => {\n\n  if (isMinimalSetup) {\n    const elementIndex = minimalClassroomIds.findIndex((id: number) => id === classroomId);\n\n    if (elementIndex === -1) {\n      minimalClassroomIdsVar([...minimalClassroomIds, classroomId]);\n    } else {\n      const filteredArray = minimalClassroomIds.slice();\n\n      filteredArray.splice(elementIndex, 1);\n      minimalClassroomIdsVar(filteredArray);\n    }\n  } else {\n    const elementIndex = desirableClassroomIds.findIndex((id: number) => id === classroomId);\n\n    if (elementIndex === -1) {\n      desirableClassroomIds([...desirableClassroomIds, classroomId]);\n    } else {\n      const filteredArray = desirableClassroomIds.slice();\n\n      filteredArray.splice(elementIndex, 1);\n      desirableClassroomIds(filteredArray);\n    }\n  }\n};\n\nexport default addToFilteredList;\n\n","import React, {useState} from 'react';\nimport {View, StyleSheet, Text, Dimensions, Image, TouchableHighlight} from \"react-native\";\nimport {ClassroomType, DisabledInfo, Mode, OccupiedInfo} from \"../models/models\";\nimport {fullName, isOccupiedOnSchedule, typeStyle} from \"../helpers/helpers\";\nimport {IconButton, Surface} from \"react-native-paper\";\nimport InstrumentItem from \"./InstrumentItem\";\nimport {useNavigation} from '@react-navigation/native';\nimport ErrorDialog from \"./ErrorDialog\";\nimport moment from \"moment\";\nimport {useLocal} from \"../hooks/useLocal\";\nimport addToFilteredList from \"../helpers/queue/addToFilteredList\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  filteredList: number[];\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ClassroomsCell({\n                                         classroom, filteredList\n                                       }: PropTypes) {\n  const {name, occupied, schedule, special, instruments, disabled, id} = classroom;\n  const navigation = useNavigation();\n  const occupiedOnSchedule = isOccupiedOnSchedule(schedule);\n  const userFullName = occupied?.user.nameTemp === null ? fullName(occupied?.user, true) :\n    occupied?.user.nameTemp;\n  const [visible, setVisible] = useState(false);\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n\n\n  const handleTouch = (disabled: DisabledInfo | null) => {\n    !disabled && navigation.navigate('ClassroomInfo', {classroom});\n    disabled && setVisible(true);\n  }\n\n  return <TouchableHighlight\n    onPress={ mode === Mode.QUEUE_SETUP\n      ? () => addToFilteredList(id, isMinimalSetup, minimalClassroomIds, desirableClassroomIds)\n      : () => handleTouch(disabled)\n    }\n    underlayColor={disabled ? '#f91354' : '#2b5dff'}\n    style={{borderRadius: 4}}\n    onLongPress={mode === Mode.QUEUE_SETUP ? () => handleTouch(disabled) : null}\n  >\n    <Surface style={[styles.cell,\n      disabled ? styles.disabled : occupied ? styles.occupied : styles.free]}\n    >\n      {filteredList.includes(id) && mode === Mode.QUEUE_SETUP ?\n        <IconButton icon='check-bold' style={styles.checkMark} color='#0f0'/>\n        : null\n      }\n      <View style={styles.cellHeader}>\n        <Text style={styles.name}>{name}</Text>\n        <Image source={require('./../assets/images/specialPiano.png')}\n               style={[special ? styles.special : styles.notSpecial]}/>\n      </View>\n      <Text style={[styles.occupationInfo, typeStyle(occupied as OccupiedInfo)]} numberOfLines={1}>\n        {disabled ? disabled.comment : occupied\n          ? userFullName\n          : occupiedOnSchedule ? 'Зайнято за розкладом' : 'Вільно'}</Text>\n      <View style={styles.instruments}>\n        {instruments?.length\n          ? instruments\n            .slice()\n            .sort((a, b) => b.rate - a.rate).slice(0, 2)\n            .map(instrument => <InstrumentItem instrument={instrument} key={instrument.id}/>)\n          : <View style={styles.space}/>}\n      </View>\n      <ErrorDialog message={'Аудиторія відключена до ' + moment(disabled?.until)\n        .format('DD.MM.YYYY HH:MM') +\n      '\\n' + disabled?.comment} visible={visible}\n                   hideDialog={() => setVisible(false)}\n      />\n    </Surface>\n  </TouchableHighlight>\n};\n\nconst styles = StyleSheet.create({\n  cell: {\n    width: (windowWidth - 10) / 3,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    margin: 1,\n    elevation: 2,\n    borderRadius: 4,\n    position: 'relative'\n  },\n  cellHeader: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: (windowWidth - 10) / 3,\n    paddingLeft: 16,\n    paddingRight: 16,\n    flexDirection: 'row',\n  },\n  name: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  special: {\n    width: 20,\n    height: 20,\n    opacity: 1\n  },\n  notSpecial: {\n    width: 20,\n    height: 20,\n    opacity: 0\n  },\n  occupied: {},\n  free: {\n    backgroundColor: '#4bfd63'\n  },\n  disabled: {\n    backgroundColor: '#ccc',\n  },\n  occupationInfo: {\n    width: (windowWidth - 10) / 3,\n    margin: 2,\n    paddingHorizontal: 4,\n    paddingBottom: 2,\n    textAlign: 'center'\n  },\n  instruments: {\n    flexDirection: 'row'\n  },\n  space: {\n    height: 20,\n    margin: 8,\n  },\n  checkMark: {\n    position: 'absolute',\n    zIndex: 2,\n    backgroundColor: '#00000088'\n  }\n});","import React from 'react';\nimport {StyleSheet, Text, View} from \"react-native\";\nimport {\n  Modal,\n  Portal,\n  RadioButton,\n} from \"react-native-paper\";\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  isGrandPianoOnly: boolean;\n  setIsGrandPianoOnly: (value: boolean) => void;\n}\n\nexport default function InstrumentsList({hideModal, visible, isGrandPianoOnly,\n                                          setIsGrandPianoOnly}: PropTypes) {\n\n  const handleSelect = (newValue: string) => {\n    setIsGrandPianoOnly(newValue === '0')\n    hideModal();\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View>\n        <RadioButton.Group onValueChange={newValue => handleSelect(newValue)}\n                           value={isGrandPianoOnly ? '0' : '1'}>\n          <View style={styles.item}>\n            <RadioButton value=\"0\" />\n            <Text>Рояль</Text>\n          </View>\n          <View style={styles.item}>\n            <RadioButton value=\"1\" />\n            <Text>Піаніно або рояль</Text>\n          </View>\n        </RadioButton.Group>\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    position: 'absolute',\n    width: '90%',\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n}));","import React, {useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions, ScrollView} from \"react-native\";\nimport {\n  Button,\n  IconButton,\n  Modal,\n  Portal,\n  TextInput\n} from \"react-native-paper\";\nimport {InstrumentType} from \"../../models/models\";\nimport InstrumentsList from \"./InstrumentsList\";\n\nexport type SpecialT = 'with' | 'only' | 'without';\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  instruments: InstrumentType[];\n  setInstruments: any;\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function InstrumentFilters({hideModal, visible, instruments, setInstruments}: PropTypes) {\n  const [isGrandPianoOnly, setIsGrandPianoOnly] = useState(false);\n  const [count, setCount] = useState(0);\n  const [visibleList, setVisibleList] = useState(false);\n\n\n  const showModalList = () => setVisibleList(true);\n\n  const hideModalList = () => setVisibleList(false);\n\n  const addInstrument = () => {\n    const newInstrument = {type: isGrandPianoOnly ? 'GrandPiano' : 'UpRightPiano', rate: count};\n\n    setInstruments((prevState: InstrumentType[]) => [...prevState, newInstrument]);\n    setCount(0);\n    setIsGrandPianoOnly(false);\n  };\n\n  const removeInstrument = (index: number) => {\n    const newArray = instruments.slice();\n    newArray.splice(index, 1);\n\n    setInstruments(newArray);\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View style={styles.body}>\n        <ScrollView>\n          {instruments.length ? instruments.map((instrument, index) => (\n            <View key={index} style={styles.instrumentRow}>\n              <Text style={{width: '40%'}}>\n                {instrument.type === 'UpRightPiano' ? 'Рояль або піаніно' : 'Рояль'}\n              </Text>\n              <View style={{flexDirection: 'row', alignItems: 'center', width: '20%'}}>\n                <IconButton icon='star' color='orange'/>\n                <Text style={{paddingLeft: 6}}>{instrument.rate}+</Text>\n              </View>\n              <IconButton icon='trash-can-outline' onPress={() => removeInstrument(index)}/>\n            </View>\n          )) : <Text style={styles.noInstrumentsLabel}>Інструменти не вибрані</Text>}\n          <View style={styles.newInstrumentRow}>\n            <View style={{width: '40%', flexDirection: 'row', alignItems: 'center'}}>\n              <Text onPress={showModalList}>\n                {!isGrandPianoOnly ? 'Рояль або піаніно' : 'Рояль'}\n              </Text>\n              <IconButton icon='menu-down' onPress={showModalList}/>\n            </View>\n            <View style={{flexDirection: 'row', alignItems: 'center', width: '20%'}}>\n              <IconButton icon='star' color='orange' style={{marginRight: -5}}/>\n              <TextInput placeholder='0' style={styles.countInput} autoCompleteType='cc-number'\n                         value={count as unknown as string}\n                         onChangeText={(text) => setCount(text.replace(/[^0-9]/g, '') as unknown as number)}\n                         mode='outlined'\n              />\n            </View>\n            <IconButton icon='plus' onPress={addInstrument}/>\n          </View>\n        </ScrollView>\n        <View style={styles.buttons}>\n          <Button mode='contained' onPress={hideModal}>Закрити</Button>\n        </View>\n      </View>\n      <InstrumentsList hideModal={hideModalList} visible={visibleList}\n                       isGrandPianoOnly={isGrandPianoOnly} setIsGrandPianoOnly={setIsGrandPianoOnly} />\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    position: 'absolute',\n    height: 300,\n    width: '90%',\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#dddddd',\n    width: '100%',\n    backgroundColor: '#f1f1f1'\n  },\n  body: {\n    padding: 20,\n  },\n  radioItem: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  divider: {\n    borderBottomColor: '#eee',\n    alignSelf: 'center',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    width: windowWidth - 80,\n    height: 1,\n    marginVertical: 16\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttons: {\n    paddingTop: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  instrumentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    padding: 10,\n  },\n  newInstrumentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    padding: 10,\n  },\n  countInput: {\n    height: 40,\n    width: 40,\n    backgroundColor: 'transparent',\n    paddingLeft: 5\n  },\n  noInstrumentsLabel: {\n    textAlign: 'center',\n    paddingBottom: 15,\n    color: '#ccc',\n    fontSize: 18,\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1,\n  }\n}));","import React, {useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions} from \"react-native\";\nimport {Button, Checkbox, Divider, Headline, Modal, Portal, RadioButton} from \"react-native-paper\";\nimport InstrumentFilters from \"./InstrumentFilters\";\nimport {InstrumentType} from \"../../models/models\";\n\nexport type SpecialT = 'with' | 'only' | 'without';\n\ninterface PropTypes {\n  hideModal: () => void;\n  visible: boolean;\n  apply: (instruments: InstrumentType[], withWing: boolean, operaStudioOnly: boolean, special: SpecialT) => void;\n}\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function Filters({hideModal, visible, apply}: PropTypes) {\n  const [instruments, setInstruments] = useState<InstrumentType[]>([]);\n  const [special, setSpecial] = useState<SpecialT>('with');\n  const [withWing, setWithWing] = useState(true);\n  const [onlyOperaStudio, setOnlyOperaStudio] = useState(false);\n  const [visibleInstrumentFilters, setVisibleInstrumentFilters] = useState(false);\n\n\n  const showModalInstrumentFilters = () => setVisibleInstrumentFilters(true);\n\n  const hideModalInstrumentFilters= () => setVisibleInstrumentFilters(false);\n\n  const handleApply = () => {\n    apply(instruments, withWing, onlyOperaStudio, special);\n    hideModal();\n  };\n\n  const getEnding = () => {\n    switch (instruments.length) {\n      case 1: return '';\n      case 2: return 'а';\n      case 3: return 'и';\n      case 4: return 'и';\n      case 5: return 'ів';\n      default: return '...';\n    }\n  };\n\n  return <Portal>\n    <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={styles.containerStyle}>\n      <View style={styles.header}>\n        <Headline>Фільтри аудиторій для черги</Headline>\n      </View>\n      <View style={styles.body}>\n        <Button icon='pencil' onPress={showModalInstrumentFilters}>\n          <Text>\n            { !instruments.length\n              ? 'Будь-які або без інструментів'\n              : `${instruments.length} інструмент${getEnding()}` }\n          </Text>\n        </Button>\n        <Divider style={styles.divider}/>\n        <View style={styles.checkbox}>\n          <Checkbox status={!withWing ? 'checked' : 'unchecked'}\n                    onPress={() => setWithWing(prevState => !prevState)}/>\n          <Text>Без флігеля</Text>\n        </View>\n        <View style={styles.checkbox}>\n          <Checkbox status={onlyOperaStudio ? 'checked' : 'unchecked'}\n                    onPress={() => setOnlyOperaStudio(prevState => !prevState)}/>\n          <Text>Тільки оперна студія</Text>\n        </View>\n        <Divider style={styles.divider}/>\n        <RadioButton.Group onValueChange={newValue => setSpecial(newValue as SpecialT)} value={special}>\n          <View style={styles.radioItem}>\n            <RadioButton value='with' />\n            <Text>Зі спеціалізованими (ф-но)</Text>\n          </View>\n          <View style={styles.radioItem}>\n            <RadioButton value='only' />\n            <Text>Тільки спеціалізовані (ф-но)</Text>\n          </View>\n          <View style={styles.radioItem}>\n            <RadioButton value='without' />\n            <Text>Без спеціалізованих (ф-но)</Text>\n          </View>\n        </RadioButton.Group>\n        <Divider style={styles.divider}/>\n        <View style={styles.buttons}>\n          <Button mode='contained'>Збережені фільтри</Button>\n          <Button mode='contained' onPress={handleApply}>Застосувати</Button>\n        </View>\n        <InstrumentFilters hideModal={hideModalInstrumentFilters} visible={visibleInstrumentFilters}\n                           instruments={instruments} setInstruments={setInstruments} />\n      </View>\n    </Modal>\n  </Portal>\n};\n\nconst styles = StyleSheet.create(({\n  containerStyle: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    overflow: 'hidden'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#dddddd',\n    width: '100%',\n    backgroundColor: '#f1f1f1'\n  },\n  body: {\n    padding: 20,\n  },\n  radioItem: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  divider: {\n    borderBottomColor: '#eee',\n    alignSelf: 'center',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    width: windowWidth - 80,\n    height: 1,\n    marginVertical: 16\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n}));","import React, {useState} from \"react\";\nimport {View, StyleSheet, Text} from \"react-native\";\nimport {ActivityTypes, ScheduleUnitType} from \"../models/models\";\nimport {fullName} from \"../helpers/helpers\";\nimport UserInfo from \"./UserInfo\";\n\ninterface PropTypes {\n  scheduleUnit: ScheduleUnitType;\n}\n\nexport default function ScheduleItem({scheduleUnit}: PropTypes) {\n  const {user, activity, from, to} = scheduleUnit;\n  const isLecture = activity === ActivityTypes.LECTURE;\n  const [visible, setVisible] = useState(false);\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n    return <>\n      <Text style={[styles.item, isLecture ? styles.lecture : styles.individual]} onPress={showModal}>\n         {from + ' - ' + to + ' ' + fullName(user, true)}\n      </Text>\n      <UserInfo userId={user.id} hideModal={hideModal} visible={visible}/>\n    </>;\n}\n\nconst styles = StyleSheet.create(({\n  item: {\n    marginTop: 4,\n    marginBottom: 4,\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 4\n  },\n  individual: {\n    backgroundColor: '#2b5dff',\n    color: '#fff'\n  },\n  lecture: {\n    backgroundColor: '#ffc000',\n    color: '#000'\n  }\n}));","import {gql} from \"@apollo/client\";\n\nexport const ADD_USER_TO_QUEUE = gql`\n    mutation addUserToQueue($input: [AddUserToQueueInputType!]!) {\n        addUserToQueue(input: $input) {\n          count\n        }\n    }\n`;","import {client, meVar, modeVar} from \"../../api/client\";\nimport {Mode, QueueState, QueueType, User} from \"../../models/models\";\nimport {ADD_USER_TO_QUEUE} from \"../../api/operations/mutations/addUserToQueue\";\n\nconst getInLine = async (minimalClassroomsIds: number[], desirableClassroomIds: number[]) => {\n  const user: User | null = meVar();\n\n  const minimalData = minimalClassroomsIds.map(id => ({\n    userId: (user as unknown as User).id,\n    classroomId: id,\n    state: QueueState.ACTIVE,\n    type: QueueType.MINIMAL\n  }));\n\n  const desirableData = desirableClassroomIds.map(id => ({\n    userId: (user as unknown as User).id,\n    classroomId: id,\n    state: QueueState.ACTIVE,\n    type: QueueType.DESIRED\n  }));\n\n  await client.mutate({mutation: ADD_USER_TO_QUEUE, variables: {\n      input: [...minimalData, ...desirableData]\n    }})\n  modeVar(Mode.INLINE);\n};\n\nexport  default getInLine;","import React, {useState} from 'react';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {\n  InstrumentType, Mode,\n  ScheduleUnitType,\n  UserTypeColors,\n  UserTypes,\n  UserTypesUa\n} from \"../models/models\";\nimport {ActivityIndicator, Appbar, Button, Chip, Divider, Headline, Surface} from \"react-native-paper\";\nimport InstrumentItem from \"./InstrumentItem\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport ScheduleItem from \"./ScheduleItem\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_SCHEDULE_UNIT} from \"../api/operations/queries/schedule\";\nimport {fullName, getTimeHHMM, isOccupiedOnSchedule, ISODateString} from \"../helpers/helpers\";\nimport UserInfo from \"./UserInfo\";\nimport {useLocal} from \"../hooks/useLocal\";\nimport getInLine from \"../helpers/queue/getInLine\";\nimport addToFilteredList from \"../helpers/queue/addToFilteredList\";\n\ninterface PropTypes {\n  route: any;\n}\n\nexport default function ClassroomInfo({route: {params: {classroom}}}: PropTypes) {\n  const {\n    name, id, isWing, isOperaStudio, chair, description, special, floor, instruments,\n    schedule, occupied\n  } = classroom;\n  const navigation = useNavigation();\n  const {data, loading, error} = useQuery(GET_SCHEDULE_UNIT, {\n    variables: {\n      classroomName: name,\n      date: ISODateString(new Date()),\n    },\n  });\n  const userFullName = occupied?.user.nameTemp === null ? fullName(occupied?.user) :\n    occupied?.user.nameTemp;\n  const occupiedOnSchedule = isOccupiedOnSchedule(schedule);\n  const [visible, setVisible] = useState(false);\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  const goBack = () => navigation.goBack();\n\n  const isAlreadyFilteredClassroom = (classroomId: number) => {\n    if (isMinimalSetup) {\n      return minimalClassroomIds.includes(classroomId);\n    } else {\n      return desirableClassroomIds.includes(classroomId);\n    }\n  };\n\n  const handleAddToLine = () => {\n    addToFilteredList(id, isMinimalSetup, minimalClassroomIds, desirableClassroomIds);\n    isAlreadyFilteredClassroom(id);\n    goBack();\n  };\n\n  return <View>\n      <Appbar style={styles.top}>\n        <Appbar.BackAction onPress={goBack}/>\n        <Appbar.Content title={`Аудиторія ${name}`} subtitle={chair ? chair.name : ''}/>\n      </Appbar>\n      <View style={styles.wrapper}>\n        {(isWing || isOperaStudio || special) && <>\n            <View style={styles.tags}>\n              {isWing && <Chip selected selectedColor='#00f' mode='outlined'\n                               style={styles.tag}>Флігель</Chip>}\n              {isOperaStudio && <Chip selected selectedColor='#00f' mode='outlined'\n                                      style={styles.tag}>Оперна студія</Chip>}\n              {special && <Chip selected selectedColor='#00f' mode='outlined'\n                                style={styles.tag}>Спеціалізована</Chip>}\n            </View>\n            <Divider style={styles.divider}/>\n        </>}\n        <Text style={styles.description}>\n          {description}\n        </Text>\n        <Divider style={styles.divider}/>\n        <Text style={styles.description}>\n          Поверх: {floor}\n        </Text>\n        <Divider style={styles.divider}/>\n        <View>\n          {!!instruments.length && <>\n            {instruments?.map((instrument: InstrumentType) => <InstrumentItem\n              key={instrument.id} instrument={instrument} expanded/>)}\n            <Divider style={styles.divider}/>\n          </>}\n        </View>\n        <Text style={styles.scheduleHeader}>Розклад на сьогодні</Text>\n        {!loading && !error ? data.schedule\n          ?.map((scheduleUnit: ScheduleUnitType) => <ScheduleItem scheduleUnit={scheduleUnit}/>) :\n          <ActivityIndicator animating={true} color='#2e287c' />}\n        <Divider style={styles.divider}/>\n        {!occupied\n          ? <Text style={styles.freeText}>{occupiedOnSchedule ? 'Зайнято за розкладом' : 'Вільно'}</Text>\n          : <Surface style={{elevation: visible ? 0 : 4, ...styles.occupationInfo}} onTouchEnd={showModal}>\n            <Text style={styles.occupantName}>{userFullName}</Text>\n            <Text style={{\n              backgroundColor: UserTypeColors[occupied.user.type as UserTypes],\n              ...styles.occupantType\n            }}\n            >\n              {UserTypesUa[occupied.user.type as UserTypes]}\n            </Text>\n            <Text style={styles.occupiedUntil}>Зайнято до {getTimeHHMM(new Date(occupied.until))}</Text>\n            <UserInfo userId={occupied.user.id} hideModal={hideModal} visible={visible}/>\n          </Surface>}\n          <View style={styles.queueSetupButtons}>\n            {mode === Mode.PRIMARY && (\n              occupied ? (\n                  <Button mode='contained'>Стати в чергу за цією аудиторією</Button>\n                ) : (\n                  <Button mode='contained'\n                          onPress={() => getInLine([id], [])}\n                  >\n                    Взяти аудиторію\n                  </Button>\n                )\n            )}\n            {mode === Mode.QUEUE_SETUP && (\n              occupied ? (\n                <Button mode='contained' onPress={handleAddToLine}>\n                  {isAlreadyFilteredClassroom(id) ? 'Видалити з черги' : 'Додати до черги'}\n                </Button>\n              ) : (\n                <Button mode='contained'\n                        onPress={() => getInLine([id], [])}\n                >\n                  Взяти аудиторію\n                </Button>\n              )\n            )}\n          </View>\n      </View>\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: '#2e287c',\n  },\n  wrapper: {\n    marginTop: 100,\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  department: {\n    fontSize: 20,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  tags: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  tag: {\n    marginRight: 8\n  },\n  description: {\n    fontSize: 16,\n  },\n  scheduleHeader: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  occupationInfo: {\n    borderRadius: 8,\n    padding: 16\n  },\n  freeText: {\n    textAlign: 'center',\n    fontSize: 20,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    alignSelf: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 32,\n    borderRadius: 32,\n    color: '#bbb'\n  },\n  occupantName: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  occupantType: {\n    color: '#fff',\n    textAlign: 'center',\n    alignSelf: 'center',\n    paddingVertical: 2,\n    paddingHorizontal: 4,\n    marginTop: 8,\n    borderRadius: 4,\n  },\n  occupiedUntil: {\n    textAlign: 'center',\n    marginTop: 8\n  },\n  queueSetupButtons: {\n    marginTop: 32,\n  }\n});","import {ClassroomType, InstrumentType} from \"../../models/models\";\n\ntype InstrumentTypeOrderT = {\n  [index: string]: number;\n};\n\nconst instrumentTypeOrder: InstrumentTypeOrderT = {\n  GrandPiano: 0,\n  UpRightPiano: 1\n};\n\nexport function getClassroomsFilteredByInstruments(classrooms: ClassroomType[],\n                                                   userInstrumentFilterInput: InstrumentType[]) {\n  const instrumentsFilterSorted = sortUserFilterInstruments(userInstrumentFilterInput);\n\n  return classrooms.filter((classroom) => {\n    const instrumentsFilter = [...instrumentsFilterSorted];\n    let classroomInstruments = [...classroom.instruments];\n\n    if (instrumentsFilter.length > classroomInstruments.length) {\n      return false;\n    }\n\n    // first checking all the required grand pianos\n    while (instrumentsFilter[instrumentsFilter.length - 1].type === 'GrandPiano') {\n      const classroomGrandPianoInd = getMinimumSatisfactoryInstrumentIndex(\n        classroomInstruments,\n        'GrandPiano',\n        instrumentsFilter[instrumentsFilter.length - 1].rate\n      );\n      if (classroomGrandPianoInd === -1) {\n        return false;\n      }\n\n      instrumentsFilter.pop();\n      classroomInstruments.splice(classroomGrandPianoInd, 1);\n    }\n\n    // checking all the other instruments\n    while (instrumentsFilter.length) {\n      const classroomInstrumentInd = getMinimumSatisfactoryInstrumentIndex(\n        classroomInstruments, null, instrumentsFilter[instrumentsFilter.length - 1].rate\n      );\n      if (classroomInstrumentInd === -1) {\n        return false;\n      }\n\n      instrumentsFilter.pop();\n      classroomInstruments.splice(classroomInstrumentInd, 1);\n    }\n\n    return true;\n  })\n}\n\nfunction sortUserFilterInstruments(instruments: InstrumentType[]) {\n  return instruments.sort((instA, instB) => {\n\n    if (instrumentTypeOrder[instA.type] === instrumentTypeOrder[instB.type]) {\n      return instA.rate - instB.rate;\n    }\n\n    return instrumentTypeOrder[instB.type] - instrumentTypeOrder[instA.type]\n  })\n}\n\nfunction getMinimumSatisfactoryInstrumentIndex(instruments: InstrumentType[],\n                                               instrumentType: string | null, minimumRate: number) {\n  let bestIndex = -1;\n\n  instruments.forEach((instrument, i) => {\n    if (instrumentType && instrument.type !== instrumentType) return;\n\n    if (instrument.rate < minimumRate) return;\n\n    if (bestIndex === -1 || instrument.rate - minimumRate < instruments[bestIndex].rate - minimumRate) {\n      bestIndex = i;\n    }\n  });\n  return bestIndex;\n}","import * as React from 'react';\nimport {Portal, Button, Modal} from 'react-native-paper';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport {useState} from \"react\";\n\ninterface PropTypes {\n  visible: boolean;\n  hideDialog: () => void;\n}\n\nexport default function InlineDialog({visible, hideDialog}: PropTypes) {\n  const [queueLength, setQueueLength] = useState(27);\n\n  return (\n    <Portal>\n      <Modal visible={visible} onDismiss={hideDialog} contentContainerStyle={styles.containerStyle}>\n        <View>\n          <Text style={styles.header}>Вітаємо!</Text>\n          <Text style={styles.paragraph}>Ви успішно стали в чергу!</Text>\n          <Text style={styles.paragraph}>{`Перед Вами ${queueLength} людей.`}</Text>\n          <View style={styles.buttons}>\n            <Button mode='outlined' icon='information-outline'>\n              Що робити далі?\n            </Button>\n            <Button mode='contained' onPress={hideDialog}>Закрити</Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  paragraph: {\n    textAlign: 'center',\n    marginBottom: 5,\n    fontSize: 16\n  },\n  buttons: {\n    marginTop: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","import {gql} from \"@apollo/client\";\n\nexport const REMOVE_USER_FROM_QUEUE = gql`\n    mutation removeUserFromQueue($where: QueueRecordWhereInput) {\n        removeUserFromQueue(where: $where) {\n          count\n        }\n    }\n`;","import {User} from \"../../models/models\";\nimport {getItem} from \"../../api/asyncStorage\";\nimport {client} from \"../../api/client\";\nimport {REMOVE_USER_FROM_QUEUE} from \"../../api/operations/mutations/removeUserFromQueue\";\n\nexport default async function removeFromLine() {\n  const user: User | undefined = await getItem('user');\n\n  await client.mutate({\n    mutation: REMOVE_USER_FROM_QUEUE,\n    variables: {\n      where: {\n        userId: {\n          equals: (user as unknown as User).id\n        }\n      }\n    }\n  })\n};","import {StyleSheet} from \"react-native\";\nimport {Button, Dialog, Paragraph, Portal} from \"react-native-paper\";\nimport {InstrumentType, Mode} from \"../models/models\";\nimport React from \"react\";\nimport {modeVar} from \"../api/client\";\nimport removeFromLine from \"../helpers/queue/removeFromLine\";\n\ninterface PropTypes {\n  hideDialog: () => void;\n  visible: boolean;\n}\n\nexport default function ConfirmLineOut({hideDialog, visible}: PropTypes) {\n\n  const handleOk = async () => {\n    await removeFromLine();\n    modeVar(Mode.PRIMARY);\n    hideDialog();\n  }\n\n  return <Portal>\n    <Dialog visible={visible} onDismiss={hideDialog}>\n      <Dialog.Title>Увага!</Dialog.Title>\n      <Dialog.Content>\n        <Paragraph>Ви дійсно бажаєте покинути чергу? Цю дію неможливо буде відмінити.</Paragraph>\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button onPress={hideDialog}>Ні</Button>\n        <Button onPress={handleOk}>Так</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Portal>\n};\n\nconst styles = StyleSheet.create({\n\n});","import {gql} from \"@apollo/client\";\r\n\r\nexport const GET_ME = gql`\r\n    query meType {\r\n        me @client\r\n    }\r\n`;","import {Text, StyleSheet, View} from \"react-native\";\nimport ClassroomsCell from \"../../components/ClassroomCell\";\nimport {ClassroomType, CurrentUser, User} from \"../../models/models\";\nimport React from \"react\";\n\ntype PropTypes = {\n  me: CurrentUser;\n  classrooms: ClassroomType[];\n  isMinimalSetup: boolean;\n  minimalClassroomIds: number[];\n  desirableClassroomIds: number[];\n}\n\nexport default function MyClassroomCell({me, classrooms, isMinimalSetup, minimalClassroomIds,\n                                          desirableClassroomIds}: PropTypes) {\n  const {occupiedClassroom: classroom} = me;\n\n  return classroom ? (\n    <View style={styles.container}>\n      <Text style={styles.gridDivider}>\n        Моя аудиторія:\n      </Text>\n      <ClassroomsCell key={classroom.id}\n                      classroom={classrooms\n                        .find(({id}) => id === classroom.id) as ClassroomType}\n                      filteredList={isMinimalSetup ? minimalClassroomIds : desirableClassroomIds}\n      />\n\n    </View>\n  ) : null\n}\n\nconst styles = StyleSheet.create({\n  gridDivider: {\n    color: '#fff',\n    marginBottom: 10,\n    marginLeft: 3,\n    marginRight: 3,\n    paddingLeft: 17,\n    fontSize: 18,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ffffff77',\n    paddingBottom: 10\n  },\n  container: {\n    marginBottom: 10,\n  }\n});","import React, {useEffect, useState} from 'react';\nimport {ImageBackground, ScrollView, StyleSheet, Text, View} from \"react-native\";\nimport {ActivityIndicator, Appbar, Button} from \"react-native-paper\";\nimport useClassrooms from \"../../hooks/useClassrooms\";\nimport {\n  ClassroomType,\n  CurrentUser,\n  InstrumentType,\n  Mode,\n  OccupiedState,\n  QueueState,\n  QueueType\n} from \"../../models/models\";\nimport ClassroomsCell from \"../../components/ClassroomCell\";\nimport Filters, {SpecialT} from \"./Filters\";\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport {RootStackParamList} from \"../../types\";\nimport ClassroomInfo from \"../../components/ClassroomInfo\";\nimport {DrawerActions, useNavigation} from '@react-navigation/native';\nimport {getClassroomsFilteredByInstruments} from \"./helpers\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {\n  client,\n  desirableClassroomIdsVar,\n  isMinimalSetupVar,\n  meVar,\n  minimalClassroomIdsVar,\n  modeVar\n} from \"../../api/client\";\nimport getInLine from \"../../helpers/queue/getInLine\";\nimport InlineDialog from \"../../components/InlineDialog\";\nimport ConfirmLineOut from \"../../components/ConfirmLineOut\";\nimport * as Notifications from \"expo-notifications\";\nimport {GET_CLASSROOMS} from \"../../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../../helpers/helpers\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ME} from \"../../api/operations/queries/me\";\nimport MyClassroomCell from \"./MyClassroomCell\";\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nexport default function Home() {\n  // @ts-ignore\n  return <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName='ClassroomsList'>\n    <Stack.Screen\n      name='ClassroomsList'\n      component={ClassroomsList}\n    />\n    <Stack.Screen\n      name='ClassroomInfo'\n      component={ClassroomInfo}\n    />\n  </Stack.Navigator>\n}\n\nfunction ClassroomsList() {\n  const classrooms: ClassroomType[] = useClassrooms();\n  const [visible, setVisible] = useState(false);\n  const [visibleModalInline, setVisibleModalInline] = useState(false);\n  const [visibleLineOut, setVisibleLineOut] = useState(false);\n  const navigation = useNavigation();\n  const [queueSize, setQueueSize] = useState(27);\n  const [freeClassroomsAmount, setFreeClassroomsAmount] = useState(0);\n  const title = `Людей в черзі: ${queueSize}`;\n  const inlineTitle = `Ви в черзі: ${queueSize}-й`;\n  const {data: {mode}} = useLocal('mode');\n  const {data: {isMinimalSetup}} = useLocal('isMinimalSetup');\n  const {data: {desirableClassroomIds}} = useLocal('desirableClassroomIds');\n  const {data: {minimalClassroomIds}} = useLocal('minimalClassroomIds');\n  const {data: {me}} = useQuery(GET_ME);\n\n  useEffect(() => {\n    client.watchQuery({\n      query: GET_CLASSROOMS,\n      variables: {\n        date: ISODateString(new Date()),\n      },\n      fetchPolicy: 'network-only',\n      pollInterval: 3000\n    }).subscribe({\n      next: ({data}) => {\n      },\n    });\n\n    if (meVar()?.queue.length) {\n      const minimal = meVar()?.queue.filter(({type, state}) => {\n        return type === QueueType.MINIMAL && state === QueueState.ACTIVE;\n      });\n      const desired = meVar()?.queue.filter(({type, state}) => {\n        return type === QueueType.DESIRED && state === QueueState.ACTIVE;\n      });\n      modeVar(Mode.INLINE);\n      minimalClassroomIdsVar(minimal ? minimal.map(({classroom: {id}}) => id) : []);\n      desirableClassroomIdsVar(desired ? desired.map(({classroom: {id}}) => id) : []);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (classrooms) {\n      const myClassroom = classrooms.find(({occupied}) => {\n        return occupied?.user.id === me.id && occupied?.state === OccupiedState.OCCUPIED;\n      });\n      meVar({...me, occupiedClassroom: myClassroom || null});\n      setFreeClassroomsAmount(classrooms?.filter(classroom => !classroom.occupied).length);\n    }\n  }, [classrooms]);\n\n  const showModalInline = () => setVisibleModalInline(true);\n\n  const hideModalInline = () => setVisibleModalInline(false);\n\n  const showModal = () => setVisible(true);\n\n  const hideModal = () => setVisible(false);\n\n  const showConfirmLineOut = () => setVisibleLineOut(true);\n\n  const hideConfirmLineOut = () => setVisibleLineOut(false);\n\n  const applyGeneralFilter = (instruments: InstrumentType[], withWing: boolean,\n                              operaStudioOnly: boolean, special: SpecialT) => {\n\n    const filteredClassroomsByInstruments = instruments.length ?\n      getClassroomsFilteredByInstruments(classrooms, instruments) : classrooms;\n\n    const filteredIds = filteredClassroomsByInstruments\n      .filter(classroom => withWing ? true : !classroom.isWing)\n      .filter(classroom => operaStudioOnly ? classroom.isOperaStudio : true)\n      .filter(classroom => {\n        switch (special) {\n          case \"with\":\n            return true;\n          case \"only\":\n            return classroom.special;\n          case \"without\":\n            return !classroom.special;\n        }\n      })\n      .map(classroom => classroom.id);\n\n    if (isMinimalSetup) {\n      minimalClassroomIdsVar(filteredIds);\n    } else {\n      desirableClassroomIdsVar(filteredIds);\n    }\n  };\n\n  const setAll = () => {\n    const allIds = classrooms.map(({id}) => id);\n\n    if (isMinimalSetup) {\n      minimalClassroomIdsVar(allIds);\n    } else {\n      desirableClassroomIdsVar(allIds);\n    }\n  };\n\n  const handleReady = async () => {\n    await getInLine(minimalClassroomIds, desirableClassroomIds);\n    showModalInline();\n  };\n\n  const filterAwaitingFreeClassrooms = () => {\n    let result;\n    if (classrooms) {\n      result = classrooms.filter(classroom => {\n        if (!classroom.occupied) {\n          //TODO push notifications\n        }\n        return !classroom.occupied\n        // && classroom.queue[0] === me.id;\n      });\n    }\n\n    return result;\n  }\n\n  useEffect(() => {\n    classrooms && filterAwaitingFreeClassrooms();\n  }, [classrooms.filter(({occupied}) => !occupied).length]);\n\n  const filterHiddenClassrooms = ({isHidden, occupied}: ClassroomType) => {\n    return mode === Mode.PRIMARY ? (!(isHidden && !occupied)) : !isHidden;\n  };\n\n  const filterMyPendingClassrooms = ({id, occupied}: ClassroomType) => {\n    return minimalClassroomIds.includes(id) && occupied && occupied.state === OccupiedState.PENDING;\n  }\n\n  return <ImageBackground source={require('../../assets/images/bg.jpg')}\n                          style={{width: '100%', height: '100%'}}>\n    <Appbar style={styles.top}>\n      <Appbar.Action icon=\"menu\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())} color='#fff'/>\n      {mode === Mode.PRIMARY && (\n        <Appbar.Content style={{marginLeft: -10}} title={title} subtitle={'Вільних аудиторій: ' +\n        freeClassroomsAmount} color='#fff'/>\n      )}\n      {mode === Mode.QUEUE_SETUP && (\n        <>\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', width: '88%'}}>\n            <View style={styles.queueSwitcher}>\n              <Button mode={isMinimalSetup ? 'contained' : 'text'}\n                      style={{position: 'relative', width: '50%'}}\n                      color='#fff'\n                      onPress={() => isMinimalSetupVar(true)}\n              >\n                Мінімальні\n              </Button>\n              <Button\n                mode={!isMinimalSetup ? 'contained' : 'text'}\n                style={{position: 'relative', width: '50%'}}\n                color='#fff'\n                onPress={() => isMinimalSetupVar(false)}\n              >\n                Бажані\n              </Button>\n            </View>\n          </View>\n          <Appbar.Action icon=\"content-save\" onPress={showModal} color='#fff'\n                         style={{position: 'absolute', right: 40, top: 28}}/>\n          <Appbar.Action icon=\"filter\" onPress={showModal} color='#fff'\n                         style={{position: 'absolute', right: 0, top: 28}}/>\n        </>\n      )}\n      {mode === Mode.INLINE && (\n        <Appbar.Content style={{marginLeft: -10}} title={inlineTitle} color='#fff'/>\n      )}\n    </Appbar>\n\n    <View style={styles.wrapper}>\n      {classrooms?.length ? <>\n        <ScrollView>\n          <MyClassroomCell me={me} classrooms={classrooms} isMinimalSetup={isMinimalSetup}\n                           minimalClassroomIds={minimalClassroomIds}\n                           desirableClassroomIds={desirableClassroomIds}\n          />\n          {(mode === Mode.PRIMARY || mode === Mode.QUEUE_SETUP || mode === Mode.OWNER) && (\n            <>\n              {me.occupiedClassroom && <Text style={styles.gridDivider}>\n                  Всі аудиторії:\n              </Text>}\n              <View style={styles.grid}>\n                {classrooms && classrooms.filter(filterHiddenClassrooms)\n                  .map(classroom => (\n                      <ClassroomsCell key={classroom.id} classroom={classroom}\n                                      filteredList={isMinimalSetup ? minimalClassroomIds : desirableClassroomIds}\n                      />\n                    )\n                  )}\n              </View>\n            </>\n          )}\n          {mode === Mode.INLINE && (\n            <>\n              {!!classrooms.filter(filterMyPendingClassrooms)?.length && (\n                <>\n                  <Text style={styles.gridDivider}>\n                    Аудиторії, що очікують підтвердження:\n                  </Text>\n                  <View style={{...styles.grid, marginBottom: 10}}>\n                    {classrooms.filter(filterMyPendingClassrooms).map(classroom => (\n                      <ClassroomsCell key={classroom.id} classroom={classroom}\n                                      filteredList={isMinimalSetup ? minimalClassroomIds : desirableClassroomIds}\n                      />\n                    ))}\n                  </View>\n                </>)}\n              <Text style={styles.gridDivider}>Аудиторії, за якими я стою в черзі: </Text>\n              <View style={{...styles.grid, marginBottom: 10}}>\n                {classrooms.filter(({id}) => minimalClassroomIds.includes(id))\n                  .filter(({occupied}) => occupied && occupied.user.id !== me?.id)\n                  .map(classroom => <ClassroomsCell key={classroom.id} classroom={classroom}\n                                                    filteredList={isMinimalSetup ? minimalClassroomIds : desirableClassroomIds}\n                  />)}\n              </View>\n              <Text style={styles.gridDivider}>Інші аудиторії: </Text>\n              <View style={styles.grid}>\n                {classrooms.filter(({id}) => !(minimalClassroomIds.includes(id)))\n                  .map(classroom => <ClassroomsCell key={classroom.id} classroom={classroom}\n                                                    filteredList={isMinimalSetup ? minimalClassroomIds : desirableClassroomIds}\n                  />)}\n              </View>\n            </>\n          )}\n        </ScrollView>\n        {mode === Mode.PRIMARY && (\n          <Button style={styles.getInLine} mode='contained' color='#2b5dff'\n                  onPress={() => modeVar(Mode.QUEUE_SETUP)}>\n            <Text>Стати в чергу ({queueSize + 1}-й)</Text>\n          </Button>\n        )}\n        {mode === Mode.QUEUE_SETUP && (\n          <>\n            <Button style={styles.approve} mode='contained' color='#2b5dff'\n                    onPress={handleReady}>\n              <Text>Готово ({queueSize + 1}-й)</Text>\n            </Button>\n            <Button style={styles.getOutLine} mode='contained' color='#f91354'\n                    onPress={() => modeVar(Mode.PRIMARY)}>\n              <Text>Скасувати</Text>\n            </Button>\n          </>\n        )}\n        {mode === Mode.INLINE && (\n          <Button style={styles.getOutLineSingle} mode='contained' color='#f91354'\n                  onPress={showConfirmLineOut}\n          >\n            <Text>Вийти з черги</Text>\n          </Button>\n        )}\n      </> : <ActivityIndicator animating color='#fff'/>}\n      <Filters hideModal={hideModal} visible={visible} apply={applyGeneralFilter}/>\n      <InlineDialog visible={visibleModalInline} hideDialog={hideModalInline}/>\n      <ConfirmLineOut hideDialog={hideConfirmLineOut} visible={visibleLineOut}/>\n    </View>\n  </ImageBackground>\n}\n\nconst styles = StyleSheet.create(\n  {\n    top: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      paddingTop: 26,\n      height: 80,\n      backgroundColor: 'transparent',\n      zIndex: 1\n    },\n    grid: {\n      marginBottom: 80,\n      marginLeft: 2,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'flex-start'\n    },\n    getInLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 90,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLine: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 90,\n      left: 20,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    getOutLineSingle: {\n      position: 'absolute',\n      zIndex: 1,\n      bottom: 90,\n      width: '55%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    approve: {\n      position: 'absolute',\n      zIndex: 1,\n      right: 20,\n      bottom: 90,\n      width: '43%',\n      height: 50,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    wrapper: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'transparent',\n      marginTop: 80,\n      paddingBottom: 70,\n    },\n    queueSwitcher: {\n      flexDirection: 'row',\n      width: '76%',\n      justifyContent: 'space-between',\n      paddingHorizontal: 5,\n      marginHorizontal: 20,\n      alignItems: 'center',\n    },\n    gridDivider: {\n      color: '#fff',\n      marginBottom: 10,\n      marginLeft: 3,\n      marginRight: 3,\n      paddingLeft: 17,\n      fontSize: 18,\n      borderBottomWidth: 1,\n      borderBottomColor: '#ffffff77',\n      paddingBottom: 10\n    }\n  });","import React, {useEffect, useState} from 'react';\nimport {View, Text, StyleSheet, ImageBackground} from \"react-native\";\nimport {Appbar, Button, Title} from \"react-native-paper\";\nimport {client, meVar} from \"../../api/client\";\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\nimport {getItem, removeItem, setItem} from \"../../api/asyncStorage\";\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function Frozen() {\n  const message1 = 'Ваш аккаунт заблоковано. Для отримання доступу разблокуйте аккаунт в учбовій частині. Ваш номер:';\n  const message2 = 'Після разблокування оновіть сторінку або поверніться на сторінку входу.';\n  const [storageUser, setStorageUser] = useState<any>(null);\n  const [update, setUpdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    getItem('user').then(u => setStorageUser(u));\n  },[]);\n\n  useEffect(() => {\n    if (storageUser) {\n      setIsLoading(true);\n      client.query({\n        query: GET_USER_BY_ID,\n        variables: {\n          where: {id: storageUser.id}\n        },\n        fetchPolicy: 'network-only',\n      }).then(({data: {user}}) => {\n        setItem('user', user).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  }, [update]);\n\n  const navigateToLogin = async () => {\n    await removeItem('user');\n    meVar(null);\n  };\n\n  return <ImageBackground source={require('../../assets/images/bg.jpg')}\n                          style={{width: '100%', height: '100%'}}>\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        <Title style={styles.title}>Аккаунт заблоковано</Title>\n        <Text style={styles.message}>{message1}</Text>\n        <Title style={styles.number}>{storageUser ? storageUser.id : ''}</Title>\n        <Text style={styles.message}>{message2}</Text>\n        <Button mode='contained' style={styles.button} loading={isLoading} disabled={isLoading}\n                onPress={() => setUpdate(prevState => !prevState)}\n        >\n          Оновити\n        </Button>\n        <Button mode='contained' style={styles.button} onPress={navigateToLogin}>\n          На сторінку входу\n        </Button>\n      </View>\n    </View>\n  </ImageBackground>\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  top: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    paddingTop: 26,\n    height: 80,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  wrapper: {},\n  title: {\n    textAlign: 'center',\n    fontSize: 32,\n    padding: 10,\n    lineHeight: 40,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 15\n  },\n  number: {\n    textAlign: 'center',\n    fontSize: 50,\n    padding: 30,\n    lineHeight: 60,\n    marginHorizontal: 20,\n    marginBottom: 12,\n    color: '#fff',\n    borderRadius: 8,\n    borderStyle: \"solid\",\n    borderColor: '#ffffff33',\n    borderWidth: 1,\n  },\n  message: {\n    textAlign: 'center',\n    borderRadius: 8,\n    backgroundColor: '#b5e3ff77',\n    padding: 8,\n    marginHorizontal: 20,\n    marginBottom: 10,\n    fontSize: 20,\n  },\n  button: {\n    width: 200,\n    alignSelf: 'center',\n    marginTop: 10,\n    height: 50,\n    justifyContent: 'center'\n  }\n});","import React from 'react';\nimport {StyleSheet, Text, ImageBackground, View} from \"react-native\";\nimport {ProgressBar} from \"react-native-paper\";\n\nexport default function Loading() {\n\n  return (\n    <ImageBackground source={require('../assets/images/bg.jpg')} style={styles.background}>\n      <Text style={styles.text}>Loading...</Text>\n      <View style={{width: '70%', marginTop: 40}}>\n        <ProgressBar indeterminate color='#fff'/>\n      </View>\n    </ImageBackground>\n  )\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 24\n  }\n});","import React from 'react';\nimport {ImageBackground, Image, View} from \"react-native\";\nimport {ProgressBar} from \"react-native-paper\";\n\nexport default function Splash() {\n\n  return (\n    <ImageBackground source={require('./../assets/images/bg.jpg')} style={{\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }}>\n      <Image source={require('./../assets/images/au_logo_shadow.png')} style={{\n        width: '80%',\n        resizeMode: 'contain',\n        height: 130,\n      }}/>\n      <View style={{width: '70%', marginTop: 40}}>\n        <ProgressBar indeterminate color='#fff'/>\n      </View>\n    </ImageBackground>\n  )\n};","import {DarkTheme, DefaultTheme, NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport * as React from 'react';\nimport {useCallback, useEffect, useState} from 'react';\nimport {ColorSchemeName, StyleSheet} from 'react-native';\nimport {RootStackParamList} from '../types';\nimport Login from \"../screens/Login\";\nimport SignUp from \"../screens/Signup/SignUp\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport ForgotPasswordSuccess from \"../screens/ForgotPasswordSuccess\";\nimport {createDrawerNavigator} from \"@react-navigation/drawer\";\nimport Users from \"../screens/Users\";\nimport CustomSidebarMenu from \"./CustomSidebarMenu\";\nimport Schedule from \"../screens/Schedule\";\nimport Profile from \"../screens/Profile\";\nimport Settings from \"../screens/Settings\";\nimport {getItem} from \"../api/asyncStorage\";\nimport {AccountStatuses, User, UserTypes} from \"../models/models\";\nimport SignUpStepTwo from \"../screens/Signup/SignUpStepTwo\";\nimport Verification from \"../screens/Signup/Verification\";\nimport Home from \"../screens/ClassroomsList/ClassroomsList\";\nimport {meVar} from \"../api/client\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ME} from \"../api/operations/queries/me\";\nimport Frozen from \"../screens/Signup/Frozen\";\nimport Loading from \"../screens/Loading\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport Splash from \"../screens/Splash\";\n\nexport default function Navigation({colorScheme}: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator/>\n    </NavigationContainer>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator<RootStackParamList>();\n\n\nfunction RootNavigator() {\n  const [accountStatus, setAccountStatus] = useState<AccountStatuses | null>(null);\n  const {data: {me}} = useQuery(GET_ME);\n  const [appIsReady, setAppIsReady] = useState(false);\n\n  const getAccountStatus = (user: User) => {\n    //@ts-ignore\n    const {studentInfo, employeeInfo} = user;\n\n    const isStudent = !!studentInfo;\n    const status = isStudent ? studentInfo?.accountStatus : employeeInfo?.accountStatus;\n    setAccountStatus(status);\n  }\n\n  const getMe = async () => {\n    if (!me) {\n      try {\n        const user: User | undefined = await getItem('user')\n        if (user) {\n          getAccountStatus(user);\n          meVar(user);\n        }\n      } catch (e) {\n        alert(JSON.stringify(e));\n      }\n    } else {\n      getAccountStatus(me);\n    }\n  }\n\n  useEffect(() => {\n    getMe();\n  }, [me]);\n\n  const checkStatus = ((accountStatus: AccountStatuses) => {\n    switch (accountStatus) {\n      case AccountStatuses.UNVERIFIED:\n        return Verification;\n      case AccountStatuses.FROZEN:\n      case AccountStatuses.ACADEMIC_LEAVE:\n        return Frozen;\n      case AccountStatuses.ACTIVE:\n        return Home;\n      default:\n        return Loading;\n    }\n  });\n\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        await getMe();\n        await SplashScreen.preventAutoHideAsync();\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n return (\n    me ? <Drawer.Navigator initialRouteName=\"Home\" drawerStyle={styles.drawer} drawerContentOptions={{\n        activeBackgroundColor: '#2b5dff',\n        labelStyle: {\n          fontSize: 20,\n          color: '#fff'\n        },\n      }}\n                           drawerContent={(props: any) => <CustomSidebarMenu {...props}/>}\n      >\n        <Drawer.Screen name=\"Home\"\n          //TODO set !== to ===\n                       component={checkStatus(accountStatus as AccountStatuses)}\n                       options={{\n                         title: 'Аудиторії',\n                       }}\n                       initialParams={{id: meVar()?.id}}\n        />\n        <Drawer.Screen name=\"Users\" component={Users} options={{\n          title: 'Довідник',\n        }}/>\n        <Drawer.Screen name=\"Schedule\" component={Schedule} options={{\n          title: 'Розклад'\n        }}/>\n        <Drawer.Screen name=\"Profile\" component={Profile} options={{\n          title: 'Мій профіль'\n        }}/>\n        <Drawer.Screen name=\"Settings\" component={Settings} options={{\n          title: 'Налаштування'\n        }}/>\n      </Drawer.Navigator>\n      : <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName=\"Login\">\n        <Stack.Screen\n          name=\"Login\"\n          component={appIsReady ? Login : Splash}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUp}\n        />\n        <Stack.Screen\n          name=\"SignUpStepTwo\"\n          component={SignUpStepTwo}\n        />\n        <Stack.Screen\n          name=\"ForgotPassword\"\n          component={ForgotPassword}\n        />\n        <Stack.Screen\n          name=\"ForgotPasswordSuccess\"\n          component={ForgotPasswordSuccess}\n        />\n      </Stack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawer: {\n    backgroundColor: '#2e287c',\n  }\n});\n","import {StatusBar} from 'expo-status-bar';\nimport React from 'react';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {ApolloProvider} from \"@apollo/client\";\nimport {client} from \"./api/client\";\nimport {Provider, DefaultTheme, ProgressBar} from \"react-native-paper\";\n\nexport default function App() {\n  const colorScheme = useColorScheme();\n\n  const theme = {\n    ...DefaultTheme,\n    roundness: 8,\n    colors: {\n      ...DefaultTheme.colors,\n      primary: '#2b5dff',\n      accent: '#ffc000',\n    },\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <SafeAreaProvider>\n        <Provider theme={theme}>\n          <Navigation colorScheme={colorScheme}/>\n          <StatusBar/>\n        </Provider>\n      </SafeAreaProvider>\n    </ApolloProvider>\n  );\n}\n","var map = {\n\t\"./af\": 251,\n\t\"./af.js\": 251,\n\t\"./ar\": 252,\n\t\"./ar-dz\": 253,\n\t\"./ar-dz.js\": 253,\n\t\"./ar-kw\": 254,\n\t\"./ar-kw.js\": 254,\n\t\"./ar-ly\": 255,\n\t\"./ar-ly.js\": 255,\n\t\"./ar-ma\": 256,\n\t\"./ar-ma.js\": 256,\n\t\"./ar-sa\": 257,\n\t\"./ar-sa.js\": 257,\n\t\"./ar-tn\": 258,\n\t\"./ar-tn.js\": 258,\n\t\"./ar.js\": 252,\n\t\"./az\": 259,\n\t\"./az.js\": 259,\n\t\"./be\": 260,\n\t\"./be.js\": 260,\n\t\"./bg\": 261,\n\t\"./bg.js\": 261,\n\t\"./bm\": 262,\n\t\"./bm.js\": 262,\n\t\"./bn\": 263,\n\t\"./bn-bd\": 264,\n\t\"./bn-bd.js\": 264,\n\t\"./bn.js\": 263,\n\t\"./bo\": 265,\n\t\"./bo.js\": 265,\n\t\"./br\": 266,\n\t\"./br.js\": 266,\n\t\"./bs\": 267,\n\t\"./bs.js\": 267,\n\t\"./ca\": 268,\n\t\"./ca.js\": 268,\n\t\"./cs\": 269,\n\t\"./cs.js\": 269,\n\t\"./cv\": 270,\n\t\"./cv.js\": 270,\n\t\"./cy\": 271,\n\t\"./cy.js\": 271,\n\t\"./da\": 272,\n\t\"./da.js\": 272,\n\t\"./de\": 273,\n\t\"./de-at\": 274,\n\t\"./de-at.js\": 274,\n\t\"./de-ch\": 275,\n\t\"./de-ch.js\": 275,\n\t\"./de.js\": 273,\n\t\"./dv\": 276,\n\t\"./dv.js\": 276,\n\t\"./el\": 277,\n\t\"./el.js\": 277,\n\t\"./en-au\": 278,\n\t\"./en-au.js\": 278,\n\t\"./en-ca\": 279,\n\t\"./en-ca.js\": 279,\n\t\"./en-gb\": 280,\n\t\"./en-gb.js\": 280,\n\t\"./en-ie\": 281,\n\t\"./en-ie.js\": 281,\n\t\"./en-il\": 282,\n\t\"./en-il.js\": 282,\n\t\"./en-in\": 283,\n\t\"./en-in.js\": 283,\n\t\"./en-nz\": 284,\n\t\"./en-nz.js\": 284,\n\t\"./en-sg\": 285,\n\t\"./en-sg.js\": 285,\n\t\"./eo\": 286,\n\t\"./eo.js\": 286,\n\t\"./es\": 287,\n\t\"./es-do\": 288,\n\t\"./es-do.js\": 288,\n\t\"./es-mx\": 289,\n\t\"./es-mx.js\": 289,\n\t\"./es-us\": 290,\n\t\"./es-us.js\": 290,\n\t\"./es.js\": 287,\n\t\"./et\": 291,\n\t\"./et.js\": 291,\n\t\"./eu\": 292,\n\t\"./eu.js\": 292,\n\t\"./fa\": 293,\n\t\"./fa.js\": 293,\n\t\"./fi\": 294,\n\t\"./fi.js\": 294,\n\t\"./fil\": 295,\n\t\"./fil.js\": 295,\n\t\"./fo\": 296,\n\t\"./fo.js\": 296,\n\t\"./fr\": 297,\n\t\"./fr-ca\": 298,\n\t\"./fr-ca.js\": 298,\n\t\"./fr-ch\": 299,\n\t\"./fr-ch.js\": 299,\n\t\"./fr.js\": 297,\n\t\"./fy\": 300,\n\t\"./fy.js\": 300,\n\t\"./ga\": 301,\n\t\"./ga.js\": 301,\n\t\"./gd\": 302,\n\t\"./gd.js\": 302,\n\t\"./gl\": 303,\n\t\"./gl.js\": 303,\n\t\"./gom-deva\": 304,\n\t\"./gom-deva.js\": 304,\n\t\"./gom-latn\": 305,\n\t\"./gom-latn.js\": 305,\n\t\"./gu\": 306,\n\t\"./gu.js\": 306,\n\t\"./he\": 307,\n\t\"./he.js\": 307,\n\t\"./hi\": 308,\n\t\"./hi.js\": 308,\n\t\"./hr\": 309,\n\t\"./hr.js\": 309,\n\t\"./hu\": 310,\n\t\"./hu.js\": 310,\n\t\"./hy-am\": 311,\n\t\"./hy-am.js\": 311,\n\t\"./id\": 312,\n\t\"./id.js\": 312,\n\t\"./is\": 313,\n\t\"./is.js\": 313,\n\t\"./it\": 314,\n\t\"./it-ch\": 315,\n\t\"./it-ch.js\": 315,\n\t\"./it.js\": 314,\n\t\"./ja\": 316,\n\t\"./ja.js\": 316,\n\t\"./jv\": 317,\n\t\"./jv.js\": 317,\n\t\"./ka\": 318,\n\t\"./ka.js\": 318,\n\t\"./kk\": 319,\n\t\"./kk.js\": 319,\n\t\"./km\": 320,\n\t\"./km.js\": 320,\n\t\"./kn\": 321,\n\t\"./kn.js\": 321,\n\t\"./ko\": 322,\n\t\"./ko.js\": 322,\n\t\"./ku\": 323,\n\t\"./ku.js\": 323,\n\t\"./ky\": 324,\n\t\"./ky.js\": 324,\n\t\"./lb\": 325,\n\t\"./lb.js\": 325,\n\t\"./lo\": 326,\n\t\"./lo.js\": 326,\n\t\"./lt\": 327,\n\t\"./lt.js\": 327,\n\t\"./lv\": 328,\n\t\"./lv.js\": 328,\n\t\"./me\": 329,\n\t\"./me.js\": 329,\n\t\"./mi\": 330,\n\t\"./mi.js\": 330,\n\t\"./mk\": 331,\n\t\"./mk.js\": 331,\n\t\"./ml\": 332,\n\t\"./ml.js\": 332,\n\t\"./mn\": 333,\n\t\"./mn.js\": 333,\n\t\"./mr\": 334,\n\t\"./mr.js\": 334,\n\t\"./ms\": 335,\n\t\"./ms-my\": 336,\n\t\"./ms-my.js\": 336,\n\t\"./ms.js\": 335,\n\t\"./mt\": 337,\n\t\"./mt.js\": 337,\n\t\"./my\": 338,\n\t\"./my.js\": 338,\n\t\"./nb\": 339,\n\t\"./nb.js\": 339,\n\t\"./ne\": 340,\n\t\"./ne.js\": 340,\n\t\"./nl\": 341,\n\t\"./nl-be\": 342,\n\t\"./nl-be.js\": 342,\n\t\"./nl.js\": 341,\n\t\"./nn\": 343,\n\t\"./nn.js\": 343,\n\t\"./oc-lnc\": 344,\n\t\"./oc-lnc.js\": 344,\n\t\"./pa-in\": 345,\n\t\"./pa-in.js\": 345,\n\t\"./pl\": 346,\n\t\"./pl.js\": 346,\n\t\"./pt\": 347,\n\t\"./pt-br\": 348,\n\t\"./pt-br.js\": 348,\n\t\"./pt.js\": 347,\n\t\"./ro\": 349,\n\t\"./ro.js\": 349,\n\t\"./ru\": 350,\n\t\"./ru.js\": 350,\n\t\"./sd\": 351,\n\t\"./sd.js\": 351,\n\t\"./se\": 352,\n\t\"./se.js\": 352,\n\t\"./si\": 353,\n\t\"./si.js\": 353,\n\t\"./sk\": 354,\n\t\"./sk.js\": 354,\n\t\"./sl\": 355,\n\t\"./sl.js\": 355,\n\t\"./sq\": 356,\n\t\"./sq.js\": 356,\n\t\"./sr\": 357,\n\t\"./sr-cyrl\": 358,\n\t\"./sr-cyrl.js\": 358,\n\t\"./sr.js\": 357,\n\t\"./ss\": 359,\n\t\"./ss.js\": 359,\n\t\"./sv\": 360,\n\t\"./sv.js\": 360,\n\t\"./sw\": 361,\n\t\"./sw.js\": 361,\n\t\"./ta\": 362,\n\t\"./ta.js\": 362,\n\t\"./te\": 363,\n\t\"./te.js\": 363,\n\t\"./tet\": 364,\n\t\"./tet.js\": 364,\n\t\"./tg\": 365,\n\t\"./tg.js\": 365,\n\t\"./th\": 366,\n\t\"./th.js\": 366,\n\t\"./tk\": 367,\n\t\"./tk.js\": 367,\n\t\"./tl-ph\": 368,\n\t\"./tl-ph.js\": 368,\n\t\"./tlh\": 369,\n\t\"./tlh.js\": 369,\n\t\"./tr\": 370,\n\t\"./tr.js\": 370,\n\t\"./tzl\": 371,\n\t\"./tzl.js\": 371,\n\t\"./tzm\": 372,\n\t\"./tzm-latn\": 373,\n\t\"./tzm-latn.js\": 373,\n\t\"./tzm.js\": 372,\n\t\"./ug-cn\": 374,\n\t\"./ug-cn.js\": 374,\n\t\"./uk\": 375,\n\t\"./uk.js\": 375,\n\t\"./ur\": 376,\n\t\"./ur.js\": 376,\n\t\"./uz\": 377,\n\t\"./uz-latn\": 378,\n\t\"./uz-latn.js\": 378,\n\t\"./uz.js\": 377,\n\t\"./vi\": 379,\n\t\"./vi.js\": 379,\n\t\"./x-pseudo\": 380,\n\t\"./x-pseudo.js\": 380,\n\t\"./yo\": 381,\n\t\"./yo.js\": 381,\n\t\"./zh-cn\": 382,\n\t\"./zh-cn.js\": 382,\n\t\"./zh-hk\": 383,\n\t\"./zh-hk.js\": 383,\n\t\"./zh-mo\": 384,\n\t\"./zh-mo.js\": 384,\n\t\"./zh-tw\": 385,\n\t\"./zh-tw.js\": 385\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 543;","module.exports = __webpack_public_path__ + \"static/media/au_logo.de05cb10.png\";","module.exports = __webpack_public_path__ + \"static/media/specialPiano.11c92757.png\";"],"sourceRoot":""}